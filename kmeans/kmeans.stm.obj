
kmeans.stm:     file format elf64-x86-64


Disassembly of section .init:

00000000000011a8 <_init>:
    11a8:	48 83 ec 08          	sub    $0x8,%rsp
    11ac:	48 8b 05 35 ee 20 00 	mov    0x20ee35(%rip),%rax        # 20ffe8 <__gmon_start__>
    11b3:	48 85 c0             	test   %rax,%rax
    11b6:	74 02                	je     11ba <_init+0x12>
    11b8:	ff d0                	callq  *%rax
    11ba:	48 83 c4 08          	add    $0x8,%rsp
    11be:	c3                   	retq   

Disassembly of section .plt:

00000000000011c0 <.plt>:
    11c0:	ff 35 8a ec 20 00    	pushq  0x20ec8a(%rip)        # 20fe50 <_GLOBAL_OFFSET_TABLE_+0x8>
    11c6:	ff 25 8c ec 20 00    	jmpq   *0x20ec8c(%rip)        # 20fe58 <_GLOBAL_OFFSET_TABLE_+0x10>
    11cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000011d0 <getenv@plt>:
    11d0:	ff 25 8a ec 20 00    	jmpq   *0x20ec8a(%rip)        # 20fe60 <getenv@GLIBC_2.2.5>
    11d6:	68 00 00 00 00       	pushq  $0x0
    11db:	e9 e0 ff ff ff       	jmpq   11c0 <.plt>

00000000000011e0 <putchar@plt>:
    11e0:	ff 25 82 ec 20 00    	jmpq   *0x20ec82(%rip)        # 20fe68 <putchar@GLIBC_2.2.5>
    11e6:	68 01 00 00 00       	pushq  $0x1
    11eb:	e9 d0 ff ff ff       	jmpq   11c0 <.plt>

00000000000011f0 <pthread_create@plt>:
    11f0:	ff 25 7a ec 20 00    	jmpq   *0x20ec7a(%rip)        # 20fe70 <pthread_create@GLIBC_2.2.5>
    11f6:	68 02 00 00 00       	pushq  $0x2
    11fb:	e9 c0 ff ff ff       	jmpq   11c0 <.plt>

0000000000001200 <pthread_cond_broadcast@plt>:
    1200:	ff 25 72 ec 20 00    	jmpq   *0x20ec72(%rip)        # 20fe78 <pthread_cond_broadcast@GLIBC_2.3.2>
    1206:	68 03 00 00 00       	pushq  $0x3
    120b:	e9 b0 ff ff ff       	jmpq   11c0 <.plt>

0000000000001210 <strtod@plt>:
    1210:	ff 25 6a ec 20 00    	jmpq   *0x20ec6a(%rip)        # 20fe80 <strtod@GLIBC_2.2.5>
    1216:	68 04 00 00 00       	pushq  $0x4
    121b:	e9 a0 ff ff ff       	jmpq   11c0 <.plt>

0000000000001220 <pthread_cond_wait@plt>:
    1220:	ff 25 62 ec 20 00    	jmpq   *0x20ec62(%rip)        # 20fe88 <pthread_cond_wait@GLIBC_2.3.2>
    1226:	68 05 00 00 00       	pushq  $0x5
    122b:	e9 90 ff ff ff       	jmpq   11c0 <.plt>

0000000000001230 <fclose@plt>:
    1230:	ff 25 5a ec 20 00    	jmpq   *0x20ec5a(%rip)        # 20fe90 <fclose@GLIBC_2.2.5>
    1236:	68 06 00 00 00       	pushq  $0x6
    123b:	e9 80 ff ff ff       	jmpq   11c0 <.plt>

0000000000001240 <__stack_chk_fail@plt>:
    1240:	ff 25 52 ec 20 00    	jmpq   *0x20ec52(%rip)        # 20fe98 <__stack_chk_fail@GLIBC_2.4>
    1246:	68 07 00 00 00       	pushq  $0x7
    124b:	e9 70 ff ff ff       	jmpq   11c0 <.plt>

0000000000001250 <rewind@plt>:
    1250:	ff 25 4a ec 20 00    	jmpq   *0x20ec4a(%rip)        # 20fea0 <rewind@GLIBC_2.2.5>
    1256:	68 08 00 00 00       	pushq  $0x8
    125b:	e9 60 ff ff ff       	jmpq   11c0 <.plt>

0000000000001260 <pthread_setspecific@plt>:
    1260:	ff 25 42 ec 20 00    	jmpq   *0x20ec42(%rip)        # 20fea8 <pthread_setspecific@GLIBC_2.2.5>
    1266:	68 09 00 00 00       	pushq  $0x9
    126b:	e9 50 ff ff ff       	jmpq   11c0 <.plt>

0000000000001270 <pthread_mutex_destroy@plt>:
    1270:	ff 25 3a ec 20 00    	jmpq   *0x20ec3a(%rip)        # 20feb0 <pthread_mutex_destroy@GLIBC_2.2.5>
    1276:	68 0a 00 00 00       	pushq  $0xa
    127b:	e9 40 ff ff ff       	jmpq   11c0 <.plt>

0000000000001280 <gettimeofday@plt>:
    1280:	ff 25 32 ec 20 00    	jmpq   *0x20ec32(%rip)        # 20feb8 <gettimeofday@GLIBC_2.2.5>
    1286:	68 0b 00 00 00       	pushq  $0xb
    128b:	e9 30 ff ff ff       	jmpq   11c0 <.plt>

0000000000001290 <__assert_fail@plt>:
    1290:	ff 25 2a ec 20 00    	jmpq   *0x20ec2a(%rip)        # 20fec0 <__assert_fail@GLIBC_2.2.5>
    1296:	68 0c 00 00 00       	pushq  $0xc
    129b:	e9 20 ff ff ff       	jmpq   11c0 <.plt>

00000000000012a0 <memset@plt>:
    12a0:	ff 25 22 ec 20 00    	jmpq   *0x20ec22(%rip)        # 20fec8 <memset@GLIBC_2.2.5>
    12a6:	68 0d 00 00 00       	pushq  $0xd
    12ab:	e9 10 ff ff ff       	jmpq   11c0 <.plt>

00000000000012b0 <close@plt>:
    12b0:	ff 25 1a ec 20 00    	jmpq   *0x20ec1a(%rip)        # 20fed0 <close@GLIBC_2.2.5>
    12b6:	68 0e 00 00 00       	pushq  $0xe
    12bb:	e9 00 ff ff ff       	jmpq   11c0 <.plt>

00000000000012c0 <read@plt>:
    12c0:	ff 25 12 ec 20 00    	jmpq   *0x20ec12(%rip)        # 20fed8 <read@GLIBC_2.2.5>
    12c6:	68 0f 00 00 00       	pushq  $0xf
    12cb:	e9 f0 fe ff ff       	jmpq   11c0 <.plt>

00000000000012d0 <pthread_attr_init@plt>:
    12d0:	ff 25 0a ec 20 00    	jmpq   *0x20ec0a(%rip)        # 20fee0 <pthread_attr_init@GLIBC_2.2.5>
    12d6:	68 10 00 00 00       	pushq  $0x10
    12db:	e9 e0 fe ff ff       	jmpq   11c0 <.plt>

00000000000012e0 <fgets@plt>:
    12e0:	ff 25 02 ec 20 00    	jmpq   *0x20ec02(%rip)        # 20fee8 <fgets@GLIBC_2.2.5>
    12e6:	68 11 00 00 00       	pushq  $0x11
    12eb:	e9 d0 fe ff ff       	jmpq   11c0 <.plt>

00000000000012f0 <pthread_cond_signal@plt>:
    12f0:	ff 25 fa eb 20 00    	jmpq   *0x20ebfa(%rip)        # 20fef0 <pthread_cond_signal@GLIBC_2.3.2>
    12f6:	68 12 00 00 00       	pushq  $0x12
    12fb:	e9 c0 fe ff ff       	jmpq   11c0 <.plt>

0000000000001300 <calloc@plt>:
    1300:	ff 25 f2 eb 20 00    	jmpq   *0x20ebf2(%rip)        # 20fef8 <calloc@GLIBC_2.2.5>
    1306:	68 13 00 00 00       	pushq  $0x13
    130b:	e9 b0 fe ff ff       	jmpq   11c0 <.plt>

0000000000001310 <strtol@plt>:
    1310:	ff 25 ea eb 20 00    	jmpq   *0x20ebea(%rip)        # 20ff00 <strtol@GLIBC_2.2.5>
    1316:	68 14 00 00 00       	pushq  $0x14
    131b:	e9 a0 fe ff ff       	jmpq   11c0 <.plt>

0000000000001320 <memcpy@plt>:
    1320:	ff 25 e2 eb 20 00    	jmpq   *0x20ebe2(%rip)        # 20ff08 <memcpy@GLIBC_2.14>
    1326:	68 15 00 00 00       	pushq  $0x15
    132b:	e9 90 fe ff ff       	jmpq   11c0 <.plt>

0000000000001330 <sqrtf@plt>:
    1330:	ff 25 da eb 20 00    	jmpq   *0x20ebda(%rip)        # 20ff10 <sqrtf@GLIBC_2.2.5>
    1336:	68 16 00 00 00       	pushq  $0x16
    133b:	e9 80 fe ff ff       	jmpq   11c0 <.plt>

0000000000001340 <pthread_cond_init@plt>:
    1340:	ff 25 d2 eb 20 00    	jmpq   *0x20ebd2(%rip)        # 20ff18 <pthread_cond_init@GLIBC_2.3.2>
    1346:	68 17 00 00 00       	pushq  $0x17
    134b:	e9 70 fe ff ff       	jmpq   11c0 <.plt>

0000000000001350 <pthread_getspecific@plt>:
    1350:	ff 25 ca eb 20 00    	jmpq   *0x20ebca(%rip)        # 20ff20 <pthread_getspecific@GLIBC_2.2.5>
    1356:	68 18 00 00 00       	pushq  $0x18
    135b:	e9 60 fe ff ff       	jmpq   11c0 <.plt>

0000000000001360 <pthread_mutex_unlock@plt>:
    1360:	ff 25 c2 eb 20 00    	jmpq   *0x20ebc2(%rip)        # 20ff28 <pthread_mutex_unlock@GLIBC_2.2.5>
    1366:	68 19 00 00 00       	pushq  $0x19
    136b:	e9 50 fe ff ff       	jmpq   11c0 <.plt>

0000000000001370 <malloc@plt>:
    1370:	ff 25 ba eb 20 00    	jmpq   *0x20ebba(%rip)        # 20ff30 <malloc@GLIBC_2.2.5>
    1376:	68 1a 00 00 00       	pushq  $0x1a
    137b:	e9 40 fe ff ff       	jmpq   11c0 <.plt>

0000000000001380 <realloc@plt>:
    1380:	ff 25 b2 eb 20 00    	jmpq   *0x20ebb2(%rip)        # 20ff38 <realloc@GLIBC_2.2.5>
    1386:	68 1b 00 00 00       	pushq  $0x1b
    138b:	e9 30 fe ff ff       	jmpq   11c0 <.plt>

0000000000001390 <__printf_chk@plt>:
    1390:	ff 25 aa eb 20 00    	jmpq   *0x20ebaa(%rip)        # 20ff40 <__printf_chk@GLIBC_2.3.4>
    1396:	68 1c 00 00 00       	pushq  $0x1c
    139b:	e9 20 fe ff ff       	jmpq   11c0 <.plt>

00000000000013a0 <pthread_key_create@plt>:
    13a0:	ff 25 a2 eb 20 00    	jmpq   *0x20eba2(%rip)        # 20ff48 <pthread_key_create@GLIBC_2.2.5>
    13a6:	68 1d 00 00 00       	pushq  $0x1d
    13ab:	e9 10 fe ff ff       	jmpq   11c0 <.plt>

00000000000013b0 <__longjmp_chk@plt>:
    13b0:	ff 25 9a eb 20 00    	jmpq   *0x20eb9a(%rip)        # 20ff50 <__longjmp_chk@GLIBC_2.11>
    13b6:	68 1e 00 00 00       	pushq  $0x1e
    13bb:	e9 00 fe ff ff       	jmpq   11c0 <.plt>

00000000000013c0 <pthread_cond_destroy@plt>:
    13c0:	ff 25 92 eb 20 00    	jmpq   *0x20eb92(%rip)        # 20ff58 <pthread_cond_destroy@GLIBC_2.3.2>
    13c6:	68 1f 00 00 00       	pushq  $0x1f
    13cb:	e9 f0 fd ff ff       	jmpq   11c0 <.plt>

00000000000013d0 <open@plt>:
    13d0:	ff 25 8a eb 20 00    	jmpq   *0x20eb8a(%rip)        # 20ff60 <open@GLIBC_2.2.5>
    13d6:	68 20 00 00 00       	pushq  $0x20
    13db:	e9 e0 fd ff ff       	jmpq   11c0 <.plt>

00000000000013e0 <fopen@plt>:
    13e0:	ff 25 82 eb 20 00    	jmpq   *0x20eb82(%rip)        # 20ff68 <fopen@GLIBC_2.2.5>
    13e6:	68 21 00 00 00       	pushq  $0x21
    13eb:	e9 d0 fd ff ff       	jmpq   11c0 <.plt>

00000000000013f0 <perror@plt>:
    13f0:	ff 25 7a eb 20 00    	jmpq   *0x20eb7a(%rip)        # 20ff70 <perror@GLIBC_2.2.5>
    13f6:	68 22 00 00 00       	pushq  $0x22
    13fb:	e9 c0 fd ff ff       	jmpq   11c0 <.plt>

0000000000001400 <strtok@plt>:
    1400:	ff 25 72 eb 20 00    	jmpq   *0x20eb72(%rip)        # 20ff78 <strtok@GLIBC_2.2.5>
    1406:	68 23 00 00 00       	pushq  $0x23
    140b:	e9 b0 fd ff ff       	jmpq   11c0 <.plt>

0000000000001410 <pthread_join@plt>:
    1410:	ff 25 6a eb 20 00    	jmpq   *0x20eb6a(%rip)        # 20ff80 <pthread_join@GLIBC_2.2.5>
    1416:	68 24 00 00 00       	pushq  $0x24
    141b:	e9 a0 fd ff ff       	jmpq   11c0 <.plt>

0000000000001420 <getopt@plt>:
    1420:	ff 25 62 eb 20 00    	jmpq   *0x20eb62(%rip)        # 20ff88 <getopt@GLIBC_2.2.5>
    1426:	68 25 00 00 00       	pushq  $0x25
    142b:	e9 90 fd ff ff       	jmpq   11c0 <.plt>

0000000000001430 <exit@plt>:
    1430:	ff 25 5a eb 20 00    	jmpq   *0x20eb5a(%rip)        # 20ff90 <exit@GLIBC_2.2.5>
    1436:	68 26 00 00 00       	pushq  $0x26
    143b:	e9 80 fd ff ff       	jmpq   11c0 <.plt>

0000000000001440 <fwrite@plt>:
    1440:	ff 25 52 eb 20 00    	jmpq   *0x20eb52(%rip)        # 20ff98 <fwrite@GLIBC_2.2.5>
    1446:	68 27 00 00 00       	pushq  $0x27
    144b:	e9 70 fd ff ff       	jmpq   11c0 <.plt>

0000000000001450 <__fprintf_chk@plt>:
    1450:	ff 25 4a eb 20 00    	jmpq   *0x20eb4a(%rip)        # 20ffa0 <__fprintf_chk@GLIBC_2.3.4>
    1456:	68 28 00 00 00       	pushq  $0x28
    145b:	e9 60 fd ff ff       	jmpq   11c0 <.plt>

0000000000001460 <posix_memalign@plt>:
    1460:	ff 25 42 eb 20 00    	jmpq   *0x20eb42(%rip)        # 20ffa8 <posix_memalign@GLIBC_2.2.5>
    1466:	68 29 00 00 00       	pushq  $0x29
    146b:	e9 50 fd ff ff       	jmpq   11c0 <.plt>

0000000000001470 <__sigsetjmp@plt>:
    1470:	ff 25 3a eb 20 00    	jmpq   *0x20eb3a(%rip)        # 20ffb0 <__sigsetjmp@GLIBC_2.2.5>
    1476:	68 2a 00 00 00       	pushq  $0x2a
    147b:	e9 40 fd ff ff       	jmpq   11c0 <.plt>

0000000000001480 <pthread_mutex_init@plt>:
    1480:	ff 25 32 eb 20 00    	jmpq   *0x20eb32(%rip)        # 20ffb8 <pthread_mutex_init@GLIBC_2.2.5>
    1486:	68 2b 00 00 00       	pushq  $0x2b
    148b:	e9 30 fd ff ff       	jmpq   11c0 <.plt>

0000000000001490 <pthread_mutex_lock@plt>:
    1490:	ff 25 2a eb 20 00    	jmpq   *0x20eb2a(%rip)        # 20ffc0 <pthread_mutex_lock@GLIBC_2.2.5>
    1496:	68 2c 00 00 00       	pushq  $0x2c
    149b:	e9 20 fd ff ff       	jmpq   11c0 <.plt>

00000000000014a0 <pthread_mutex_trylock@plt>:
    14a0:	ff 25 22 eb 20 00    	jmpq   *0x20eb22(%rip)        # 20ffc8 <pthread_mutex_trylock@GLIBC_2.2.5>
    14a6:	68 2d 00 00 00       	pushq  $0x2d
    14ab:	e9 10 fd ff ff       	jmpq   11c0 <.plt>

Disassembly of section .plt.got:

00000000000014b0 <free@plt>:
    14b0:	ff 25 1a eb 20 00    	jmpq   *0x20eb1a(%rip)        # 20ffd0 <free@GLIBC_2.2.5>
    14b6:	66 90                	xchg   %ax,%ax

00000000000014b8 <__cxa_finalize@plt>:
    14b8:	ff 25 3a eb 20 00    	jmpq   *0x20eb3a(%rip)        # 20fff8 <__cxa_finalize@GLIBC_2.2.5>
    14be:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000014c0 <stm_quiesce_barrier.isra.0.constprop.1>:
    14c0:	53                   	push   %rbx
    14c1:	48 8d 3d b0 f1 a0 00 	lea    0xa0f1b0(%rip),%rdi        # a10678 <_tinystm+0x8004f8>
    14c8:	e8 c3 ff ff ff       	callq  1490 <pthread_mutex_lock@plt>
    14cd:	48 8b 05 94 f1 a0 00 	mov    0xa0f194(%rip),%rax        # a10668 <_tinystm+0x8004e8>
    14d4:	48 ff c8             	dec    %rax
    14d7:	48 89 05 8a f1 a0 00 	mov    %rax,0xa0f18a(%rip)        # a10668 <_tinystm+0x8004e8>
    14de:	48 8b 05 7b f1 a0 00 	mov    0xa0f17b(%rip),%rax        # a10660 <_tinystm+0x8004e0>
    14e5:	48 85 c0             	test   %rax,%rax
    14e8:	75 0b                	jne    14f5 <stm_quiesce_barrier.isra.0.constprop.1+0x35>
    14ea:	48 c7 05 6b f1 a0 00 	movq   $0x1,0xa0f16b(%rip)        # a10660 <_tinystm+0x8004e0>
    14f1:	01 00 00 00 
    14f5:	48 8d 1d 84 ec 20 00 	lea    0x20ec84(%rip),%rbx        # 210180 <_tinystm>
    14fc:	48 8b 05 5d f1 a0 00 	mov    0xa0f15d(%rip),%rax        # a10660 <_tinystm+0x8004e0>
    1503:	48 85 c0             	test   %rax,%rax
    1506:	48 8b 05 5b f1 a0 00 	mov    0xa0f15b(%rip),%rax        # a10668 <_tinystm+0x8004e8>
    150d:	74 45                	je     1554 <stm_quiesce_barrier.isra.0.constprop.1+0x94>
    150f:	48 85 c0             	test   %rax,%rax
    1512:	75 2e                	jne    1542 <stm_quiesce_barrier.isra.0.constprop.1+0x82>
    1514:	48 89 df             	mov    %rbx,%rdi
    1517:	b9 00 00 20 00       	mov    $0x200000,%ecx
    151c:	48 c7 05 d9 ec a0 00 	movq   $0x0,0xa0ecd9(%rip)        # a10200 <_tinystm+0x800080>
    1523:	00 00 00 00 
    1527:	f3 ab                	rep stos %eax,%es:(%rdi)
    1529:	48 8d 3d 70 f1 a0 00 	lea    0xa0f170(%rip),%rdi        # a106a0 <_tinystm+0x800520>
    1530:	48 c7 05 25 f1 a0 00 	movq   $0x0,0xa0f125(%rip)        # a10660 <_tinystm+0x8004e0>
    1537:	00 00 00 00 
    153b:	e8 c0 fc ff ff       	callq  1200 <pthread_cond_broadcast@plt>
    1540:	eb ba                	jmp    14fc <stm_quiesce_barrier.isra.0.constprop.1+0x3c>
    1542:	48 8d 35 2f f1 a0 00 	lea    0xa0f12f(%rip),%rsi        # a10678 <_tinystm+0x8004f8>
    1549:	48 8d 7e 28          	lea    0x28(%rsi),%rdi
    154d:	e8 ce fc ff ff       	callq  1220 <pthread_cond_wait@plt>
    1552:	eb a8                	jmp    14fc <stm_quiesce_barrier.isra.0.constprop.1+0x3c>
    1554:	5b                   	pop    %rbx
    1555:	48 8d 3d 1c f1 a0 00 	lea    0xa0f11c(%rip),%rdi        # a10678 <_tinystm+0x8004f8>
    155c:	48 ff c0             	inc    %rax
    155f:	48 89 05 02 f1 a0 00 	mov    %rax,0xa0f102(%rip)        # a10668 <_tinystm+0x8004e8>
    1566:	e9 f5 fd ff ff       	jmpq   1360 <pthread_mutex_unlock@plt>
    156b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001570 <main>:
    1570:	41 57                	push   %r15
    1572:	41 56                	push   %r14
    1574:	41 89 fe             	mov    %edi,%r14d
    1577:	41 55                	push   %r13
    1579:	41 54                	push   %r12
    157b:	bf 40 42 0f 00       	mov    $0xf4240,%edi
    1580:	55                   	push   %rbp
    1581:	53                   	push   %rbx
    1582:	49 89 f5             	mov    %rsi,%r13
    1585:	4c 8d 25 60 bc 00 00 	lea    0xbc60(%rip),%r12        # d1ec <__PRETTY_FUNCTION__.5405+0x2dc>
    158c:	31 ed                	xor    %ebp,%ebp
    158e:	45 31 ff             	xor    %r15d,%r15d
    1591:	48 83 ec 68          	sub    $0x68,%rsp
    1595:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    159c:	00 00 
    159e:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    15a3:	31 c0                	xor    %eax,%eax
    15a5:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    15ac:	00 00 
    15ae:	e8 bd fd ff ff       	callq  1370 <malloc@plt>
    15b3:	f3 0f 10 1d 9d bc 00 	movss  0xbc9d(%rip),%xmm3        # d258 <__PRETTY_FUNCTION__.6333+0x8>
    15ba:	00 
    15bb:	48 89 c3             	mov    %rax,%rbx
    15be:	f3 0f 11 5c 24 28    	movss  %xmm3,0x28(%rsp)
    15c4:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
    15cb:	00 
    15cc:	c7 44 24 2c 01 00 00 	movl   $0x1,0x2c(%rsp)
    15d3:	00 
    15d4:	c7 44 24 14 04 00 00 	movl   $0x4,0x14(%rsp)
    15db:	00 
    15dc:	c7 44 24 10 0d 00 00 	movl   $0xd,0x10(%rsp)
    15e3:	00 
    15e4:	0f 1f 40 00          	nopl   0x0(%rax)
    15e8:	48 8d 15 fe ba 00 00 	lea    0xbafe(%rip),%rdx        # d0ed <__PRETTY_FUNCTION__.5405+0x1dd>
    15ef:	4c 89 ee             	mov    %r13,%rsi
    15f2:	44 89 f7             	mov    %r14d,%edi
    15f5:	e8 26 fe ff ff       	callq  1420 <getopt@plt>
    15fa:	83 f8 ff             	cmp    $0xffffffff,%eax
    15fd:	0f 84 cd 00 00 00    	je     16d0 <main+0x160>
    1603:	83 e8 62             	sub    $0x62,%eax
    1606:	83 f8 18             	cmp    $0x18,%eax
    1609:	0f 87 96 06 00 00    	ja     1ca5 <main+0x735>
    160f:	49 63 04 84          	movslq (%r12,%rax,4),%rax
    1613:	4c 01 e0             	add    %r12,%rax
    1616:	ff e0                	jmpq   *%rax
    1618:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    161f:	00 
    1620:	48 8b 3d 99 ea 20 00 	mov    0x20ea99(%rip),%rdi        # 2100c0 <optarg@@GLIBC_2.2.5>
    1627:	31 f6                	xor    %esi,%esi
    1629:	e8 e2 fb ff ff       	callq  1210 <strtod@plt>
    162e:	66 0f ef d2          	pxor   %xmm2,%xmm2
    1632:	f2 0f 5a d0          	cvtsd2ss %xmm0,%xmm2
    1636:	f3 0f 11 54 24 28    	movss  %xmm2,0x28(%rsp)
    163c:	eb aa                	jmp    15e8 <main+0x78>
    163e:	66 90                	xchg   %ax,%ax
    1640:	48 8b 3d 79 ea 20 00 	mov    0x20ea79(%rip),%rdi        # 2100c0 <optarg@@GLIBC_2.2.5>
    1647:	ba 0a 00 00 00       	mov    $0xa,%edx
    164c:	31 f6                	xor    %esi,%esi
    164e:	e8 bd fc ff ff       	callq  1310 <strtol@plt>
    1653:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    1657:	eb 8f                	jmp    15e8 <main+0x78>
    1659:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1660:	48 8b 3d 59 ea 20 00 	mov    0x20ea59(%rip),%rdi        # 2100c0 <optarg@@GLIBC_2.2.5>
    1667:	ba 0a 00 00 00       	mov    $0xa,%edx
    166c:	31 f6                	xor    %esi,%esi
    166e:	e8 9d fc ff ff       	callq  1310 <strtol@plt>
    1673:	89 44 24 14          	mov    %eax,0x14(%rsp)
    1677:	e9 6c ff ff ff       	jmpq   15e8 <main+0x78>
    167c:	0f 1f 40 00          	nopl   0x0(%rax)
    1680:	48 8b 3d 39 ea 20 00 	mov    0x20ea39(%rip),%rdi        # 2100c0 <optarg@@GLIBC_2.2.5>
    1687:	ba 0a 00 00 00       	mov    $0xa,%edx
    168c:	31 f6                	xor    %esi,%esi
    168e:	e8 7d fc ff ff       	callq  1310 <strtol@plt>
    1693:	89 44 24 10          	mov    %eax,0x10(%rsp)
    1697:	e9 4c ff ff ff       	jmpq   15e8 <main+0x78>
    169c:	0f 1f 40 00          	nopl   0x0(%rax)
    16a0:	4c 8b 3d 19 ea 20 00 	mov    0x20ea19(%rip),%r15        # 2100c0 <optarg@@GLIBC_2.2.5>
    16a7:	e9 3c ff ff ff       	jmpq   15e8 <main+0x78>
    16ac:	0f 1f 40 00          	nopl   0x0(%rax)
    16b0:	bd 01 00 00 00       	mov    $0x1,%ebp
    16b5:	e9 2e ff ff ff       	jmpq   15e8 <main+0x78>
    16ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    16c0:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%rsp)
    16c7:	00 
    16c8:	e9 1b ff ff ff       	jmpq   15e8 <main+0x78>
    16cd:	0f 1f 00             	nopl   (%rax)
    16d0:	4d 85 ff             	test   %r15,%r15
    16d3:	0f 84 cc 05 00 00    	je     1ca5 <main+0x735>
    16d9:	8b 4c 24 14          	mov    0x14(%rsp),%ecx
    16dd:	39 4c 24 10          	cmp    %ecx,0x10(%rsp)
    16e1:	0f 8c a1 05 00 00    	jl     1c88 <main+0x718>
    16e7:	85 ed                	test   %ebp,%ebp
    16e9:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%rsp)
    16f0:	00 
    16f1:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%rsp)
    16f8:	00 
    16f9:	0f 84 1a 03 00 00    	je     1a19 <main+0x4a9>
    16ff:	48 8d 15 f4 b9 00 00 	lea    0xb9f4(%rip),%rdx        # d0fa <__PRETTY_FUNCTION__.5405+0x1ea>
    1706:	31 f6                	xor    %esi,%esi
    1708:	31 c0                	xor    %eax,%eax
    170a:	4c 89 ff             	mov    %r15,%rdi
    170d:	e8 be fc ff ff       	callq  13d0 <open@plt>
    1712:	83 f8 ff             	cmp    $0xffffffff,%eax
    1715:	89 c3                	mov    %eax,%ebx
    1717:	0f 84 ee 05 00 00    	je     1d0b <main+0x79b>
    171d:	48 8d 74 24 44       	lea    0x44(%rsp),%rsi
    1722:	ba 04 00 00 00       	mov    $0x4,%edx
    1727:	89 c7                	mov    %eax,%edi
    1729:	e8 92 fb ff ff       	callq  12c0 <read@plt>
    172e:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
    1733:	ba 04 00 00 00       	mov    $0x4,%edx
    1738:	89 df                	mov    %ebx,%edi
    173a:	e8 81 fb ff ff       	callq  12c0 <read@plt>
    173f:	8b 7c 24 44          	mov    0x44(%rsp),%edi
    1743:	0f af 7c 24 40       	imul   0x40(%rsp),%edi
    1748:	48 63 ff             	movslq %edi,%rdi
    174b:	48 c1 e7 02          	shl    $0x2,%rdi
    174f:	e8 1c fc ff ff       	callq  1370 <malloc@plt>
    1754:	48 85 c0             	test   %rax,%rax
    1757:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    175c:	0f 84 32 06 00 00    	je     1d94 <main+0x824>
    1762:	48 63 7c 24 44       	movslq 0x44(%rsp),%rdi
    1767:	48 c1 e7 03          	shl    $0x3,%rdi
    176b:	e8 00 fc ff ff       	callq  1370 <malloc@plt>
    1770:	48 85 c0             	test   %rax,%rax
    1773:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    1778:	0f 84 f2 05 00 00    	je     1d70 <main+0x800>
    177e:	8b 7c 24 44          	mov    0x44(%rsp),%edi
    1782:	0f af 7c 24 40       	imul   0x40(%rsp),%edi
    1787:	48 63 ff             	movslq %edi,%rdi
    178a:	48 c1 e7 02          	shl    $0x2,%rdi
    178e:	e8 dd fb ff ff       	callq  1370 <malloc@plt>
    1793:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    1798:	48 85 c0             	test   %rax,%rax
    179b:	48 89 01             	mov    %rax,(%rcx)
    179e:	0f 84 29 05 00 00    	je     1ccd <main+0x75d>
    17a4:	8b 4c 24 44          	mov    0x44(%rsp),%ecx
    17a8:	44 8b 44 24 40       	mov    0x40(%rsp),%r8d
    17ad:	83 f9 01             	cmp    $0x1,%ecx
    17b0:	7e 2d                	jle    17df <main+0x26f>
    17b2:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
    17b7:	49 63 f0             	movslq %r8d,%rsi
    17ba:	8d 79 fe             	lea    -0x2(%rcx),%edi
    17bd:	48 c1 e6 02          	shl    $0x2,%rsi
    17c1:	48 8d 14 30          	lea    (%rax,%rsi,1),%rdx
    17c5:	49 8d 7c fa 10       	lea    0x10(%r10,%rdi,8),%rdi
    17ca:	49 8d 42 08          	lea    0x8(%r10),%rax
    17ce:	66 90                	xchg   %ax,%ax
    17d0:	48 89 10             	mov    %rdx,(%rax)
    17d3:	48 83 c0 08          	add    $0x8,%rax
    17d7:	48 01 f2             	add    %rsi,%rdx
    17da:	48 39 c7             	cmp    %rax,%rdi
    17dd:	75 f1                	jne    17d0 <main+0x260>
    17df:	41 0f af c8          	imul   %r8d,%ecx
    17e3:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    17e8:	89 df                	mov    %ebx,%edi
    17ea:	48 63 d1             	movslq %ecx,%rdx
    17ed:	48 c1 e2 02          	shl    $0x2,%rdx
    17f1:	e8 ca fa ff ff       	callq  12c0 <read@plt>
    17f6:	89 df                	mov    %ebx,%edi
    17f8:	e8 b3 fa ff ff       	callq  12b0 <close@plt>
    17fd:	e8 be 25 00 00       	callq  3dc0 <stm_init>
    1802:	31 ff                	xor    %edi,%edi
    1804:	e8 d7 b0 00 00       	callq  c8e0 <mod_mem_init>
    1809:	48 8d 3d 38 b9 00 00 	lea    0xb938(%rip),%rdi        # d148 <__PRETTY_FUNCTION__.5405+0x238>
    1810:	e8 bb f9 ff ff       	callq  11d0 <getenv@plt>
    1815:	48 85 c0             	test   %rax,%rax
    1818:	74 05                	je     181f <main+0x2af>
    181a:	e8 61 b5 00 00       	callq  cd80 <mod_stats_init>
    181f:	48 63 7c 24 0c       	movslq 0xc(%rsp),%rdi
    1824:	e8 47 1b 00 00       	callq  3370 <thread_startup>
    1829:	48 63 7c 24 44       	movslq 0x44(%rsp),%rdi
    182e:	48 c1 e7 02          	shl    $0x2,%rdi
    1832:	e8 39 fb ff ff       	callq  1370 <malloc@plt>
    1837:	48 85 c0             	test   %rax,%rax
    183a:	49 89 c7             	mov    %rax,%r15
    183d:	0f 84 a9 04 00 00    	je     1cec <main+0x77c>
    1843:	8b 54 24 44          	mov    0x44(%rsp),%edx
    1847:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
    184c:	0f af 54 24 40       	imul   0x40(%rsp),%edx
    1851:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    1856:	48 8b 3b             	mov    (%rbx),%rdi
    1859:	48 63 d2             	movslq %edx,%rdx
    185c:	48 c1 e2 02          	shl    $0x2,%rdx
    1860:	e8 bb fa ff ff       	callq  1320 <memcpy@plt>
    1865:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    186c:	00 00 
    186e:	41 57                	push   %r15
    1870:	48 89 d9             	mov    %rbx,%rcx
    1873:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
    1878:	50                   	push   %rax
    1879:	48 8d 44 24 4c       	lea    0x4c(%rsp),%rax
    187e:	50                   	push   %rax
    187f:	8b 44 24 28          	mov    0x28(%rsp),%eax
    1883:	50                   	push   %rax
    1884:	44 8b 4c 24 34       	mov    0x34(%rsp),%r9d
    1889:	44 8b 44 24 4c       	mov    0x4c(%rsp),%r8d
    188e:	8b 54 24 60          	mov    0x60(%rsp),%edx
    1892:	8b 74 24 64          	mov    0x64(%rsp),%esi
    1896:	8b 7c 24 2c          	mov    0x2c(%rsp),%edi
    189a:	f3 0f 10 44 24 48    	movss  0x48(%rsp),%xmm0
    18a0:	e8 2b 06 00 00       	callq  1ed0 <cluster_exec>
    18a5:	48 83 c4 20          	add    $0x20,%rsp
    18a9:	8b 54 24 3c          	mov    0x3c(%rsp),%edx
    18ad:	85 d2                	test   %edx,%edx
    18af:	0f 8e 87 00 00 00    	jle    193c <main+0x3cc>
    18b5:	4c 8d 25 a9 b8 00 00 	lea    0xb8a9(%rip),%r12        # d165 <__PRETTY_FUNCTION__.5405+0x255>
    18bc:	31 ed                	xor    %ebp,%ebp
    18be:	45 31 ed             	xor    %r13d,%r13d
    18c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    18c8:	48 8d 35 92 b8 00 00 	lea    0xb892(%rip),%rsi        # d161 <__PRETTY_FUNCTION__.5405+0x251>
    18cf:	31 c0                	xor    %eax,%eax
    18d1:	44 89 ea             	mov    %r13d,%edx
    18d4:	bf 01 00 00 00       	mov    $0x1,%edi
    18d9:	e8 b2 fa ff ff       	callq  1390 <__printf_chk@plt>
    18de:	8b 44 24 40          	mov    0x40(%rsp),%eax
    18e2:	85 c0                	test   %eax,%eax
    18e4:	7e 3d                	jle    1923 <main+0x3b3>
    18e6:	31 db                	xor    %ebx,%ebx
    18e8:	45 31 f6             	xor    %r14d,%r14d
    18eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    18f0:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    18f5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    18f9:	4c 89 e6             	mov    %r12,%rsi
    18fc:	bf 01 00 00 00       	mov    $0x1,%edi
    1901:	41 83 c6 01          	add    $0x1,%r14d
    1905:	48 8b 04 28          	mov    (%rax,%rbp,1),%rax
    1909:	f3 0f 5a 04 18       	cvtss2sd (%rax,%rbx,1),%xmm0
    190e:	b8 01 00 00 00       	mov    $0x1,%eax
    1913:	48 83 c3 04          	add    $0x4,%rbx
    1917:	e8 74 fa ff ff       	callq  1390 <__printf_chk@plt>
    191c:	44 39 74 24 40       	cmp    %r14d,0x40(%rsp)
    1921:	7f cd                	jg     18f0 <main+0x380>
    1923:	bf 0a 00 00 00       	mov    $0xa,%edi
    1928:	41 83 c5 01          	add    $0x1,%r13d
    192c:	48 83 c5 08          	add    $0x8,%rbp
    1930:	e8 ab f8 ff ff       	callq  11e0 <putchar@plt>
    1935:	44 39 6c 24 3c       	cmp    %r13d,0x3c(%rsp)
    193a:	7f 8c                	jg     18c8 <main+0x358>
    193c:	f2 0f 10 05 ac e7 20 	movsd  0x20e7ac(%rip),%xmm0        # 2100f0 <global_time>
    1943:	00 
    1944:	48 8d 35 1e b8 00 00 	lea    0xb81e(%rip),%rsi        # d169 <__PRETTY_FUNCTION__.5405+0x259>
    194b:	bf 01 00 00 00       	mov    $0x1,%edi
    1950:	b8 01 00 00 00       	mov    $0x1,%eax
    1955:	e8 36 fa ff ff       	callq  1390 <__printf_chk@plt>
    195a:	4c 89 ff             	mov    %r15,%rdi
    195d:	e8 4e fb ff ff       	callq  14b0 <free@plt>
    1962:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    1967:	e8 44 fb ff ff       	callq  14b0 <free@plt>
    196c:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    1971:	48 8b 38             	mov    (%rax),%rdi
    1974:	e8 37 fb ff ff       	callq  14b0 <free@plt>
    1979:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    197e:	e8 2d fb ff ff       	callq  14b0 <free@plt>
    1983:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    1988:	e8 23 fb ff ff       	callq  14b0 <free@plt>
    198d:	48 8d 3d b4 b7 00 00 	lea    0xb7b4(%rip),%rdi        # d148 <__PRETTY_FUNCTION__.5405+0x238>
    1994:	e8 37 f8 ff ff       	callq  11d0 <getenv@plt>
    1999:	48 85 c0             	test   %rax,%rax
    199c:	74 4a                	je     19e8 <main+0x478>
    199e:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
    19a3:	48 8d 3d d2 b7 00 00 	lea    0xb7d2(%rip),%rdi        # d17c <__PRETTY_FUNCTION__.5405+0x26c>
    19aa:	48 89 de             	mov    %rbx,%rsi
    19ad:	e8 3e b1 00 00       	callq  caf0 <stm_get_global_stats>
    19b2:	85 c0                	test   %eax,%eax
    19b4:	0f 85 94 02 00 00    	jne    1c4e <main+0x6de>
    19ba:	48 8d 3d e0 b7 00 00 	lea    0xb7e0(%rip),%rdi        # d1a1 <__PRETTY_FUNCTION__.5405+0x291>
    19c1:	48 89 de             	mov    %rbx,%rsi
    19c4:	e8 27 b1 00 00       	callq  caf0 <stm_get_global_stats>
    19c9:	85 c0                	test   %eax,%eax
    19cb:	0f 85 9a 02 00 00    	jne    1c6b <main+0x6fb>
    19d1:	48 8d 3d ed b7 00 00 	lea    0xb7ed(%rip),%rdi        # d1c5 <__PRETTY_FUNCTION__.5405+0x2b5>
    19d8:	48 89 de             	mov    %rbx,%rsi
    19db:	e8 10 b1 00 00       	callq  caf0 <stm_get_global_stats>
    19e0:	85 c0                	test   %eax,%eax
    19e2:	0f 85 49 02 00 00    	jne    1c31 <main+0x6c1>
    19e8:	e8 c3 24 00 00       	callq  3eb0 <stm_exit>
    19ed:	31 c0                	xor    %eax,%eax
    19ef:	e8 2c 20 00 00       	callq  3a20 <thread_shutdown>
    19f4:	31 c0                	xor    %eax,%eax
    19f6:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
    19fb:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    1a02:	00 00 
    1a04:	0f 85 85 03 00 00    	jne    1d8f <main+0x81f>
    1a0a:	48 83 c4 68          	add    $0x68,%rsp
    1a0e:	5b                   	pop    %rbx
    1a0f:	5d                   	pop    %rbp
    1a10:	41 5c                	pop    %r12
    1a12:	41 5d                	pop    %r13
    1a14:	41 5e                	pop    %r14
    1a16:	41 5f                	pop    %r15
    1a18:	c3                   	retq   
    1a19:	48 8d 35 9f ba 00 00 	lea    0xba9f(%rip),%rsi        # d4bf <__PRETTY_FUNCTION__.3065+0xa7>
    1a20:	4c 89 ff             	mov    %r15,%rdi
    1a23:	4c 8d 2d 15 b7 00 00 	lea    0xb715(%rip),%r13        # d13f <__PRETTY_FUNCTION__.5405+0x22f>
    1a2a:	e8 b1 f9 ff ff       	callq  13e0 <fopen@plt>
    1a2f:	48 85 c0             	test   %rax,%rax
    1a32:	49 89 c4             	mov    %rax,%r12
    1a35:	75 1d                	jne    1a54 <main+0x4e4>
    1a37:	e9 cf 02 00 00       	jmpq   1d0b <main+0x79b>
    1a3c:	0f 1f 40 00          	nopl   0x0(%rax)
    1a40:	4c 89 ee             	mov    %r13,%rsi
    1a43:	48 89 df             	mov    %rbx,%rdi
    1a46:	e8 b5 f9 ff ff       	callq  1400 <strtok@plt>
    1a4b:	48 85 c0             	test   %rax,%rax
    1a4e:	0f 85 a5 01 00 00    	jne    1bf9 <main+0x689>
    1a54:	4c 89 e2             	mov    %r12,%rdx
    1a57:	be 40 42 0f 00       	mov    $0xf4240,%esi
    1a5c:	48 89 df             	mov    %rbx,%rdi
    1a5f:	e8 7c f8 ff ff       	callq  12e0 <fgets@plt>
    1a64:	48 85 c0             	test   %rax,%rax
    1a67:	75 d7                	jne    1a40 <main+0x4d0>
    1a69:	4c 89 e7             	mov    %r12,%rdi
    1a6c:	4c 8d 2d cc b6 00 00 	lea    0xb6cc(%rip),%r13        # d13f <__PRETTY_FUNCTION__.5405+0x22f>
    1a73:	e8 d8 f7 ff ff       	callq  1250 <rewind@plt>
    1a78:	eb 1a                	jmp    1a94 <main+0x524>
    1a7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1a80:	4c 89 ee             	mov    %r13,%rsi
    1a83:	48 89 df             	mov    %rbx,%rdi
    1a86:	e8 75 f9 ff ff       	callq  1400 <strtok@plt>
    1a8b:	48 85 c0             	test   %rax,%rax
    1a8e:	0f 85 78 01 00 00    	jne    1c0c <main+0x69c>
    1a94:	4c 89 e2             	mov    %r12,%rdx
    1a97:	be 40 42 0f 00       	mov    $0xf4240,%esi
    1a9c:	48 89 df             	mov    %rbx,%rdi
    1a9f:	e8 3c f8 ff ff       	callq  12e0 <fgets@plt>
    1aa4:	48 85 c0             	test   %rax,%rax
    1aa7:	75 d7                	jne    1a80 <main+0x510>
    1aa9:	8b 7c 24 44          	mov    0x44(%rsp),%edi
    1aad:	0f af 7c 24 40       	imul   0x40(%rsp),%edi
    1ab2:	48 63 ff             	movslq %edi,%rdi
    1ab5:	48 c1 e7 02          	shl    $0x2,%rdi
    1ab9:	e8 b2 f8 ff ff       	callq  1370 <malloc@plt>
    1abe:	48 85 c0             	test   %rax,%rax
    1ac1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    1ac6:	0f 84 e2 01 00 00    	je     1cae <main+0x73e>
    1acc:	48 63 7c 24 44       	movslq 0x44(%rsp),%rdi
    1ad1:	48 c1 e7 03          	shl    $0x3,%rdi
    1ad5:	e8 96 f8 ff ff       	callq  1370 <malloc@plt>
    1ada:	48 85 c0             	test   %rax,%rax
    1add:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    1ae2:	0f 84 69 02 00 00    	je     1d51 <main+0x7e1>
    1ae8:	8b 7c 24 44          	mov    0x44(%rsp),%edi
    1aec:	0f af 7c 24 40       	imul   0x40(%rsp),%edi
    1af1:	48 63 ff             	movslq %edi,%rdi
    1af4:	48 c1 e7 02          	shl    $0x2,%rdi
    1af8:	e8 73 f8 ff ff       	callq  1370 <malloc@plt>
    1afd:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    1b02:	48 85 c0             	test   %rax,%rax
    1b05:	48 89 01             	mov    %rax,(%rcx)
    1b08:	0f 84 24 02 00 00    	je     1d32 <main+0x7c2>
    1b0e:	8b 74 24 44          	mov    0x44(%rsp),%esi
    1b12:	83 fe 01             	cmp    $0x1,%esi
    1b15:	7e 30                	jle    1b47 <main+0x5d7>
    1b17:	48 63 4c 24 40       	movslq 0x40(%rsp),%rcx
    1b1c:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    1b21:	83 ee 02             	sub    $0x2,%esi
    1b24:	48 8d 74 f7 10       	lea    0x10(%rdi,%rsi,8),%rsi
    1b29:	48 c1 e1 02          	shl    $0x2,%rcx
    1b2d:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
    1b31:	48 8d 47 08          	lea    0x8(%rdi),%rax
    1b35:	0f 1f 00             	nopl   (%rax)
    1b38:	48 89 10             	mov    %rdx,(%rax)
    1b3b:	48 83 c0 08          	add    $0x8,%rax
    1b3f:	48 01 ca             	add    %rcx,%rdx
    1b42:	48 39 f0             	cmp    %rsi,%rax
    1b45:	75 f1                	jne    1b38 <main+0x5c8>
    1b47:	4c 8d 35 f5 b5 00 00 	lea    0xb5f5(%rip),%r14        # d143 <__PRETTY_FUNCTION__.5405+0x233>
    1b4e:	4c 89 e7             	mov    %r12,%rdi
    1b51:	e8 fa f6 ff ff       	callq  1250 <rewind@plt>
    1b56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1b5d:	00 00 00 
    1b60:	4c 89 e2             	mov    %r12,%rdx
    1b63:	be 40 42 0f 00       	mov    $0xf4240,%esi
    1b68:	48 89 df             	mov    %rbx,%rdi
    1b6b:	e8 70 f7 ff ff       	callq  12e0 <fgets@plt>
    1b70:	48 85 c0             	test   %rax,%rax
    1b73:	74 77                	je     1bec <main+0x67c>
    1b75:	48 8d 35 c3 b5 00 00 	lea    0xb5c3(%rip),%rsi        # d13f <__PRETTY_FUNCTION__.5405+0x22f>
    1b7c:	48 89 df             	mov    %rbx,%rdi
    1b7f:	e8 7c f8 ff ff       	callq  1400 <strtok@plt>
    1b84:	48 85 c0             	test   %rax,%rax
    1b87:	74 d7                	je     1b60 <main+0x5f0>
    1b89:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
    1b8d:	85 c9                	test   %ecx,%ecx
    1b8f:	7e 72                	jle    1c03 <main+0x693>
    1b91:	8d 55 01             	lea    0x1(%rbp),%edx
    1b94:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    1b99:	48 63 c5             	movslq %ebp,%rax
    1b9c:	4c 63 fa             	movslq %edx,%r15
    1b9f:	4c 29 f8             	sub    %r15,%rax
    1ba2:	4c 8d 2c 81          	lea    (%rcx,%rax,4),%r13
    1ba6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1bad:	00 00 00 
    1bb0:	31 ff                	xor    %edi,%edi
    1bb2:	4c 89 f6             	mov    %r14,%rsi
    1bb5:	e8 46 f8 ff ff       	callq  1400 <strtok@plt>
    1bba:	31 f6                	xor    %esi,%esi
    1bbc:	48 89 c7             	mov    %rax,%rdi
    1bbf:	e8 4c f6 ff ff       	callq  1210 <strtod@plt>
    1bc4:	66 0f ef c9          	pxor   %xmm1,%xmm1
    1bc8:	44 89 f8             	mov    %r15d,%eax
    1bcb:	44 89 f9             	mov    %r15d,%ecx
    1bce:	29 e8                	sub    %ebp,%eax
    1bd0:	f2 0f 5a c8          	cvtsd2ss %xmm0,%xmm1
    1bd4:	f3 43 0f 11 4c bd 00 	movss  %xmm1,0x0(%r13,%r15,4)
    1bdb:	49 83 c7 01          	add    $0x1,%r15
    1bdf:	39 44 24 40          	cmp    %eax,0x40(%rsp)
    1be3:	7f cb                	jg     1bb0 <main+0x640>
    1be5:	89 cd                	mov    %ecx,%ebp
    1be7:	e9 74 ff ff ff       	jmpq   1b60 <main+0x5f0>
    1bec:	4c 89 e7             	mov    %r12,%rdi
    1bef:	e8 3c f6 ff ff       	callq  1230 <fclose@plt>
    1bf4:	e9 04 fc ff ff       	jmpq   17fd <main+0x28d>
    1bf9:	83 44 24 44 01       	addl   $0x1,0x44(%rsp)
    1bfe:	e9 51 fe ff ff       	jmpq   1a54 <main+0x4e4>
    1c03:	89 e9                	mov    %ebp,%ecx
    1c05:	89 cd                	mov    %ecx,%ebp
    1c07:	e9 54 ff ff ff       	jmpq   1b60 <main+0x5f0>
    1c0c:	4c 8d 2d 30 b5 00 00 	lea    0xb530(%rip),%r13        # d143 <__PRETTY_FUNCTION__.5405+0x233>
    1c13:	eb 08                	jmp    1c1d <main+0x6ad>
    1c15:	0f 1f 00             	nopl   (%rax)
    1c18:	83 44 24 40 01       	addl   $0x1,0x40(%rsp)
    1c1d:	31 ff                	xor    %edi,%edi
    1c1f:	4c 89 ee             	mov    %r13,%rsi
    1c22:	e8 d9 f7 ff ff       	callq  1400 <strtok@plt>
    1c27:	48 85 c0             	test   %rax,%rax
    1c2a:	75 ec                	jne    1c18 <main+0x6a8>
    1c2c:	e9 78 fe ff ff       	jmpq   1aa9 <main+0x539>
    1c31:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
    1c36:	48 8d 35 9b b5 00 00 	lea    0xb59b(%rip),%rsi        # d1d8 <__PRETTY_FUNCTION__.5405+0x2c8>
    1c3d:	bf 01 00 00 00       	mov    $0x1,%edi
    1c42:	31 c0                	xor    %eax,%eax
    1c44:	e8 47 f7 ff ff       	callq  1390 <__printf_chk@plt>
    1c49:	e9 9a fd ff ff       	jmpq   19e8 <main+0x478>
    1c4e:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
    1c53:	48 8d 35 34 b5 00 00 	lea    0xb534(%rip),%rsi        # d18e <__PRETTY_FUNCTION__.5405+0x27e>
    1c5a:	bf 01 00 00 00       	mov    $0x1,%edi
    1c5f:	31 c0                	xor    %eax,%eax
    1c61:	e8 2a f7 ff ff       	callq  1390 <__printf_chk@plt>
    1c66:	e9 4f fd ff ff       	jmpq   19ba <main+0x44a>
    1c6b:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
    1c70:	48 8d 35 3b b5 00 00 	lea    0xb53b(%rip),%rsi        # d1b2 <__PRETTY_FUNCTION__.5405+0x2a2>
    1c77:	bf 01 00 00 00       	mov    $0x1,%edi
    1c7c:	31 c0                	xor    %eax,%eax
    1c7e:	e8 0d f7 ff ff       	callq  1390 <__printf_chk@plt>
    1c83:	e9 49 fd ff ff       	jmpq   19d1 <main+0x461>
    1c88:	48 8b 0d 51 e4 20 00 	mov    0x20e451(%rip),%rcx        # 2100e0 <stderr@@GLIBC_2.2.5>
    1c8f:	48 8d 3d 2a b4 00 00 	lea    0xb42a(%rip),%rdi        # d0c0 <__PRETTY_FUNCTION__.5405+0x1b0>
    1c96:	ba 2c 00 00 00       	mov    $0x2c,%edx
    1c9b:	be 01 00 00 00       	mov    $0x1,%esi
    1ca0:	e8 9b f7 ff ff       	callq  1440 <fwrite@plt>
    1ca5:	49 8b 7d 00          	mov    0x0(%r13),%rdi
    1ca9:	e8 f2 06 00 00       	callq  23a0 <usage>
    1cae:	48 8d 0d 9b b5 00 00 	lea    0xb59b(%rip),%rcx        # d250 <__PRETTY_FUNCTION__.6333>
    1cb5:	48 8d 35 5d b4 00 00 	lea    0xb45d(%rip),%rsi        # d119 <__PRETTY_FUNCTION__.5405+0x209>
    1cbc:	48 8d 3d 5f b4 00 00 	lea    0xb45f(%rip),%rdi        # d122 <__PRETTY_FUNCTION__.5405+0x212>
    1cc3:	ba ff 00 00 00       	mov    $0xff,%edx
    1cc8:	e8 c3 f5 ff ff       	callq  1290 <__assert_fail@plt>
    1ccd:	48 8d 0d 7c b5 00 00 	lea    0xb57c(%rip),%rcx        # d250 <__PRETTY_FUNCTION__.6333>
    1cd4:	48 8d 35 3e b4 00 00 	lea    0xb43e(%rip),%rsi        # d119 <__PRETTY_FUNCTION__.5405+0x209>
    1cdb:	48 8d 3d 4f b4 00 00 	lea    0xb44f(%rip),%rdi        # d131 <__PRETTY_FUNCTION__.5405+0x221>
    1ce2:	ba e1 00 00 00       	mov    $0xe1,%edx
    1ce7:	e8 a4 f5 ff ff       	callq  1290 <__assert_fail@plt>
    1cec:	48 8d 0d 5d b5 00 00 	lea    0xb55d(%rip),%rcx        # d250 <__PRETTY_FUNCTION__.6333>
    1cf3:	48 8d 35 1f b4 00 00 	lea    0xb41f(%rip),%rsi        # d119 <__PRETTY_FUNCTION__.5405+0x209>
    1cfa:	48 8d 3d 51 b4 00 00 	lea    0xb451(%rip),%rdi        # d152 <__PRETTY_FUNCTION__.5405+0x242>
    1d01:	ba 1c 01 00 00       	mov    $0x11c,%edx
    1d06:	e8 85 f5 ff ff       	callq  1290 <__assert_fail@plt>
    1d0b:	48 8b 3d ce e3 20 00 	mov    0x20e3ce(%rip),%rdi        # 2100e0 <stderr@@GLIBC_2.2.5>
    1d12:	48 8d 15 e6 b3 00 00 	lea    0xb3e6(%rip),%rdx        # d0ff <__PRETTY_FUNCTION__.5405+0x1ef>
    1d19:	4c 89 f9             	mov    %r15,%rcx
    1d1c:	be 01 00 00 00       	mov    $0x1,%esi
    1d21:	31 c0                	xor    %eax,%eax
    1d23:	e8 28 f7 ff ff       	callq  1450 <__fprintf_chk@plt>
    1d28:	bf 01 00 00 00       	mov    $0x1,%edi
    1d2d:	e8 fe f6 ff ff       	callq  1430 <exit@plt>
    1d32:	48 8d 0d 17 b5 00 00 	lea    0xb517(%rip),%rcx        # d250 <__PRETTY_FUNCTION__.6333>
    1d39:	48 8d 35 d9 b3 00 00 	lea    0xb3d9(%rip),%rsi        # d119 <__PRETTY_FUNCTION__.5405+0x209>
    1d40:	48 8d 3d ea b3 00 00 	lea    0xb3ea(%rip),%rdi        # d131 <__PRETTY_FUNCTION__.5405+0x221>
    1d47:	ba 03 01 00 00       	mov    $0x103,%edx
    1d4c:	e8 3f f5 ff ff       	callq  1290 <__assert_fail@plt>
    1d51:	48 8d 0d f8 b4 00 00 	lea    0xb4f8(%rip),%rcx        # d250 <__PRETTY_FUNCTION__.6333>
    1d58:	48 8d 35 ba b3 00 00 	lea    0xb3ba(%rip),%rsi        # d119 <__PRETTY_FUNCTION__.5405+0x209>
    1d5f:	48 8d 3d c0 b3 00 00 	lea    0xb3c0(%rip),%rdi        # d126 <__PRETTY_FUNCTION__.5405+0x216>
    1d66:	ba 01 01 00 00       	mov    $0x101,%edx
    1d6b:	e8 20 f5 ff ff       	callq  1290 <__assert_fail@plt>
    1d70:	48 8d 0d d9 b4 00 00 	lea    0xb4d9(%rip),%rcx        # d250 <__PRETTY_FUNCTION__.6333>
    1d77:	48 8d 35 9b b3 00 00 	lea    0xb39b(%rip),%rsi        # d119 <__PRETTY_FUNCTION__.5405+0x209>
    1d7e:	48 8d 3d a1 b3 00 00 	lea    0xb3a1(%rip),%rdi        # d126 <__PRETTY_FUNCTION__.5405+0x216>
    1d85:	ba df 00 00 00       	mov    $0xdf,%edx
    1d8a:	e8 01 f5 ff ff       	callq  1290 <__assert_fail@plt>
    1d8f:	e8 ac f4 ff ff       	callq  1240 <__stack_chk_fail@plt>
    1d94:	48 8d 0d b5 b4 00 00 	lea    0xb4b5(%rip),%rcx        # d250 <__PRETTY_FUNCTION__.6333>
    1d9b:	48 8d 35 77 b3 00 00 	lea    0xb377(%rip),%rsi        # d119 <__PRETTY_FUNCTION__.5405+0x209>
    1da2:	48 8d 3d 79 b3 00 00 	lea    0xb379(%rip),%rdi        # d122 <__PRETTY_FUNCTION__.5405+0x212>
    1da9:	ba dd 00 00 00       	mov    $0xdd,%edx
    1dae:	e8 dd f4 ff ff       	callq  1290 <__assert_fail@plt>
    1db3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1dba:	00 00 00 
    1dbd:	0f 1f 00             	nopl   (%rax)

0000000000001dc0 <_start>:
    1dc0:	31 ed                	xor    %ebp,%ebp
    1dc2:	49 89 d1             	mov    %rdx,%r9
    1dc5:	5e                   	pop    %rsi
    1dc6:	48 89 e2             	mov    %rsp,%rdx
    1dc9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1dcd:	50                   	push   %rax
    1dce:	54                   	push   %rsp
    1dcf:	4c 8d 05 ca b0 00 00 	lea    0xb0ca(%rip),%r8        # cea0 <__libc_csu_fini>
    1dd6:	48 8d 0d 53 b0 00 00 	lea    0xb053(%rip),%rcx        # ce30 <__libc_csu_init>
    1ddd:	48 8d 3d 8c f7 ff ff 	lea    -0x874(%rip),%rdi        # 1570 <main>
    1de4:	ff 15 f6 e1 20 00    	callq  *0x20e1f6(%rip)        # 20ffe0 <__libc_start_main@GLIBC_2.2.5>
    1dea:	f4                   	hlt    
    1deb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001df0 <deregister_tm_clones>:
    1df0:	48 8d 3d b9 e2 20 00 	lea    0x20e2b9(%rip),%rdi        # 2100b0 <__TMC_END__>
    1df7:	55                   	push   %rbp
    1df8:	48 8d 05 b1 e2 20 00 	lea    0x20e2b1(%rip),%rax        # 2100b0 <__TMC_END__>
    1dff:	48 39 f8             	cmp    %rdi,%rax
    1e02:	48 89 e5             	mov    %rsp,%rbp
    1e05:	74 19                	je     1e20 <deregister_tm_clones+0x30>
    1e07:	48 8b 05 ca e1 20 00 	mov    0x20e1ca(%rip),%rax        # 20ffd8 <_ITM_deregisterTMCloneTable>
    1e0e:	48 85 c0             	test   %rax,%rax
    1e11:	74 0d                	je     1e20 <deregister_tm_clones+0x30>
    1e13:	5d                   	pop    %rbp
    1e14:	ff e0                	jmpq   *%rax
    1e16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1e1d:	00 00 00 
    1e20:	5d                   	pop    %rbp
    1e21:	c3                   	retq   
    1e22:	0f 1f 40 00          	nopl   0x0(%rax)
    1e26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1e2d:	00 00 00 

0000000000001e30 <register_tm_clones>:
    1e30:	48 8d 3d 79 e2 20 00 	lea    0x20e279(%rip),%rdi        # 2100b0 <__TMC_END__>
    1e37:	48 8d 35 72 e2 20 00 	lea    0x20e272(%rip),%rsi        # 2100b0 <__TMC_END__>
    1e3e:	55                   	push   %rbp
    1e3f:	48 29 fe             	sub    %rdi,%rsi
    1e42:	48 89 e5             	mov    %rsp,%rbp
    1e45:	48 c1 fe 03          	sar    $0x3,%rsi
    1e49:	48 89 f0             	mov    %rsi,%rax
    1e4c:	48 c1 e8 3f          	shr    $0x3f,%rax
    1e50:	48 01 c6             	add    %rax,%rsi
    1e53:	48 d1 fe             	sar    %rsi
    1e56:	74 18                	je     1e70 <register_tm_clones+0x40>
    1e58:	48 8b 05 91 e1 20 00 	mov    0x20e191(%rip),%rax        # 20fff0 <_ITM_registerTMCloneTable>
    1e5f:	48 85 c0             	test   %rax,%rax
    1e62:	74 0c                	je     1e70 <register_tm_clones+0x40>
    1e64:	5d                   	pop    %rbp
    1e65:	ff e0                	jmpq   *%rax
    1e67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    1e6e:	00 00 
    1e70:	5d                   	pop    %rbp
    1e71:	c3                   	retq   
    1e72:	0f 1f 40 00          	nopl   0x0(%rax)
    1e76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1e7d:	00 00 00 

0000000000001e80 <__do_global_dtors_aux>:
    1e80:	80 3d 61 e2 20 00 00 	cmpb   $0x0,0x20e261(%rip)        # 2100e8 <completed.7698>
    1e87:	75 2f                	jne    1eb8 <__do_global_dtors_aux+0x38>
    1e89:	48 83 3d 67 e1 20 00 	cmpq   $0x0,0x20e167(%rip)        # 20fff8 <__cxa_finalize@GLIBC_2.2.5>
    1e90:	00 
    1e91:	55                   	push   %rbp
    1e92:	48 89 e5             	mov    %rsp,%rbp
    1e95:	74 0c                	je     1ea3 <__do_global_dtors_aux+0x23>
    1e97:	48 8b 3d 6a e1 20 00 	mov    0x20e16a(%rip),%rdi        # 210008 <__dso_handle>
    1e9e:	e8 15 f6 ff ff       	callq  14b8 <__cxa_finalize@plt>
    1ea3:	e8 48 ff ff ff       	callq  1df0 <deregister_tm_clones>
    1ea8:	c6 05 39 e2 20 00 01 	movb   $0x1,0x20e239(%rip)        # 2100e8 <completed.7698>
    1eaf:	5d                   	pop    %rbp
    1eb0:	c3                   	retq   
    1eb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1eb8:	f3 c3                	repz retq 
    1eba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001ec0 <frame_dummy>:
    1ec0:	55                   	push   %rbp
    1ec1:	48 89 e5             	mov    %rsp,%rbp
    1ec4:	5d                   	pop    %rbp
    1ec5:	e9 66 ff ff ff       	jmpq   1e30 <register_tm_clones>
    1eca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001ed0 <cluster_exec>:
    1ed0:	41 57                	push   %r15
    1ed2:	41 56                	push   %r14
    1ed4:	4c 63 fe             	movslq %esi,%r15
    1ed7:	41 55                	push   %r13
    1ed9:	41 54                	push   %r12
    1edb:	55                   	push   %rbp
    1edc:	53                   	push   %rbx
    1edd:	48 89 cd             	mov    %rcx,%rbp
    1ee0:	44 89 cb             	mov    %r9d,%ebx
    1ee3:	48 83 ec 48          	sub    $0x48,%rsp
    1ee7:	89 7c 24 14          	mov    %edi,0x14(%rsp)
    1eeb:	4a 8d 3c bd 00 00 00 	lea    0x0(,%r15,4),%rdi
    1ef2:	00 
    1ef3:	89 54 24 10          	mov    %edx,0x10(%rsp)
    1ef7:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
    1efc:	f3 0f 11 44 24 28    	movss  %xmm0,0x28(%rsp)
    1f02:	4c 8b ac 24 90 00 00 	mov    0x90(%rsp),%r13
    1f09:	00 
    1f0a:	e8 61 f4 ff ff       	callq  1370 <malloc@plt>
    1f0f:	48 85 c0             	test   %rax,%rax
    1f12:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1f17:	0f 84 44 03 00 00    	je     2261 <cluster_exec+0x391>
    1f1d:	31 c0                	xor    %eax,%eax
    1f1f:	e8 7c 13 00 00       	callq  32a0 <random_alloc>
    1f24:	48 85 c0             	test   %rax,%rax
    1f27:	49 89 c6             	mov    %rax,%r14
    1f2a:	0f 84 f3 02 00 00    	je     2223 <cluster_exec+0x353>
    1f30:	8b 74 24 18          	mov    0x18(%rsp),%esi
    1f34:	4d 89 fc             	mov    %r15,%r12
    1f37:	85 f6                	test   %esi,%esi
    1f39:	0f 85 b1 00 00 00    	jne    1ff0 <cluster_exec+0x120>
    1f3f:	3b 9c 24 80 00 00 00 	cmp    0x80(%rsp),%ebx
    1f46:	0f 8f 7e 00 00 00    	jg     1fca <cluster_exec+0xfa>
    1f4c:	8b 84 24 80 00 00 00 	mov    0x80(%rsp),%eax
    1f53:	83 c0 01             	add    $0x1,%eax
    1f56:	89 44 24 18          	mov    %eax,0x18(%rsp)
    1f5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1f60:	be 07 00 00 00       	mov    $0x7,%esi
    1f65:	4c 89 f7             	mov    %r14,%rdi
    1f68:	e8 d3 13 00 00       	callq  3340 <random_seed>
    1f6d:	48 83 ec 08          	sub    $0x8,%rsp
    1f71:	44 89 e1             	mov    %r12d,%ecx
    1f74:	41 89 d8             	mov    %ebx,%r8d
    1f77:	41 56                	push   %r14
    1f79:	8b 54 24 20          	mov    0x20(%rsp),%edx
    1f7d:	48 89 ee             	mov    %rbp,%rsi
    1f80:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    1f85:	8b 7c 24 24          	mov    0x24(%rsp),%edi
    1f89:	f3 0f 10 44 24 38    	movss  0x38(%rsp),%xmm0
    1f8f:	e8 7c 06 00 00       	callq  2610 <normal_exec>
    1f94:	49 8b 55 00          	mov    0x0(%r13),%rdx
    1f98:	49 89 c7             	mov    %rax,%r15
    1f9b:	58                   	pop    %rax
    1f9c:	59                   	pop    %rcx
    1f9d:	48 85 d2             	test   %rdx,%rdx
    1fa0:	74 11                	je     1fb3 <cluster_exec+0xe3>
    1fa2:	48 8b 3a             	mov    (%rdx),%rdi
    1fa5:	e8 06 f5 ff ff       	callq  14b0 <free@plt>
    1faa:	49 8b 7d 00          	mov    0x0(%r13),%rdi
    1fae:	e8 fd f4 ff ff       	callq  14b0 <free@plt>
    1fb3:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
    1fba:	00 
    1fbb:	4d 89 7d 00          	mov    %r15,0x0(%r13)
    1fbf:	89 18                	mov    %ebx,(%rax)
    1fc1:	83 c3 01             	add    $0x1,%ebx
    1fc4:	3b 5c 24 18          	cmp    0x18(%rsp),%ebx
    1fc8:	75 96                	jne    1f60 <cluster_exec+0x90>
    1fca:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    1fcf:	e8 dc f4 ff ff       	callq  14b0 <free@plt>
    1fd4:	4c 89 f7             	mov    %r14,%rdi
    1fd7:	e8 44 13 00 00       	callq  3320 <random_free>
    1fdc:	48 83 c4 48          	add    $0x48,%rsp
    1fe0:	31 c0                	xor    %eax,%eax
    1fe2:	5b                   	pop    %rbx
    1fe3:	5d                   	pop    %rbp
    1fe4:	41 5c                	pop    %r12
    1fe6:	41 5d                	pop    %r13
    1fe8:	41 5e                	pop    %r14
    1fea:	41 5f                	pop    %r15
    1fec:	c3                   	retq   
    1fed:	0f 1f 00             	nopl   (%rax)
    1ff0:	be 04 00 00 00       	mov    $0x4,%esi
    1ff5:	4c 89 ff             	mov    %r15,%rdi
    1ff8:	e8 03 f3 ff ff       	callq  1300 <calloc@plt>
    1ffd:	48 85 c0             	test   %rax,%rax
    2000:	49 89 c0             	mov    %rax,%r8
    2003:	0f 84 77 02 00 00    	je     2280 <cluster_exec+0x3b0>
    2009:	8b 44 24 10          	mov    0x10(%rsp),%eax
    200d:	85 c0                	test   %eax,%eax
    200f:	0f 8e 64 01 00 00    	jle    2179 <cluster_exec+0x2a9>
    2015:	45 8d 4f ff          	lea    -0x1(%r15),%r9d
    2019:	83 e8 01             	sub    $0x1,%eax
    201c:	45 31 ff             	xor    %r15d,%r15d
    201f:	48 8d 04 85 04 00 00 	lea    0x4(,%rax,4),%rax
    2026:	00 
    2027:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
    202c:	89 5c 24 2c          	mov    %ebx,0x2c(%rsp)
    2030:	4b 8d 4c 88 04       	lea    0x4(%r8,%r9,4),%rcx
    2035:	49 83 c1 01          	add    $0x1,%r9
    2039:	45 89 e6             	mov    %r12d,%r14d
    203c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2041:	48 89 e8             	mov    %rbp,%rax
    2044:	4c 89 ac 24 90 00 00 	mov    %r13,0x90(%rsp)
    204b:	00 
    204c:	4c 89 fd             	mov    %r15,%rbp
    204f:	49 89 cc             	mov    %rcx,%r12
    2052:	4c 89 c3             	mov    %r8,%rbx
    2055:	4d 89 cd             	mov    %r9,%r13
    2058:	49 89 c7             	mov    %rax,%r15
    205b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2060:	31 c0                	xor    %eax,%eax
    2062:	45 85 f6             	test   %r14d,%r14d
    2065:	0f 8e 25 01 00 00    	jle    2190 <cluster_exec+0x2c0>
    206b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2070:	49 8b 14 c7          	mov    (%r15,%rax,8),%rdx
    2074:	f3 0f 10 04 2a       	movss  (%rdx,%rbp,1),%xmm0
    2079:	f3 0f 11 04 83       	movss  %xmm0,(%rbx,%rax,4)
    207e:	48 83 c0 01          	add    $0x1,%rax
    2082:	49 39 c5             	cmp    %rax,%r13
    2085:	75 e9                	jne    2070 <cluster_exec+0x1a0>
    2087:	be 04 00 00 00       	mov    $0x4,%esi
    208c:	bf 02 00 00 00       	mov    $0x2,%edi
    2091:	e8 6a f2 ff ff       	callq  1300 <calloc@plt>
    2096:	48 85 c0             	test   %rax,%rax
    2099:	0f 84 a3 01 00 00    	je     2242 <cluster_exec+0x372>
    209f:	f3 0f 10 10          	movss  (%rax),%xmm2
    20a3:	48 89 da             	mov    %rbx,%rdx
    20a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    20ad:	00 00 00 
    20b0:	f3 0f 58 12          	addss  (%rdx),%xmm2
    20b4:	48 83 c2 04          	add    $0x4,%rdx
    20b8:	49 39 d4             	cmp    %rdx,%r12
    20bb:	75 f3                	jne    20b0 <cluster_exec+0x1e0>
    20bd:	66 0f ef db          	pxor   %xmm3,%xmm3
    20c1:	48 89 da             	mov    %rbx,%rdx
    20c4:	66 0f ef c9          	pxor   %xmm1,%xmm1
    20c8:	f3 41 0f 2a de       	cvtsi2ss %r14d,%xmm3
    20cd:	f3 0f 5e d3          	divss  %xmm3,%xmm2
    20d1:	f3 0f 11 10          	movss  %xmm2,(%rax)
    20d5:	0f 1f 00             	nopl   (%rax)
    20d8:	f3 0f 10 02          	movss  (%rdx),%xmm0
    20dc:	48 83 c2 04          	add    $0x4,%rdx
    20e0:	f3 0f 5c c2          	subss  %xmm2,%xmm0
    20e4:	f3 0f 5a c9          	cvtss2sd %xmm1,%xmm1
    20e8:	49 39 d4             	cmp    %rdx,%r12
    20eb:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
    20ef:	f2 0f 59 c0          	mulsd  %xmm0,%xmm0
    20f3:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    20f7:	66 0f ef c9          	pxor   %xmm1,%xmm1
    20fb:	f2 0f 5a c8          	cvtsd2ss %xmm0,%xmm1
    20ff:	75 d7                	jne    20d8 <cluster_exec+0x208>
    2101:	f3 0f 11 48 04       	movss  %xmm1,0x4(%rax)
    2106:	f3 0f 5e cb          	divss  %xmm3,%xmm1
    210a:	66 0f ef e4          	pxor   %xmm4,%xmm4
    210e:	0f 2e e1             	ucomiss %xmm1,%xmm4
    2111:	f3 0f 51 d9          	sqrtss %xmm1,%xmm3
    2115:	0f 87 c6 00 00 00    	ja     21e1 <cluster_exec+0x311>
    211b:	f3 0f 11 58 04       	movss  %xmm3,0x4(%rax)
    2120:	31 d2                	xor    %edx,%edx
    2122:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2128:	49 8b 0c d7          	mov    (%r15,%rdx,8),%rcx
    212c:	48 83 c2 01          	add    $0x1,%rdx
    2130:	48 01 e9             	add    %rbp,%rcx
    2133:	41 39 d6             	cmp    %edx,%r14d
    2136:	f3 0f 10 01          	movss  (%rcx),%xmm0
    213a:	f3 0f 5c c2          	subss  %xmm2,%xmm0
    213e:	f3 0f 5e c3          	divss  %xmm3,%xmm0
    2142:	f3 0f 11 01          	movss  %xmm0,(%rcx)
    2146:	7f e0                	jg     2128 <cluster_exec+0x258>
    2148:	48 89 c7             	mov    %rax,%rdi
    214b:	48 83 c5 04          	add    $0x4,%rbp
    214f:	e8 5c f3 ff ff       	callq  14b0 <free@plt>
    2154:	48 39 6c 24 18       	cmp    %rbp,0x18(%rsp)
    2159:	0f 85 01 ff ff ff    	jne    2060 <cluster_exec+0x190>
    215f:	49 89 d8             	mov    %rbx,%r8
    2162:	45 89 f4             	mov    %r14d,%r12d
    2165:	8b 5c 24 2c          	mov    0x2c(%rsp),%ebx
    2169:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
    216e:	4c 8b ac 24 90 00 00 	mov    0x90(%rsp),%r13
    2175:	00 
    2176:	4c 89 fd             	mov    %r15,%rbp
    2179:	4c 89 c7             	mov    %r8,%rdi
    217c:	e8 2f f3 ff ff       	callq  14b0 <free@plt>
    2181:	e9 b9 fd ff ff       	jmpq   1f3f <cluster_exec+0x6f>
    2186:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    218d:	00 00 00 
    2190:	be 04 00 00 00       	mov    $0x4,%esi
    2195:	bf 02 00 00 00       	mov    $0x2,%edi
    219a:	e8 61 f1 ff ff       	callq  1300 <calloc@plt>
    219f:	48 85 c0             	test   %rax,%rax
    21a2:	0f 84 9a 00 00 00    	je     2242 <cluster_exec+0x372>
    21a8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    21ac:	f3 0f 10 10          	movss  (%rax),%xmm2
    21b0:	66 0f ef c9          	pxor   %xmm1,%xmm1
    21b4:	66 0f ef ed          	pxor   %xmm5,%xmm5
    21b8:	f3 41 0f 2a c6       	cvtsi2ss %r14d,%xmm0
    21bd:	f3 0f 5e c8          	divss  %xmm0,%xmm1
    21c1:	f3 0f 5e d0          	divss  %xmm0,%xmm2
    21c5:	0f 2e e9             	ucomiss %xmm1,%xmm5
    21c8:	f3 0f 51 d9          	sqrtss %xmm1,%xmm3
    21cc:	f3 0f 11 48 04       	movss  %xmm1,0x4(%rax)
    21d1:	f3 0f 11 10          	movss  %xmm2,(%rax)
    21d5:	77 0f                	ja     21e6 <cluster_exec+0x316>
    21d7:	f3 0f 11 58 04       	movss  %xmm3,0x4(%rax)
    21dc:	e9 67 ff ff ff       	jmpq   2148 <cluster_exec+0x278>
    21e1:	f3 0f 11 48 04       	movss  %xmm1,0x4(%rax)
    21e6:	0f 28 c1             	movaps %xmm1,%xmm0
    21e9:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    21ee:	f3 0f 11 5c 24 34    	movss  %xmm3,0x34(%rsp)
    21f4:	f3 0f 11 54 24 30    	movss  %xmm2,0x30(%rsp)
    21fa:	e8 31 f1 ff ff       	callq  1330 <sqrtf@plt>
    21ff:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    2204:	45 85 f6             	test   %r14d,%r14d
    2207:	f3 0f 10 5c 24 34    	movss  0x34(%rsp),%xmm3
    220d:	f3 0f 10 54 24 30    	movss  0x30(%rsp),%xmm2
    2213:	f3 0f 11 58 04       	movss  %xmm3,0x4(%rax)
    2218:	0f 8f 02 ff ff ff    	jg     2120 <cluster_exec+0x250>
    221e:	e9 25 ff ff ff       	jmpq   2148 <cluster_exec+0x278>
    2223:	48 8d 0d e6 ac 00 00 	lea    0xace6(%rip),%rcx        # cf10 <__PRETTY_FUNCTION__.5405>
    222a:	48 8d 35 83 ac 00 00 	lea    0xac83(%rip),%rsi        # ceb4 <_IO_stdin_used+0x4>
    2231:	48 8d 3d 91 ac 00 00 	lea    0xac91(%rip),%rdi        # cec9 <_IO_stdin_used+0x19>
    2238:	ba c3 00 00 00       	mov    $0xc3,%edx
    223d:	e8 4e f0 ff ff       	callq  1290 <__assert_fail@plt>
    2242:	48 8d 0d a7 ac 00 00 	lea    0xaca7(%rip),%rcx        # cef0 <__PRETTY_FUNCTION__.5358>
    2249:	48 8d 35 64 ac 00 00 	lea    0xac64(%rip),%rsi        # ceb4 <_IO_stdin_used+0x4>
    2250:	48 8d 3d 8c ac 00 00 	lea    0xac8c(%rip),%rdi        # cee3 <_IO_stdin_used+0x33>
    2257:	ba 76 00 00 00       	mov    $0x76,%edx
    225c:	e8 2f f0 ff ff       	callq  1290 <__assert_fail@plt>
    2261:	48 8d 0d a8 ac 00 00 	lea    0xaca8(%rip),%rcx        # cf10 <__PRETTY_FUNCTION__.5405>
    2268:	48 8d 35 45 ac 00 00 	lea    0xac45(%rip),%rsi        # ceb4 <_IO_stdin_used+0x4>
    226f:	48 8d 3d 48 ac 00 00 	lea    0xac48(%rip),%rdi        # cebe <_IO_stdin_used+0xe>
    2276:	ba c0 00 00 00       	mov    $0xc0,%edx
    227b:	e8 10 f0 ff ff       	callq  1290 <__assert_fail@plt>
    2280:	48 8d 0d 79 ac 00 00 	lea    0xac79(%rip),%rcx        # cf00 <__PRETTY_FUNCTION__.5377>
    2287:	48 8d 35 26 ac 00 00 	lea    0xac26(%rip),%rsi        # ceb4 <_IO_stdin_used+0x4>
    228e:	48 8d 3d 3e ac 00 00 	lea    0xac3e(%rip),%rdi        # ced3 <_IO_stdin_used+0x23>
    2295:	ba 96 00 00 00       	mov    $0x96,%edx
    229a:	e8 f1 ef ff ff       	callq  1290 <__assert_fail@plt>
    229f:	90                   	nop

00000000000022a0 <common_euclidDist2>:
    22a0:	85 d2                	test   %edx,%edx
    22a2:	7e 34                	jle    22d8 <common_euclidDist2+0x38>
    22a4:	8d 42 ff             	lea    -0x1(%rdx),%eax
    22a7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    22ab:	48 8d 14 85 04 00 00 	lea    0x4(,%rax,4),%rdx
    22b2:	00 
    22b3:	31 c0                	xor    %eax,%eax
    22b5:	0f 1f 00             	nopl   (%rax)
    22b8:	f3 0f 10 0c 07       	movss  (%rdi,%rax,1),%xmm1
    22bd:	f3 0f 5c 0c 06       	subss  (%rsi,%rax,1),%xmm1
    22c2:	48 83 c0 04          	add    $0x4,%rax
    22c6:	48 39 c2             	cmp    %rax,%rdx
    22c9:	f3 0f 59 c9          	mulss  %xmm1,%xmm1
    22cd:	f3 0f 58 c1          	addss  %xmm1,%xmm0
    22d1:	75 e5                	jne    22b8 <common_euclidDist2+0x18>
    22d3:	f3 c3                	repz retq 
    22d5:	0f 1f 00             	nopl   (%rax)
    22d8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    22dc:	c3                   	retq   
    22dd:	0f 1f 00             	nopl   (%rax)

00000000000022e0 <common_findNearestPoint>:
    22e0:	85 c9                	test   %ecx,%ecx
    22e2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    22e7:	0f 8e a4 00 00 00    	jle    2391 <common_findNearestPoint+0xb1>
    22ed:	53                   	push   %rbx
    22ee:	8d 59 ff             	lea    -0x1(%rcx),%ebx
    22f1:	8d 4e ff             	lea    -0x1(%rsi),%ecx
    22f4:	66 0f ef d2          	pxor   %xmm2,%xmm2
    22f8:	45 31 d2             	xor    %r10d,%r10d
    22fb:	4c 8d 0c 8d 04 00 00 	lea    0x4(,%rcx,4),%r9
    2302:	00 
    2303:	48 83 c3 01          	add    $0x1,%rbx
    2307:	f3 0f 10 1d 11 ac 00 	movss  0xac11(%rip),%xmm3        # cf20 <__PRETTY_FUNCTION__.5405+0x10>
    230e:	00 
    230f:	f3 0f 10 25 0d ac 00 	movss  0xac0d(%rip),%xmm4        # cf24 <__PRETTY_FUNCTION__.5405+0x14>
    2316:	00 
    2317:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    231e:	00 00 
    2320:	85 f6                	test   %esi,%esi
    2322:	45 89 d3             	mov    %r10d,%r11d
    2325:	4e 8b 04 d2          	mov    (%rdx,%r10,8),%r8
    2329:	7e 55                	jle    2380 <common_findNearestPoint+0xa0>
    232b:	66 0f ef c9          	pxor   %xmm1,%xmm1
    232f:	31 c9                	xor    %ecx,%ecx
    2331:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2338:	f3 0f 10 04 0f       	movss  (%rdi,%rcx,1),%xmm0
    233d:	f3 41 0f 5c 04 08    	subss  (%r8,%rcx,1),%xmm0
    2343:	48 83 c1 04          	add    $0x4,%rcx
    2347:	49 39 c9             	cmp    %rcx,%r9
    234a:	f3 0f 59 c0          	mulss  %xmm0,%xmm0
    234e:	f3 0f 58 c8          	addss  %xmm0,%xmm1
    2352:	75 e4                	jne    2338 <common_findNearestPoint+0x58>
    2354:	0f 28 c1             	movaps %xmm1,%xmm0
    2357:	f3 0f 5e c3          	divss  %xmm3,%xmm0
    235b:	0f 2e e0             	ucomiss %xmm0,%xmm4
    235e:	76 0d                	jbe    236d <common_findNearestPoint+0x8d>
    2360:	0f 2e ca             	ucomiss %xmm2,%xmm1
    2363:	7a 02                	jp     2367 <common_findNearestPoint+0x87>
    2365:	74 2c                	je     2393 <common_findNearestPoint+0xb3>
    2367:	0f 28 d9             	movaps %xmm1,%xmm3
    236a:	44 89 d8             	mov    %r11d,%eax
    236d:	49 83 c2 01          	add    $0x1,%r10
    2371:	4c 39 d3             	cmp    %r10,%rbx
    2374:	75 aa                	jne    2320 <common_findNearestPoint+0x40>
    2376:	5b                   	pop    %rbx
    2377:	c3                   	retq   
    2378:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    237f:	00 
    2380:	0f 28 c2             	movaps %xmm2,%xmm0
    2383:	f3 0f 5e c3          	divss  %xmm3,%xmm0
    2387:	0f 2e e0             	ucomiss %xmm0,%xmm4
    238a:	76 e1                	jbe    236d <common_findNearestPoint+0x8d>
    238c:	44 89 d0             	mov    %r10d,%eax
    238f:	5b                   	pop    %rbx
    2390:	c3                   	retq   
    2391:	f3 c3                	repz retq 
    2393:	44 89 d8             	mov    %r11d,%eax
    2396:	5b                   	pop    %rbx
    2397:	c3                   	retq   
    2398:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    239f:	00 

00000000000023a0 <usage>:
    23a0:	48 83 ec 08          	sub    $0x8,%rsp
    23a4:	48 89 f9             	mov    %rdi,%rcx
    23a7:	48 8b 3d 32 dd 20 00 	mov    0x20dd32(%rip),%rdi        # 2100e0 <stderr@@GLIBC_2.2.5>
    23ae:	48 8d 15 73 ab 00 00 	lea    0xab73(%rip),%rdx        # cf28 <__PRETTY_FUNCTION__.5405+0x18>
    23b5:	be 01 00 00 00       	mov    $0x1,%esi
    23ba:	31 c0                	xor    %eax,%eax
    23bc:	e8 8f f0 ff ff       	callq  1450 <__fprintf_chk@plt>
    23c1:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    23c6:	e8 65 f0 ff ff       	callq  1430 <exit@plt>
    23cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023d0 <work>:
    23d0:	41 56                	push   %r14
    23d2:	41 55                	push   %r13
    23d4:	41 54                	push   %r12
    23d6:	55                   	push   %rbp
    23d7:	53                   	push   %rbx
    23d8:	48 89 fb             	mov    %rdi,%rbx
    23db:	48 83 ec 50          	sub    $0x50,%rsp
    23df:	e8 2c 1b 00 00       	callq  3f10 <stm_init_thread>
    23e4:	48 8b 03             	mov    (%rbx),%rax
    23e7:	66 0f ef c9          	pxor   %xmm1,%xmm1
    23eb:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    23f0:	8b 43 08             	mov    0x8(%rbx),%eax
    23f3:	f3 0f 11 4c 24 10    	movss  %xmm1,0x10(%rsp)
    23f9:	89 44 24 20          	mov    %eax,0x20(%rsp)
    23fd:	8b 43 0c             	mov    0xc(%rbx),%eax
    2400:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    2404:	8b 43 10             	mov    0x10(%rbx),%eax
    2407:	89 44 24 24          	mov    %eax,0x24(%rsp)
    240b:	48 8b 43 18          	mov    0x18(%rbx),%rax
    240f:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2414:	48 8b 43 20          	mov    0x20(%rbx),%rax
    2418:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    241d:	48 8b 43 28          	mov    0x28(%rbx),%rax
    2421:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    2426:	48 8b 43 30          	mov    0x30(%rbx),%rax
    242a:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    242f:	31 c0                	xor    %eax,%eax
    2431:	e8 fa 16 00 00       	callq  3b30 <thread_getId>
    2436:	8d 04 40             	lea    (%rax,%rax,2),%eax
    2439:	89 44 24 08          	mov    %eax,0x8(%rsp)
    243d:	89 c2                	mov    %eax,%edx
    243f:	39 54 24 0c          	cmp    %edx,0xc(%rsp)
    2443:	7e 2d                	jle    2472 <work+0xa2>
    2445:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    2449:	8d 42 03             	lea    0x3(%rdx),%eax
    244c:	89 54 24 14          	mov    %edx,0x14(%rsp)
    2450:	39 f0                	cmp    %esi,%eax
    2452:	0f 4f c6             	cmovg  %esi,%eax
    2455:	89 44 24 48          	mov    %eax,0x48(%rsp)
    2459:	89 c2                	mov    %eax,%edx
    245b:	39 54 24 14          	cmp    %edx,0x14(%rsp)
    245f:	0f 8c ab 00 00 00    	jl     2510 <work+0x140>
    2465:	8b 44 24 08          	mov    0x8(%rsp),%eax
    2469:	83 c0 03             	add    $0x3,%eax
    246c:	3b 44 24 0c          	cmp    0xc(%rsp),%eax
    2470:	7c 4e                	jl     24c0 <work+0xf0>
    2472:	31 ff                	xor    %edi,%edi
    2474:	e8 87 40 00 00       	callq  6500 <stm_start>
    2479:	48 85 c0             	test   %rax,%rax
    247c:	74 0a                	je     2488 <work+0xb8>
    247e:	31 f6                	xor    %esi,%esi
    2480:	48 89 c7             	mov    %rax,%rdi
    2483:	e8 e8 ef ff ff       	callq  1470 <__sigsetjmp@plt>
    2488:	48 8d 3d c1 e2 a0 00 	lea    0xa0e2c1(%rip),%rdi        # a10750 <global_delta>
    248f:	e8 2c 64 00 00       	callq  88c0 <stm_load_float>
    2494:	f3 0f 58 44 24 10    	addss  0x10(%rsp),%xmm0
    249a:	48 8d 3d af e2 a0 00 	lea    0xa0e2af(%rip),%rdi        # a10750 <global_delta>
    24a1:	e8 6a 8b 00 00       	callq  b010 <stm_store_float>
    24a6:	e8 35 2a 00 00       	callq  4ee0 <stm_commit>
    24ab:	e8 f0 1b 00 00       	callq  40a0 <stm_exit_thread>
    24b0:	48 83 c4 50          	add    $0x50,%rsp
    24b4:	5b                   	pop    %rbx
    24b5:	5d                   	pop    %rbp
    24b6:	41 5c                	pop    %r12
    24b8:	41 5d                	pop    %r13
    24ba:	41 5e                	pop    %r14
    24bc:	c3                   	retq   
    24bd:	0f 1f 00             	nopl   (%rax)
    24c0:	31 ff                	xor    %edi,%edi
    24c2:	e8 39 40 00 00       	callq  6500 <stm_start>
    24c7:	48 85 c0             	test   %rax,%rax
    24ca:	74 0a                	je     24d6 <work+0x106>
    24cc:	31 f6                	xor    %esi,%esi
    24ce:	48 89 c7             	mov    %rax,%rdi
    24d1:	e8 9a ef ff ff       	callq  1470 <__sigsetjmp@plt>
    24d6:	48 8d 3d 6b e2 a0 00 	lea    0xa0e26b(%rip),%rdi        # a10748 <global_i>
    24dd:	e8 5e 2f 00 00       	callq  5440 <stm_load>
    24e2:	48 8d 3d 5f e2 a0 00 	lea    0xa0e25f(%rip),%rdi        # a10748 <global_i>
    24e9:	89 44 24 08          	mov    %eax,0x8(%rsp)
    24ed:	83 c0 03             	add    $0x3,%eax
    24f0:	48 63 f0             	movslq %eax,%rsi
    24f3:	e8 c8 33 00 00       	callq  58c0 <stm_store>
    24f8:	e8 e3 29 00 00       	callq  4ee0 <stm_commit>
    24fd:	8b 54 24 08          	mov    0x8(%rsp),%edx
    2501:	e9 39 ff ff ff       	jmpq   243f <work+0x6f>
    2506:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    250d:	00 00 00 
    2510:	48 63 5c 24 14       	movslq 0x14(%rsp),%rbx
    2515:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    251a:	8b 4c 24 24          	mov    0x24(%rsp),%ecx
    251e:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    2523:	8b 74 24 20          	mov    0x20(%rsp),%esi
    2527:	48 8b 3c d8          	mov    (%rax,%rbx,8),%rdi
    252b:	e8 b0 fd ff ff       	callq  22e0 <common_findNearestPoint>
    2530:	89 c1                	mov    %eax,%ecx
    2532:	89 44 24 4c          	mov    %eax,0x4c(%rsp)
    2536:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    253b:	48 8d 04 98          	lea    (%rax,%rbx,4),%rax
    253f:	39 08                	cmp    %ecx,(%rax)
    2541:	74 14                	je     2557 <work+0x187>
    2543:	f3 0f 10 1d 71 ad 00 	movss  0xad71(%rip),%xmm3        # d2bc <__PRETTY_FUNCTION__.5443+0xc>
    254a:	00 
    254b:	f3 0f 58 5c 24 10    	addss  0x10(%rsp),%xmm3
    2551:	f3 0f 11 5c 24 10    	movss  %xmm3,0x10(%rsp)
    2557:	8b 54 24 4c          	mov    0x4c(%rsp),%edx
    255b:	31 ff                	xor    %edi,%edi
    255d:	89 10                	mov    %edx,(%rax)
    255f:	e8 9c 3f 00 00       	callq  6500 <stm_start>
    2564:	48 85 c0             	test   %rax,%rax
    2567:	74 0a                	je     2573 <work+0x1a3>
    2569:	31 f6                	xor    %esi,%esi
    256b:	48 89 c7             	mov    %rax,%rdi
    256e:	e8 fd ee ff ff       	callq  1470 <__sigsetjmp@plt>
    2573:	4c 63 64 24 4c       	movslq 0x4c(%rsp),%r12
    2578:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    257d:	49 c1 e4 03          	shl    $0x3,%r12
    2581:	4a 8d 1c 20          	lea    (%rax,%r12,1),%rbx
    2585:	48 8b 3b             	mov    (%rbx),%rdi
    2588:	e8 b3 2e 00 00       	callq  5440 <stm_load>
    258d:	48 8b 3b             	mov    (%rbx),%rdi
    2590:	48 8d 70 01          	lea    0x1(%rax),%rsi
    2594:	e8 27 33 00 00       	callq  58c0 <stm_store>
    2599:	44 8b 74 24 20       	mov    0x20(%rsp),%r14d
    259e:	45 85 f6             	test   %r14d,%r14d
    25a1:	7e 4f                	jle    25f2 <work+0x222>
    25a3:	48 63 44 24 14       	movslq 0x14(%rsp),%rax
    25a8:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    25ad:	31 db                	xor    %ebx,%ebx
    25af:	4c 03 64 24 40       	add    0x40(%rsp),%r12
    25b4:	4c 8d 2c c2          	lea    (%rdx,%rax,8),%r13
    25b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    25bf:	00 
    25c0:	49 8b 3c 24          	mov    (%r12),%rdi
    25c4:	48 8d 2c 9d 00 00 00 	lea    0x0(,%rbx,4),%rbp
    25cb:	00 
    25cc:	48 01 ef             	add    %rbp,%rdi
    25cf:	e8 ec 62 00 00       	callq  88c0 <stm_load_float>
    25d4:	49 8b 45 00          	mov    0x0(%r13),%rax
    25d8:	49 8b 3c 24          	mov    (%r12),%rdi
    25dc:	f3 0f 58 04 98       	addss  (%rax,%rbx,4),%xmm0
    25e1:	48 01 ef             	add    %rbp,%rdi
    25e4:	48 83 c3 01          	add    $0x1,%rbx
    25e8:	e8 23 8a 00 00       	callq  b010 <stm_store_float>
    25ed:	41 39 de             	cmp    %ebx,%r14d
    25f0:	7f ce                	jg     25c0 <work+0x1f0>
    25f2:	e8 e9 28 00 00       	callq  4ee0 <stm_commit>
    25f7:	83 44 24 14 01       	addl   $0x1,0x14(%rsp)
    25fc:	8b 54 24 48          	mov    0x48(%rsp),%edx
    2600:	e9 56 fe ff ff       	jmpq   245b <work+0x8b>
    2605:	90                   	nop
    2606:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    260d:	00 00 00 

0000000000002610 <normal_exec>:
    2610:	41 57                	push   %r15
    2612:	41 56                	push   %r14
    2614:	49 63 c0             	movslq %r8d,%rax
    2617:	41 55                	push   %r13
    2619:	41 54                	push   %r12
    261b:	41 89 d4             	mov    %edx,%r12d
    261e:	55                   	push   %rbp
    261f:	53                   	push   %rbx
    2620:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
    2627:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    262b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    2630:	48 c1 e0 03          	shl    $0x3,%rax
    2634:	89 7c 24 54          	mov    %edi,0x54(%rsp)
    2638:	48 89 c7             	mov    %rax,%rdi
    263b:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    2640:	89 4c 24 24          	mov    %ecx,0x24(%rsp)
    2644:	f3 0f 11 44 24 50    	movss  %xmm0,0x50(%rsp)
    264a:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    264f:	64 48 8b 34 25 28 00 	mov    %fs:0x28,%rsi
    2656:	00 00 
    2658:	48 89 b4 24 b8 00 00 	mov    %rsi,0xb8(%rsp)
    265f:	00 
    2660:	31 f6                	xor    %esi,%esi
    2662:	4c 8b b4 24 00 01 00 	mov    0x100(%rsp),%r14
    2669:	00 
    266a:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    266f:	e8 fc ec ff ff       	callq  1370 <malloc@plt>
    2674:	48 85 c0             	test   %rax,%rax
    2677:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    267c:	0f 84 90 07 00 00    	je     2e12 <normal_exec+0x802>
    2682:	8b 5c 24 1c          	mov    0x1c(%rsp),%ebx
    2686:	89 df                	mov    %ebx,%edi
    2688:	41 0f af fc          	imul   %r12d,%edi
    268c:	48 63 ff             	movslq %edi,%rdi
    268f:	48 c1 e7 02          	shl    $0x2,%rdi
    2693:	e8 d8 ec ff ff       	callq  1370 <malloc@plt>
    2698:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    269d:	48 85 c0             	test   %rax,%rax
    26a0:	48 89 06             	mov    %rax,(%rsi)
    26a3:	0f 84 2b 07 00 00    	je     2dd4 <normal_exec+0x7c4>
    26a9:	49 63 f4             	movslq %r12d,%rsi
    26ac:	83 fb 01             	cmp    $0x1,%ebx
    26af:	48 89 74 24 48       	mov    %rsi,0x48(%rsp)
    26b4:	0f 8e f6 06 00 00    	jle    2db0 <normal_exec+0x7a0>
    26ba:	49 63 f4             	movslq %r12d,%rsi
    26bd:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    26c2:	48 8d 0c b5 00 00 00 	lea    0x0(,%rsi,4),%rcx
    26c9:	00 
    26ca:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
    26ce:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
    26d2:	48 8d 43 08          	lea    0x8(%rbx),%rax
    26d6:	83 ee 02             	sub    $0x2,%esi
    26d9:	48 8d 74 f3 10       	lea    0x10(%rbx,%rsi,8),%rsi
    26de:	66 90                	xchg   %ax,%ax
    26e0:	48 89 10             	mov    %rdx,(%rax)
    26e3:	48 83 c0 08          	add    $0x8,%rax
    26e7:	48 01 ca             	add    %rcx,%rdx
    26ea:	48 39 f0             	cmp    %rsi,%rax
    26ed:	75 f1                	jne    26e0 <normal_exec+0xd0>
    26ef:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    26f3:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    26f8:	4c 63 7c 24 24       	movslq 0x24(%rsp),%r15
    26fd:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
    2702:	83 e8 01             	sub    $0x1,%eax
    2705:	48 89 f3             	mov    %rsi,%rbx
    2708:	48 8d 44 c6 08       	lea    0x8(%rsi,%rax,8),%rax
    270d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    2712:	41 8d 44 24 ff       	lea    -0x1(%r12),%eax
    2717:	4c 8d 2c 85 04 00 00 	lea    0x4(,%rax,4),%r13
    271e:	00 
    271f:	89 44 24 20          	mov    %eax,0x20(%rsp)
    2723:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2728:	4c 89 f7             	mov    %r14,%rdi
    272b:	e8 30 0c 00 00       	callq  3360 <random_generate>
    2730:	31 d2                	xor    %edx,%edx
    2732:	49 f7 f7             	div    %r15
    2735:	45 85 e4             	test   %r12d,%r12d
    2738:	0f 8e 48 01 00 00    	jle    2886 <normal_exec+0x276>
    273e:	48 63 c2             	movslq %edx,%rax
    2741:	4c 8b 03             	mov    (%rbx),%r8
    2744:	48 8b 74 c5 00       	mov    0x0(%rbp,%rax,8),%rsi
    2749:	48 8d 46 10          	lea    0x10(%rsi),%rax
    274d:	49 39 c0             	cmp    %rax,%r8
    2750:	49 8d 40 10          	lea    0x10(%r8),%rax
    2754:	0f 93 c2             	setae  %dl
    2757:	48 39 c6             	cmp    %rax,%rsi
    275a:	0f 93 c0             	setae  %al
    275d:	08 c2                	or     %al,%dl
    275f:	0f 84 0a 06 00 00    	je     2d6f <normal_exec+0x75f>
    2765:	41 83 fc 0c          	cmp    $0xc,%r12d
    2769:	0f 86 00 06 00 00    	jbe    2d6f <normal_exec+0x75f>
    276f:	48 89 f0             	mov    %rsi,%rax
    2772:	48 c1 e8 02          	shr    $0x2,%rax
    2776:	48 f7 d8             	neg    %rax
    2779:	83 e0 03             	and    $0x3,%eax
    277c:	8d 50 03             	lea    0x3(%rax),%edx
    277f:	3b 54 24 20          	cmp    0x20(%rsp),%edx
    2783:	0f 87 08 06 00 00    	ja     2d91 <normal_exec+0x781>
    2789:	31 ff                	xor    %edi,%edi
    278b:	85 c0                	test   %eax,%eax
    278d:	74 38                	je     27c7 <normal_exec+0x1b7>
    278f:	f3 0f 10 06          	movss  (%rsi),%xmm0
    2793:	83 f8 01             	cmp    $0x1,%eax
    2796:	bf 01 00 00 00       	mov    $0x1,%edi
    279b:	f3 41 0f 11 00       	movss  %xmm0,(%r8)
    27a0:	74 25                	je     27c7 <normal_exec+0x1b7>
    27a2:	f3 0f 10 46 04       	movss  0x4(%rsi),%xmm0
    27a7:	83 f8 03             	cmp    $0x3,%eax
    27aa:	bf 02 00 00 00       	mov    $0x2,%edi
    27af:	f3 41 0f 11 40 04    	movss  %xmm0,0x4(%r8)
    27b5:	75 10                	jne    27c7 <normal_exec+0x1b7>
    27b7:	f3 0f 10 46 08       	movss  0x8(%rsi),%xmm0
    27bc:	bf 03 00 00 00       	mov    $0x3,%edi
    27c1:	f3 41 0f 11 40 08    	movss  %xmm0,0x8(%r8)
    27c7:	45 89 e3             	mov    %r12d,%r11d
    27ca:	89 c2                	mov    %eax,%edx
    27cc:	31 c9                	xor    %ecx,%ecx
    27ce:	41 29 c3             	sub    %eax,%r11d
    27d1:	48 c1 e2 02          	shl    $0x2,%rdx
    27d5:	31 c0                	xor    %eax,%eax
    27d7:	45 89 da             	mov    %r11d,%r10d
    27da:	4c 8d 0c 16          	lea    (%rsi,%rdx,1),%r9
    27de:	4c 01 c2             	add    %r8,%rdx
    27e1:	41 c1 ea 02          	shr    $0x2,%r10d
    27e5:	0f 1f 00             	nopl   (%rax)
    27e8:	41 0f 28 04 01       	movaps (%r9,%rax,1),%xmm0
    27ed:	83 c1 01             	add    $0x1,%ecx
    27f0:	0f 11 04 02          	movups %xmm0,(%rdx,%rax,1)
    27f4:	48 83 c0 10          	add    $0x10,%rax
    27f8:	41 39 ca             	cmp    %ecx,%r10d
    27fb:	77 eb                	ja     27e8 <normal_exec+0x1d8>
    27fd:	44 89 da             	mov    %r11d,%edx
    2800:	83 e2 fc             	and    $0xfffffffc,%edx
    2803:	41 39 d3             	cmp    %edx,%r11d
    2806:	8d 04 3a             	lea    (%rdx,%rdi,1),%eax
    2809:	74 7b                	je     2886 <normal_exec+0x276>
    280b:	48 63 d0             	movslq %eax,%rdx
    280e:	83 c0 01             	add    $0x1,%eax
    2811:	f3 0f 10 04 96       	movss  (%rsi,%rdx,4),%xmm0
    2816:	41 39 c4             	cmp    %eax,%r12d
    2819:	f3 41 0f 11 04 90    	movss  %xmm0,(%r8,%rdx,4)
    281f:	7e 65                	jle    2886 <normal_exec+0x276>
    2821:	48 63 d0             	movslq %eax,%rdx
    2824:	f3 0f 10 04 96       	movss  (%rsi,%rdx,4),%xmm0
    2829:	f3 41 0f 11 04 90    	movss  %xmm0,(%r8,%rdx,4)
    282f:	8d 50 01             	lea    0x1(%rax),%edx
    2832:	41 39 d4             	cmp    %edx,%r12d
    2835:	7e 4f                	jle    2886 <normal_exec+0x276>
    2837:	48 63 d2             	movslq %edx,%rdx
    283a:	f3 0f 10 04 96       	movss  (%rsi,%rdx,4),%xmm0
    283f:	f3 41 0f 11 04 90    	movss  %xmm0,(%r8,%rdx,4)
    2845:	8d 50 02             	lea    0x2(%rax),%edx
    2848:	41 39 d4             	cmp    %edx,%r12d
    284b:	7e 39                	jle    2886 <normal_exec+0x276>
    284d:	48 63 d2             	movslq %edx,%rdx
    2850:	f3 0f 10 04 96       	movss  (%rsi,%rdx,4),%xmm0
    2855:	f3 41 0f 11 04 90    	movss  %xmm0,(%r8,%rdx,4)
    285b:	8d 50 03             	lea    0x3(%rax),%edx
    285e:	41 39 d4             	cmp    %edx,%r12d
    2861:	7e 23                	jle    2886 <normal_exec+0x276>
    2863:	48 63 d2             	movslq %edx,%rdx
    2866:	83 c0 04             	add    $0x4,%eax
    2869:	f3 0f 10 04 96       	movss  (%rsi,%rdx,4),%xmm0
    286e:	41 39 c4             	cmp    %eax,%r12d
    2871:	f3 41 0f 11 04 90    	movss  %xmm0,(%r8,%rdx,4)
    2877:	7e 0d                	jle    2886 <normal_exec+0x276>
    2879:	48 98                	cltq   
    287b:	f3 0f 10 04 86       	movss  (%rsi,%rax,4),%xmm0
    2880:	f3 41 0f 11 04 80    	movss  %xmm0,(%r8,%rax,4)
    2886:	48 83 c3 08          	add    $0x8,%rbx
    288a:	48 3b 5c 24 10       	cmp    0x10(%rsp),%rbx
    288f:	0f 85 93 fe ff ff    	jne    2728 <normal_exec+0x118>
    2895:	8b 44 24 24          	mov    0x24(%rsp),%eax
    2899:	85 c0                	test   %eax,%eax
    289b:	7e 1a                	jle    28b7 <normal_exec+0x2a7>
    289d:	83 e8 01             	sub    $0x1,%eax
    28a0:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    28a5:	be ff 00 00 00       	mov    $0xff,%esi
    28aa:	48 8d 14 85 04 00 00 	lea    0x4(,%rax,4),%rdx
    28b1:	00 
    28b2:	e8 e9 e9 ff ff       	callq  12a0 <memset@plt>
    28b7:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    28bc:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    28c1:	8d 0c 85 04 00 00 00 	lea    0x4(,%rax,4),%ecx
    28c8:	8d 51 ff             	lea    -0x1(%rcx),%edx
    28cb:	89 d0                	mov    %edx,%eax
    28cd:	c1 f8 1f             	sar    $0x1f,%eax
    28d0:	c1 e8 1b             	shr    $0x1b,%eax
    28d3:	01 c2                	add    %eax,%edx
    28d5:	83 e2 1f             	and    $0x1f,%edx
    28d8:	29 d0                	sub    %edx,%eax
    28da:	8d 5c 01 1f          	lea    0x1f(%rcx,%rax,1),%ebx
    28de:	48 63 f3             	movslq %ebx,%rsi
    28e1:	e8 1a ea ff ff       	callq  1300 <calloc@plt>
    28e6:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
    28eb:	48 89 c5             	mov    %rax,%rbp
    28ee:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    28f3:	4c 89 f7             	mov    %r14,%rdi
    28f6:	e8 75 ea ff ff       	callq  1370 <malloc@plt>
    28fb:	4c 89 f7             	mov    %r14,%rdi
    28fe:	49 89 c7             	mov    %rax,%r15
    2901:	e8 6a ea ff ff       	callq  1370 <malloc@plt>
    2906:	48 85 ed             	test   %rbp,%rbp
    2909:	49 89 c6             	mov    %rax,%r14
    290c:	0f 95 c2             	setne  %dl
    290f:	48 85 c0             	test   %rax,%rax
    2912:	0f 95 c0             	setne  %al
    2915:	84 c2                	test   %al,%dl
    2917:	0f 84 d6 04 00 00    	je     2df3 <normal_exec+0x7e3>
    291d:	4d 85 ff             	test   %r15,%r15
    2920:	0f 84 cd 04 00 00    	je     2df3 <normal_exec+0x7e3>
    2926:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    292a:	85 d2                	test   %edx,%edx
    292c:	0f 8e 72 04 00 00    	jle    2da4 <normal_exec+0x794>
    2932:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
    2936:	4c 89 f8             	mov    %r15,%rax
    2939:	48 c1 e8 03          	shr    $0x3,%rax
    293d:	83 e0 01             	and    $0x1,%eax
    2940:	8d 6e ff             	lea    -0x1(%rsi),%ebp
    2943:	83 fd 04             	cmp    $0x4,%ebp
    2946:	0f 86 7c 04 00 00    	jbe    2dc8 <normal_exec+0x7b8>
    294c:	45 31 c0             	xor    %r8d,%r8d
    294f:	85 c0                	test   %eax,%eax
    2951:	74 15                	je     2968 <normal_exec+0x358>
    2953:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    2958:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    295e:	48 8d 56 04          	lea    0x4(%rsi),%rdx
    2962:	49 89 37             	mov    %rsi,(%r15)
    2965:	49 89 16             	mov    %rdx,(%r14)
    2968:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
    296d:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
    2971:	31 c9                	xor    %ecx,%ecx
    2973:	66 0f 6e 5c 24 10    	movd   0x10(%rsp),%xmm3
    2979:	89 5c 24 10          	mov    %ebx,0x10(%rsp)
    297d:	66 0f 6e 64 24 10    	movd   0x10(%rsp),%xmm4
    2983:	66 0f ef f6          	pxor   %xmm6,%xmm6
    2987:	66 0f 70 d3 00       	pshufd $0x0,%xmm3,%xmm2
    298c:	29 c7                	sub    %eax,%edi
    298e:	66 0f 70 ec 00       	pshufd $0x0,%xmm4,%xmm5
    2993:	48 c1 e0 03          	shl    $0x3,%rax
    2997:	f3 0f 7e 5c 24 58    	movq   0x58(%rsp),%xmm3
    299d:	89 fe                	mov    %edi,%esi
    299f:	66 0f 6c db          	punpcklqdq %xmm3,%xmm3
    29a3:	49 8d 14 06          	lea    (%r14,%rax,1),%rdx
    29a7:	66 0f fe 15 11 a9 00 	paddd  0xa911(%rip),%xmm2        # d2c0 <__PRETTY_FUNCTION__.5443+0x10>
    29ae:	00 
    29af:	66 0f 6f fd          	movdqa %xmm5,%xmm7
    29b3:	c1 ee 02             	shr    $0x2,%esi
    29b6:	66 0f 6f 25 22 a9 00 	movdqa 0xa922(%rip),%xmm4        # d2e0 <__PRETTY_FUNCTION__.5443+0x30>
    29bd:	00 
    29be:	4c 01 f8             	add    %r15,%rax
    29c1:	66 0f 73 d7 20       	psrlq  $0x20,%xmm7
    29c6:	66 44 0f 6f 05 01 a9 	movdqa 0xa901(%rip),%xmm8        # d2d0 <__PRETTY_FUNCTION__.5443+0x20>
    29cd:	00 00 
    29cf:	66 0f d4 e3          	paddq  %xmm3,%xmm4
    29d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    29d8:	66 0f 6f ca          	movdqa %xmm2,%xmm1
    29dc:	66 0f 6f c5          	movdqa %xmm5,%xmm0
    29e0:	66 44 0f 6f ce       	movdqa %xmm6,%xmm9
    29e5:	83 c1 01             	add    $0x1,%ecx
    29e8:	66 0f f4 c2          	pmuludq %xmm2,%xmm0
    29ec:	66 0f 73 d1 20       	psrlq  $0x20,%xmm1
    29f1:	66 0f 70 c0 08       	pshufd $0x8,%xmm0,%xmm0
    29f6:	66 0f f4 cf          	pmuludq %xmm7,%xmm1
    29fa:	66 0f 70 c9 08       	pshufd $0x8,%xmm1,%xmm1
    29ff:	48 83 c2 20          	add    $0x20,%rdx
    2a03:	48 83 c0 20          	add    $0x20,%rax
    2a07:	66 41 0f fe d0       	paddd  %xmm8,%xmm2
    2a0c:	66 0f 62 c1          	punpckldq %xmm1,%xmm0
    2a10:	66 44 0f 66 c8       	pcmpgtd %xmm0,%xmm9
    2a15:	66 0f 6f c8          	movdqa %xmm0,%xmm1
    2a19:	66 41 0f 62 c9       	punpckldq %xmm9,%xmm1
    2a1e:	66 41 0f 6a c1       	punpckhdq %xmm9,%xmm0
    2a23:	66 44 0f 6f cb       	movdqa %xmm3,%xmm9
    2a28:	66 44 0f d4 c9       	paddq  %xmm1,%xmm9
    2a2d:	44 0f 29 48 e0       	movaps %xmm9,-0x20(%rax)
    2a32:	66 0f d4 cc          	paddq  %xmm4,%xmm1
    2a36:	66 44 0f 6f cb       	movdqa %xmm3,%xmm9
    2a3b:	0f 11 4a e0          	movups %xmm1,-0x20(%rdx)
    2a3f:	66 44 0f d4 c8       	paddq  %xmm0,%xmm9
    2a44:	66 0f d4 c4          	paddq  %xmm4,%xmm0
    2a48:	44 0f 29 48 f0       	movaps %xmm9,-0x10(%rax)
    2a4d:	0f 11 42 f0          	movups %xmm0,-0x10(%rdx)
    2a51:	39 ce                	cmp    %ecx,%esi
    2a53:	77 83                	ja     29d8 <normal_exec+0x3c8>
    2a55:	89 fa                	mov    %edi,%edx
    2a57:	83 e2 fc             	and    $0xfffffffc,%edx
    2a5a:	39 d7                	cmp    %edx,%edi
    2a5c:	42 8d 04 02          	lea    (%rdx,%r8,1),%eax
    2a60:	0f 84 b2 00 00 00    	je     2b18 <normal_exec+0x508>
    2a66:	89 da                	mov    %ebx,%edx
    2a68:	4c 8b 4c 24 58       	mov    0x58(%rsp),%r9
    2a6d:	48 63 c8             	movslq %eax,%rcx
    2a70:	0f af d0             	imul   %eax,%edx
    2a73:	44 8b 5c 24 1c       	mov    0x1c(%rsp),%r11d
    2a78:	48 63 f2             	movslq %edx,%rsi
    2a7b:	49 8d 3c 31          	lea    (%r9,%rsi,1),%rdi
    2a7f:	49 8d 74 31 04       	lea    0x4(%r9,%rsi,1),%rsi
    2a84:	49 89 3c cf          	mov    %rdi,(%r15,%rcx,8)
    2a88:	49 89 34 ce          	mov    %rsi,(%r14,%rcx,8)
    2a8c:	8d 48 01             	lea    0x1(%rax),%ecx
    2a8f:	44 39 d9             	cmp    %r11d,%ecx
    2a92:	0f 8d 80 00 00 00    	jge    2b18 <normal_exec+0x508>
    2a98:	8d 3c 13             	lea    (%rbx,%rdx,1),%edi
    2a9b:	48 63 d1             	movslq %ecx,%rdx
    2a9e:	48 63 f7             	movslq %edi,%rsi
    2aa1:	49 8d 0c 31          	lea    (%r9,%rsi,1),%rcx
    2aa5:	49 89 0c d7          	mov    %rcx,(%r15,%rdx,8)
    2aa9:	49 8d 4c 31 04       	lea    0x4(%r9,%rsi,1),%rcx
    2aae:	49 89 0c d6          	mov    %rcx,(%r14,%rdx,8)
    2ab2:	8d 50 02             	lea    0x2(%rax),%edx
    2ab5:	41 39 d3             	cmp    %edx,%r11d
    2ab8:	7e 5e                	jle    2b18 <normal_exec+0x508>
    2aba:	01 df                	add    %ebx,%edi
    2abc:	4c 89 ce             	mov    %r9,%rsi
    2abf:	48 63 d2             	movslq %edx,%rdx
    2ac2:	48 63 cf             	movslq %edi,%rcx
    2ac5:	48 01 ce             	add    %rcx,%rsi
    2ac8:	49 8d 4c 09 04       	lea    0x4(%r9,%rcx,1),%rcx
    2acd:	49 89 34 d7          	mov    %rsi,(%r15,%rdx,8)
    2ad1:	4c 89 ce             	mov    %r9,%rsi
    2ad4:	49 89 0c d6          	mov    %rcx,(%r14,%rdx,8)
    2ad8:	8d 50 03             	lea    0x3(%rax),%edx
    2adb:	41 39 d3             	cmp    %edx,%r11d
    2ade:	7e 38                	jle    2b18 <normal_exec+0x508>
    2ae0:	01 df                	add    %ebx,%edi
    2ae2:	83 c0 04             	add    $0x4,%eax
    2ae5:	48 63 d2             	movslq %edx,%rdx
    2ae8:	48 63 cf             	movslq %edi,%rcx
    2aeb:	48 01 ce             	add    %rcx,%rsi
    2aee:	49 8d 4c 09 04       	lea    0x4(%r9,%rcx,1),%rcx
    2af3:	41 39 c3             	cmp    %eax,%r11d
    2af6:	49 89 34 d7          	mov    %rsi,(%r15,%rdx,8)
    2afa:	49 89 0c d6          	mov    %rcx,(%r14,%rdx,8)
    2afe:	7e 18                	jle    2b18 <normal_exec+0x508>
    2b00:	01 df                	add    %ebx,%edi
    2b02:	48 98                	cltq   
    2b04:	48 63 d7             	movslq %edi,%rdx
    2b07:	49 8d 0c 11          	lea    (%r9,%rdx,1),%rcx
    2b0b:	49 8d 54 11 04       	lea    0x4(%r9,%rdx,1),%rdx
    2b10:	49 89 0c c7          	mov    %rcx,(%r15,%rax,8)
    2b14:	49 89 14 c6          	mov    %rdx,(%r14,%rax,8)
    2b18:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
    2b1d:	31 f6                	xor    %esi,%esi
    2b1f:	48 8d 2c ed 08 00 00 	lea    0x8(,%rbp,8),%rbp
    2b26:	00 
    2b27:	e8 54 e7 ff ff       	callq  1280 <gettimeofday@plt>
    2b2c:	66 0f ef e4          	pxor   %xmm4,%xmm4
    2b30:	8b 44 24 54          	mov    0x54(%rsp),%eax
    2b34:	c7 44 24 54 f5 01 00 	movl   $0x1f5,0x54(%rsp)
    2b3b:	00 
    2b3c:	f3 0f 2a 64 24 24    	cvtsi2ssl 0x24(%rsp),%xmm4
    2b42:	8d 04 40             	lea    (%rax,%rax,2),%eax
    2b45:	48 98                	cltq   
    2b47:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    2b4c:	41 8d 44 24 ff       	lea    -0x1(%r12),%eax
    2b51:	4c 8d 2c 85 04 00 00 	lea    0x4(,%rax,4),%r13
    2b58:	00 
    2b59:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
    2b60:	00 
    2b61:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    2b66:	4c 89 e8             	mov    %r13,%rax
    2b69:	4d 89 f5             	mov    %r14,%r13
    2b6c:	49 89 c6             	mov    %rax,%r14
    2b6f:	f3 0f 11 64 24 48    	movss  %xmm4,0x48(%rsp)
    2b75:	0f 1f 00             	nopl   (%rax)
    2b78:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    2b7d:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2b82:	48 8d 3d 47 f8 ff ff 	lea    -0x7b9(%rip),%rdi        # 23d0 <work>
    2b89:	44 89 a4 24 88 00 00 	mov    %r12d,0x88(%rsp)
    2b90:	00 
    2b91:	31 db                	xor    %ebx,%ebx
    2b93:	4c 89 bc 24 a8 00 00 	mov    %r15,0xa8(%rsp)
    2b9a:	00 
    2b9b:	4c 89 ac 24 b0 00 00 	mov    %r13,0xb0(%rsp)
    2ba2:	00 
    2ba3:	48 89 b4 24 98 00 00 	mov    %rsi,0x98(%rsp)
    2baa:	00 
    2bab:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    2bb0:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
    2bb7:	00 
    2bb8:	8b 44 24 24          	mov    0x24(%rsp),%eax
    2bbc:	c7 05 8a db a0 00 00 	movl   $0x0,0xa0db8a(%rip)        # a10750 <global_delta>
    2bc3:	00 00 00 
    2bc6:	48 89 b4 24 a0 00 00 	mov    %rsi,0xa0(%rsp)
    2bcd:	00 
    2bce:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    2bd3:	89 84 24 8c 00 00 00 	mov    %eax,0x8c(%rsp)
    2bda:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    2bde:	48 89 35 63 db a0 00 	mov    %rsi,0xa0db63(%rip)        # a10748 <global_i>
    2be5:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    2bea:	89 84 24 90 00 00 00 	mov    %eax,0x90(%rsp)
    2bf1:	e8 da 0e 00 00       	callq  3ad0 <thread_start>
    2bf6:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    2bfa:	f3 0f 10 35 4e db a0 	movss  0xa0db4e(%rip),%xmm6        # a10750 <global_delta>
    2c01:	00 
    2c02:	f3 0f 11 74 24 20    	movss  %xmm6,0x20(%rsp)
    2c08:	0f 28 c6             	movaps %xmm6,%xmm0
    2c0b:	85 c0                	test   %eax,%eax
    2c0d:	0f 8e 7e 00 00 00    	jle    2c91 <normal_exec+0x681>
    2c13:	48 89 e8             	mov    %rbp,%rax
    2c16:	44 89 e1             	mov    %r12d,%ecx
    2c19:	4c 89 ed             	mov    %r13,%rbp
    2c1c:	49 89 c5             	mov    %rax,%r13
    2c1f:	90                   	nop
    2c20:	85 c9                	test   %ecx,%ecx
    2c22:	4d 8b 24 1f          	mov    (%r15,%rbx,1),%r12
    2c26:	7e 46                	jle    2c6e <normal_exec+0x65e>
    2c28:	4d 85 e4             	test   %r12,%r12
    2c2b:	48 8b 7c 1d 00       	mov    0x0(%rbp,%rbx,1),%rdi
    2c30:	0f 84 22 01 00 00    	je     2d58 <normal_exec+0x748>
    2c36:	66 0f ef c9          	pxor   %xmm1,%xmm1
    2c3a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2c3f:	f3 41 0f 2a 0c 24    	cvtsi2ssl (%r12),%xmm1
    2c45:	48 8b 14 18          	mov    (%rax,%rbx,1),%rdx
    2c49:	31 c0                	xor    %eax,%eax
    2c4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2c50:	f3 0f 10 04 07       	movss  (%rdi,%rax,1),%xmm0
    2c55:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    2c59:	f3 0f 11 04 02       	movss  %xmm0,(%rdx,%rax,1)
    2c5e:	c7 04 07 00 00 00 00 	movl   $0x0,(%rdi,%rax,1)
    2c65:	48 83 c0 04          	add    $0x4,%rax
    2c69:	4c 39 f0             	cmp    %r14,%rax
    2c6c:	75 e2                	jne    2c50 <normal_exec+0x640>
    2c6e:	48 83 c3 08          	add    $0x8,%rbx
    2c72:	41 c7 04 24 00 00 00 	movl   $0x0,(%r12)
    2c79:	00 
    2c7a:	4c 39 eb             	cmp    %r13,%rbx
    2c7d:	75 a1                	jne    2c20 <normal_exec+0x610>
    2c7f:	4c 89 e8             	mov    %r13,%rax
    2c82:	41 89 cc             	mov    %ecx,%r12d
    2c85:	49 89 ed             	mov    %rbp,%r13
    2c88:	f3 0f 10 44 24 20    	movss  0x20(%rsp),%xmm0
    2c8e:	48 89 c5             	mov    %rax,%rbp
    2c91:	f3 0f 5e 44 24 48    	divss  0x48(%rsp),%xmm0
    2c97:	0f 2e 44 24 50       	ucomiss 0x50(%rsp),%xmm0
    2c9c:	76 0b                	jbe    2ca9 <normal_exec+0x699>
    2c9e:	83 6c 24 54 01       	subl   $0x1,0x54(%rsp)
    2ca3:	0f 85 cf fe ff ff    	jne    2b78 <normal_exec+0x568>
    2ca9:	48 8d 7c 24 70       	lea    0x70(%rsp),%rdi
    2cae:	31 f6                	xor    %esi,%esi
    2cb0:	e8 cb e5 ff ff       	callq  1280 <gettimeofday@plt>
    2cb5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2cb9:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
    2cbe:	f2 0f 10 15 2a a6 00 	movsd  0xa62a(%rip),%xmm2        # d2f0 <__PRETTY_FUNCTION__.5443+0x40>
    2cc5:	00 
    2cc6:	66 0f ef c9          	pxor   %xmm1,%xmm1
    2cca:	f2 48 0f 2a 44 24 78 	cvtsi2sdq 0x78(%rsp),%xmm0
    2cd1:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
    2cd5:	f2 48 0f 2a 4c 24 70 	cvtsi2sdq 0x70(%rsp),%xmm1
    2cdc:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    2ce0:	66 0f ef c9          	pxor   %xmm1,%xmm1
    2ce4:	f2 48 0f 2a 4c 24 68 	cvtsi2sdq 0x68(%rsp),%xmm1
    2ceb:	f2 0f 5e ca          	divsd  %xmm2,%xmm1
    2cef:	66 0f ef d2          	pxor   %xmm2,%xmm2
    2cf3:	f2 48 0f 2a 54 24 60 	cvtsi2sdq 0x60(%rsp),%xmm2
    2cfa:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
    2cfe:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
    2d02:	f2 0f 58 05 e6 d3 20 	addsd  0x20d3e6(%rip),%xmm0        # 2100f0 <global_time>
    2d09:	00 
    2d0a:	f2 0f 11 05 de d3 20 	movsd  %xmm0,0x20d3de(%rip)        # 2100f0 <global_time>
    2d11:	00 
    2d12:	e8 99 e7 ff ff       	callq  14b0 <free@plt>
    2d17:	4c 89 ef             	mov    %r13,%rdi
    2d1a:	e8 91 e7 ff ff       	callq  14b0 <free@plt>
    2d1f:	4c 89 ff             	mov    %r15,%rdi
    2d22:	e8 89 e7 ff ff       	callq  14b0 <free@plt>
    2d27:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
    2d2e:	00 
    2d2f:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    2d36:	00 00 
    2d38:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2d3d:	0f 85 8c 00 00 00    	jne    2dcf <normal_exec+0x7bf>
    2d43:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
    2d4a:	5b                   	pop    %rbx
    2d4b:	5d                   	pop    %rbp
    2d4c:	41 5c                	pop    %r12
    2d4e:	41 5d                	pop    %r13
    2d50:	41 5e                	pop    %r14
    2d52:	41 5f                	pop    %r15
    2d54:	c3                   	retq   
    2d55:	0f 1f 00             	nopl   (%rax)
    2d58:	4c 89 f2             	mov    %r14,%rdx
    2d5b:	31 f6                	xor    %esi,%esi
    2d5d:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
    2d61:	e8 3a e5 ff ff       	callq  12a0 <memset@plt>
    2d66:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
    2d6a:	e9 ff fe ff ff       	jmpq   2c6e <normal_exec+0x65e>
    2d6f:	31 c0                	xor    %eax,%eax
    2d71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2d78:	f3 0f 10 04 06       	movss  (%rsi,%rax,1),%xmm0
    2d7d:	f3 41 0f 11 04 00    	movss  %xmm0,(%r8,%rax,1)
    2d83:	48 83 c0 04          	add    $0x4,%rax
    2d87:	4c 39 e8             	cmp    %r13,%rax
    2d8a:	75 ec                	jne    2d78 <normal_exec+0x768>
    2d8c:	e9 f5 fa ff ff       	jmpq   2886 <normal_exec+0x276>
    2d91:	f3 0f 10 06          	movss  (%rsi),%xmm0
    2d95:	b8 01 00 00 00       	mov    $0x1,%eax
    2d9a:	f3 41 0f 11 00       	movss  %xmm0,(%r8)
    2d9f:	e9 7d fa ff ff       	jmpq   2821 <normal_exec+0x211>
    2da4:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    2da8:	8d 68 ff             	lea    -0x1(%rax),%ebp
    2dab:	e9 68 fd ff ff       	jmpq   2b18 <normal_exec+0x508>
    2db0:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
    2db4:	85 c9                	test   %ecx,%ecx
    2db6:	0f 8e d9 fa ff ff    	jle    2895 <normal_exec+0x285>
    2dbc:	e9 2e f9 ff ff       	jmpq   26ef <normal_exec+0xdf>
    2dc1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2dc8:	31 c0                	xor    %eax,%eax
    2dca:	e9 97 fc ff ff       	jmpq   2a66 <normal_exec+0x456>
    2dcf:	e8 6c e4 ff ff       	callq  1240 <__stack_chk_fail@plt>
    2dd4:	48 8d 0d d5 a4 00 00 	lea    0xa4d5(%rip),%rcx        # d2b0 <__PRETTY_FUNCTION__.5443>
    2ddb:	48 8d 35 7a a4 00 00 	lea    0xa47a(%rip),%rsi        # d25c <__PRETTY_FUNCTION__.6333+0xc>
    2de2:	48 8d 3d 85 a4 00 00 	lea    0xa485(%rip),%rdi        # d26e <__PRETTY_FUNCTION__.6333+0x1e>
    2de9:	ba e5 00 00 00       	mov    $0xe5,%edx
    2dee:	e8 9d e4 ff ff       	callq  1290 <__assert_fail@plt>
    2df3:	48 8d 0d b6 a4 00 00 	lea    0xa4b6(%rip),%rcx        # d2b0 <__PRETTY_FUNCTION__.5443>
    2dfa:	48 8d 35 5b a4 00 00 	lea    0xa45b(%rip),%rsi        # d25c <__PRETTY_FUNCTION__.6333+0xc>
    2e01:	48 8d 3d 78 a4 00 00 	lea    0xa478(%rip),%rdi        # d280 <__PRETTY_FUNCTION__.6333+0x30>
    2e08:	ba 01 01 00 00       	mov    $0x101,%edx
    2e0d:	e8 7e e4 ff ff       	callq  1290 <__assert_fail@plt>
    2e12:	48 8d 0d 97 a4 00 00 	lea    0xa497(%rip),%rcx        # d2b0 <__PRETTY_FUNCTION__.5443>
    2e19:	48 8d 35 3c a4 00 00 	lea    0xa43c(%rip),%rsi        # d25c <__PRETTY_FUNCTION__.6333+0xc>
    2e20:	48 8d 3d 3e a4 00 00 	lea    0xa43e(%rip),%rdi        # d265 <__PRETTY_FUNCTION__.6333+0x15>
    2e27:	ba e3 00 00 00       	mov    $0xe3,%edx
    2e2c:	e8 5f e4 ff ff       	callq  1290 <__assert_fail@plt>
    2e31:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2e38:	00 00 00 
    2e3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002e40 <init_genrand>:
    2e40:	89 d1                	mov    %edx,%ecx
    2e42:	ba 01 00 00 00       	mov    $0x1,%edx
    2e47:	48 89 0f             	mov    %rcx,(%rdi)
    2e4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2e50:	48 89 c8             	mov    %rcx,%rax
    2e53:	48 c1 e8 1e          	shr    $0x1e,%rax
    2e57:	48 31 c8             	xor    %rcx,%rax
    2e5a:	48 69 c0 65 89 07 6c 	imul   $0x6c078965,%rax,%rax
    2e61:	8d 0c 10             	lea    (%rax,%rdx,1),%ecx
    2e64:	48 89 0c d7          	mov    %rcx,(%rdi,%rdx,8)
    2e68:	48 83 c2 01          	add    $0x1,%rdx
    2e6c:	48 81 fa 70 02 00 00 	cmp    $0x270,%rdx
    2e73:	75 db                	jne    2e50 <init_genrand+0x10>
    2e75:	48 c7 06 70 02 00 00 	movq   $0x270,(%rsi)
    2e7c:	c3                   	retq   
    2e7d:	0f 1f 00             	nopl   (%rax)

0000000000002e80 <init_by_array>:
    2e80:	41 54                	push   %r12
    2e82:	55                   	push   %rbp
    2e83:	41 b9 aa d6 2b 01    	mov    $0x12bd6aa,%r9d
    2e89:	53                   	push   %rbx
    2e8a:	48 c7 07 aa d6 2b 01 	movq   $0x12bd6aa,(%rdi)
    2e91:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    2e97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    2e9e:	00 00 
    2ea0:	4c 89 c8             	mov    %r9,%rax
    2ea3:	48 c1 e8 1e          	shr    $0x1e,%rax
    2ea7:	4c 31 c8             	xor    %r9,%rax
    2eaa:	48 69 c0 65 89 07 6c 	imul   $0x6c078965,%rax,%rax
    2eb1:	46 8d 0c 00          	lea    (%rax,%r8,1),%r9d
    2eb5:	4e 89 0c c7          	mov    %r9,(%rdi,%r8,8)
    2eb9:	49 83 c0 01          	add    $0x1,%r8
    2ebd:	49 81 f8 70 02 00 00 	cmp    $0x270,%r8
    2ec4:	75 da                	jne    2ea0 <init_by_array+0x20>
    2ec6:	48 c7 06 70 02 00 00 	movq   $0x270,(%rsi)
    2ecd:	4c 8b 17             	mov    (%rdi),%r10
    2ed0:	48 81 f9 70 02 00 00 	cmp    $0x270,%rcx
    2ed7:	4d 89 c1             	mov    %r8,%r9
    2eda:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    2ee0:	4c 0f 4d c9          	cmovge %rcx,%r9
    2ee4:	45 31 db             	xor    %r11d,%r11d
    2ee7:	45 31 e4             	xor    %r12d,%r12d
    2eea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2ef0:	4a 8d 2c c5 00 00 00 	lea    0x0(,%r8,8),%rbp
    2ef7:	00 
    2ef8:	4c 89 d0             	mov    %r10,%rax
    2efb:	49 83 c0 01          	add    $0x1,%r8
    2eff:	48 c1 e8 1e          	shr    $0x1e,%rax
    2f03:	4c 31 d0             	xor    %r10,%rax
    2f06:	48 8d 1c 2f          	lea    (%rdi,%rbp,1),%rbx
    2f0a:	4e 8b 14 da          	mov    (%rdx,%r11,8),%r10
    2f0e:	48 69 c0 0d 66 19 00 	imul   $0x19660d,%rax,%rax
    2f15:	48 33 03             	xor    (%rbx),%rax
    2f18:	4d 01 da             	add    %r11,%r10
    2f1b:	49 83 c3 01          	add    $0x1,%r11
    2f1f:	44 01 d0             	add    %r10d,%eax
    2f22:	49 81 f8 6f 02 00 00 	cmp    $0x26f,%r8
    2f29:	48 89 03             	mov    %rax,(%rbx)
    2f2c:	49 89 c2             	mov    %rax,%r10
    2f2f:	7e 10                	jle    2f41 <init_by_array+0xc1>
    2f31:	4c 8b 97 78 13 00 00 	mov    0x1378(%rdi),%r10
    2f38:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    2f3e:	4c 89 17             	mov    %r10,(%rdi)
    2f41:	4c 39 d9             	cmp    %r11,%rcx
    2f44:	4d 0f 4e dc          	cmovle %r12,%r11
    2f48:	49 83 e9 01          	sub    $0x1,%r9
    2f4c:	75 a2                	jne    2ef0 <init_by_array+0x70>
    2f4e:	ba 6f 02 00 00       	mov    $0x26f,%edx
    2f53:	eb 08                	jmp    2f5d <init_by_array+0xdd>
    2f55:	0f 1f 00             	nopl   (%rax)
    2f58:	4e 8b 54 c7 f8       	mov    -0x8(%rdi,%r8,8),%r10
    2f5d:	4c 89 d0             	mov    %r10,%rax
    2f60:	4a 8d 0c c7          	lea    (%rdi,%r8,8),%rcx
    2f64:	48 c1 e8 1e          	shr    $0x1e,%rax
    2f68:	4c 31 d0             	xor    %r10,%rax
    2f6b:	48 69 c0 65 8b 58 5d 	imul   $0x5d588b65,%rax,%rax
    2f72:	48 33 01             	xor    (%rcx),%rax
    2f75:	44 29 c0             	sub    %r8d,%eax
    2f78:	49 83 c0 01          	add    $0x1,%r8
    2f7c:	49 81 f8 70 02 00 00 	cmp    $0x270,%r8
    2f83:	48 89 01             	mov    %rax,(%rcx)
    2f86:	75 10                	jne    2f98 <init_by_array+0x118>
    2f88:	48 8b 87 78 13 00 00 	mov    0x1378(%rdi),%rax
    2f8f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    2f95:	48 89 07             	mov    %rax,(%rdi)
    2f98:	48 83 ea 01          	sub    $0x1,%rdx
    2f9c:	75 ba                	jne    2f58 <init_by_array+0xd8>
    2f9e:	b8 00 00 00 80       	mov    $0x80000000,%eax
    2fa3:	5b                   	pop    %rbx
    2fa4:	48 89 07             	mov    %rax,(%rdi)
    2fa7:	48 c7 06 71 02 00 00 	movq   $0x271,(%rsi)
    2fae:	5d                   	pop    %rbp
    2faf:	41 5c                	pop    %r12
    2fb1:	c3                   	retq   
    2fb2:	0f 1f 40 00          	nopl   0x0(%rax)
    2fb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2fbd:	00 00 00 

0000000000002fc0 <genrand_int32>:
    2fc0:	48 8b 06             	mov    (%rsi),%rax
    2fc3:	48 3d 6f 02 00 00    	cmp    $0x26f,%rax
    2fc9:	0f 86 1f 01 00 00    	jbe    30ee <genrand_int32+0x12e>
    2fcf:	48 3d 71 02 00 00    	cmp    $0x271,%rax
    2fd5:	0f 84 1d 01 00 00    	je     30f8 <genrand_int32+0x138>
    2fdb:	4c 8b 17             	mov    (%rdi),%r10
    2fde:	4c 8d 9f 18 07 00 00 	lea    0x718(%rdi),%r11
    2fe5:	4c 8d 05 14 a3 00 00 	lea    0xa314(%rip),%r8        # d300 <mag01.2500>
    2fec:	48 89 fa             	mov    %rdi,%rdx
    2fef:	48 89 f9             	mov    %rdi,%rcx
    2ff2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2ff8:	41 81 e2 00 00 00 80 	and    $0x80000000,%r10d
    2fff:	48 83 c1 08          	add    $0x8,%rcx
    3003:	4d 89 d1             	mov    %r10,%r9
    3006:	4c 8b 11             	mov    (%rcx),%r10
    3009:	4c 89 d0             	mov    %r10,%rax
    300c:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
    3011:	4c 09 c8             	or     %r9,%rax
    3014:	49 89 c1             	mov    %rax,%r9
    3017:	83 e0 01             	and    $0x1,%eax
    301a:	49 d1 e9             	shr    %r9
    301d:	4c 33 89 60 0c 00 00 	xor    0xc60(%rcx),%r9
    3024:	4d 33 0c c0          	xor    (%r8,%rax,8),%r9
    3028:	4c 89 49 f8          	mov    %r9,-0x8(%rcx)
    302c:	49 39 cb             	cmp    %rcx,%r11
    302f:	75 c7                	jne    2ff8 <genrand_int32+0x38>
    3031:	4c 8b 8f 18 07 00 00 	mov    0x718(%rdi),%r9
    3038:	4c 8d 97 60 0c 00 00 	lea    0xc60(%rdi),%r10
    303f:	90                   	nop
    3040:	4c 89 c9             	mov    %r9,%rcx
    3043:	4c 8b 8a 20 07 00 00 	mov    0x720(%rdx),%r9
    304a:	48 83 c2 08          	add    $0x8,%rdx
    304e:	81 e1 00 00 00 80    	and    $0x80000000,%ecx
    3054:	4c 89 c8             	mov    %r9,%rax
    3057:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
    305c:	48 09 c8             	or     %rcx,%rax
    305f:	48 89 c1             	mov    %rax,%rcx
    3062:	83 e0 01             	and    $0x1,%eax
    3065:	48 d1 e9             	shr    %rcx
    3068:	48 33 4a f8          	xor    -0x8(%rdx),%rcx
    306c:	49 33 0c c0          	xor    (%r8,%rax,8),%rcx
    3070:	48 89 8a 10 07 00 00 	mov    %rcx,0x710(%rdx)
    3077:	49 39 d2             	cmp    %rdx,%r10
    307a:	75 c4                	jne    3040 <genrand_int32+0x80>
    307c:	48 8b 07             	mov    (%rdi),%rax
    307f:	48 8b 8f 78 13 00 00 	mov    0x1378(%rdi),%rcx
    3086:	48 89 c2             	mov    %rax,%rdx
    3089:	81 e1 00 00 00 80    	and    $0x80000000,%ecx
    308f:	81 e2 ff ff ff 7f    	and    $0x7fffffff,%edx
    3095:	48 09 d1             	or     %rdx,%rcx
    3098:	48 89 ca             	mov    %rcx,%rdx
    309b:	83 e1 01             	and    $0x1,%ecx
    309e:	48 d1 ea             	shr    %rdx
    30a1:	48 33 97 60 0c 00 00 	xor    0xc60(%rdi),%rdx
    30a8:	49 33 14 c8          	xor    (%r8,%rcx,8),%rdx
    30ac:	b9 01 00 00 00       	mov    $0x1,%ecx
    30b1:	48 89 97 78 13 00 00 	mov    %rdx,0x1378(%rdi)
    30b8:	48 89 c2             	mov    %rax,%rdx
    30bb:	48 89 0e             	mov    %rcx,(%rsi)
    30be:	48 c1 ea 0b          	shr    $0xb,%rdx
    30c2:	48 31 c2             	xor    %rax,%rdx
    30c5:	48 89 d0             	mov    %rdx,%rax
    30c8:	48 c1 e0 07          	shl    $0x7,%rax
    30cc:	25 80 56 2c 9d       	and    $0x9d2c5680,%eax
    30d1:	48 31 c2             	xor    %rax,%rdx
    30d4:	48 89 d0             	mov    %rdx,%rax
    30d7:	48 c1 e0 0f          	shl    $0xf,%rax
    30db:	25 00 00 c6 ef       	and    $0xefc60000,%eax
    30e0:	48 31 d0             	xor    %rdx,%rax
    30e3:	48 89 c2             	mov    %rax,%rdx
    30e6:	48 c1 ea 12          	shr    $0x12,%rdx
    30ea:	48 31 d0             	xor    %rdx,%rax
    30ed:	c3                   	retq   
    30ee:	48 8d 48 01          	lea    0x1(%rax),%rcx
    30f2:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    30f6:	eb c0                	jmp    30b8 <genrand_int32+0xf8>
    30f8:	48 c7 07 71 15 00 00 	movq   $0x1571,(%rdi)
    30ff:	b9 71 15 00 00       	mov    $0x1571,%ecx
    3104:	ba 01 00 00 00       	mov    $0x1,%edx
    3109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3110:	48 89 c8             	mov    %rcx,%rax
    3113:	48 c1 e8 1e          	shr    $0x1e,%rax
    3117:	48 31 c8             	xor    %rcx,%rax
    311a:	48 69 c0 65 89 07 6c 	imul   $0x6c078965,%rax,%rax
    3121:	8d 0c 10             	lea    (%rax,%rdx,1),%ecx
    3124:	48 89 0c d7          	mov    %rcx,(%rdi,%rdx,8)
    3128:	48 83 c2 01          	add    $0x1,%rdx
    312c:	48 81 fa 70 02 00 00 	cmp    $0x270,%rdx
    3133:	75 db                	jne    3110 <genrand_int32+0x150>
    3135:	48 c7 06 70 02 00 00 	movq   $0x270,(%rsi)
    313c:	e9 9a fe ff ff       	jmpq   2fdb <genrand_int32+0x1b>
    3141:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3146:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    314d:	00 00 00 

0000000000003150 <genrand_int31>:
    3150:	e8 6b fe ff ff       	callq  2fc0 <genrand_int32>
    3155:	48 d1 e8             	shr    %rax
    3158:	c3                   	retq   
    3159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003160 <genrand_real1>:
    3160:	e8 5b fe ff ff       	callq  2fc0 <genrand_int32>
    3165:	48 85 c0             	test   %rax,%rax
    3168:	78 16                	js     3180 <genrand_real1+0x20>
    316a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    316e:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    3173:	f2 0f 59 05 95 a1 00 	mulsd  0xa195(%rip),%xmm0        # d310 <mag01.2500+0x10>
    317a:	00 
    317b:	c3                   	retq   
    317c:	0f 1f 40 00          	nopl   0x0(%rax)
    3180:	48 89 c2             	mov    %rax,%rdx
    3183:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3187:	48 d1 ea             	shr    %rdx
    318a:	83 e0 01             	and    $0x1,%eax
    318d:	48 09 c2             	or     %rax,%rdx
    3190:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    3195:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    3199:	f2 0f 59 05 6f a1 00 	mulsd  0xa16f(%rip),%xmm0        # d310 <mag01.2500+0x10>
    31a0:	00 
    31a1:	c3                   	retq   
    31a2:	0f 1f 40 00          	nopl   0x0(%rax)
    31a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    31ad:	00 00 00 

00000000000031b0 <genrand_real2>:
    31b0:	e8 0b fe ff ff       	callq  2fc0 <genrand_int32>
    31b5:	48 85 c0             	test   %rax,%rax
    31b8:	78 16                	js     31d0 <genrand_real2+0x20>
    31ba:	66 0f ef c0          	pxor   %xmm0,%xmm0
    31be:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    31c3:	f2 0f 59 05 4d a1 00 	mulsd  0xa14d(%rip),%xmm0        # d318 <mag01.2500+0x18>
    31ca:	00 
    31cb:	c3                   	retq   
    31cc:	0f 1f 40 00          	nopl   0x0(%rax)
    31d0:	48 89 c2             	mov    %rax,%rdx
    31d3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    31d7:	48 d1 ea             	shr    %rdx
    31da:	83 e0 01             	and    $0x1,%eax
    31dd:	48 09 c2             	or     %rax,%rdx
    31e0:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    31e5:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    31e9:	f2 0f 59 05 27 a1 00 	mulsd  0xa127(%rip),%xmm0        # d318 <mag01.2500+0x18>
    31f0:	00 
    31f1:	c3                   	retq   
    31f2:	0f 1f 40 00          	nopl   0x0(%rax)
    31f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    31fd:	00 00 00 

0000000000003200 <genrand_real3>:
    3200:	e8 bb fd ff ff       	callq  2fc0 <genrand_int32>
    3205:	48 85 c0             	test   %rax,%rax
    3208:	78 1e                	js     3228 <genrand_real3+0x28>
    320a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    320e:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    3213:	f2 0f 58 05 05 a1 00 	addsd  0xa105(%rip),%xmm0        # d320 <mag01.2500+0x20>
    321a:	00 
    321b:	f2 0f 59 05 f5 a0 00 	mulsd  0xa0f5(%rip),%xmm0        # d318 <mag01.2500+0x18>
    3222:	00 
    3223:	c3                   	retq   
    3224:	0f 1f 40 00          	nopl   0x0(%rax)
    3228:	48 89 c2             	mov    %rax,%rdx
    322b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    322f:	48 d1 ea             	shr    %rdx
    3232:	83 e0 01             	and    $0x1,%eax
    3235:	48 09 c2             	or     %rax,%rdx
    3238:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    323d:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    3241:	eb d0                	jmp    3213 <genrand_real3+0x13>
    3243:	0f 1f 00             	nopl   (%rax)
    3246:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    324d:	00 00 00 

0000000000003250 <genrand_res53>:
    3250:	41 54                	push   %r12
    3252:	55                   	push   %rbp
    3253:	53                   	push   %rbx
    3254:	e8 67 fd ff ff       	callq  2fc0 <genrand_int32>
    3259:	48 89 c3             	mov    %rax,%rbx
    325c:	e8 5f fd ff ff       	callq  2fc0 <genrand_int32>
    3261:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3265:	48 c1 eb 05          	shr    $0x5,%rbx
    3269:	66 0f ef c9          	pxor   %xmm1,%xmm1
    326d:	48 c1 e8 06          	shr    $0x6,%rax
    3271:	f2 48 0f 2a c3       	cvtsi2sd %rbx,%xmm0
    3276:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    327b:	5b                   	pop    %rbx
    327c:	5d                   	pop    %rbp
    327d:	41 5c                	pop    %r12
    327f:	f2 0f 59 05 a1 a0 00 	mulsd  0xa0a1(%rip),%xmm0        # d328 <mag01.2500+0x28>
    3286:	00 
    3287:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    328b:	f2 0f 59 05 9d a0 00 	mulsd  0xa09d(%rip),%xmm0        # d330 <mag01.2500+0x30>
    3292:	00 
    3293:	c3                   	retq   
    3294:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    329b:	00 00 00 
    329e:	66 90                	xchg   %ax,%ax

00000000000032a0 <random_alloc>:
    32a0:	48 83 ec 18          	sub    $0x18,%rsp
    32a4:	bf 90 13 00 00       	mov    $0x1390,%edi
    32a9:	e8 c2 e0 ff ff       	callq  1370 <malloc@plt>
    32ae:	48 85 c0             	test   %rax,%rax
    32b1:	74 27                	je     32da <random_alloc+0x3a>
    32b3:	48 8d b0 88 13 00 00 	lea    0x1388(%rax),%rsi
    32ba:	48 8d 78 08          	lea    0x8(%rax),%rdi
    32be:	48 c7 80 88 13 00 00 	movq   $0x270,0x1388(%rax)
    32c5:	70 02 00 00 
    32c9:	31 d2                	xor    %edx,%edx
    32cb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    32d0:	e8 6b fb ff ff       	callq  2e40 <init_genrand>
    32d5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    32da:	48 83 c4 18          	add    $0x18,%rsp
    32de:	c3                   	retq   
    32df:	90                   	nop

00000000000032e0 <Prandom_alloc>:
    32e0:	48 83 ec 18          	sub    $0x18,%rsp
    32e4:	bf 90 13 00 00       	mov    $0x1390,%edi
    32e9:	e8 82 e0 ff ff       	callq  1370 <malloc@plt>
    32ee:	48 85 c0             	test   %rax,%rax
    32f1:	74 27                	je     331a <Prandom_alloc+0x3a>
    32f3:	48 8d b0 88 13 00 00 	lea    0x1388(%rax),%rsi
    32fa:	48 8d 78 08          	lea    0x8(%rax),%rdi
    32fe:	48 c7 80 88 13 00 00 	movq   $0x270,0x1388(%rax)
    3305:	70 02 00 00 
    3309:	31 d2                	xor    %edx,%edx
    330b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3310:	e8 2b fb ff ff       	callq  2e40 <init_genrand>
    3315:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    331a:	48 83 c4 18          	add    $0x18,%rsp
    331e:	c3                   	retq   
    331f:	90                   	nop

0000000000003320 <random_free>:
    3320:	e9 8b e1 ff ff       	jmpq   14b0 <free@plt>
    3325:	90                   	nop
    3326:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    332d:	00 00 00 

0000000000003330 <Prandom_free>:
    3330:	e9 7b e1 ff ff       	jmpq   14b0 <free@plt>
    3335:	90                   	nop
    3336:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    333d:	00 00 00 

0000000000003340 <random_seed>:
    3340:	48 89 f2             	mov    %rsi,%rdx
    3343:	48 8d b7 88 13 00 00 	lea    0x1388(%rdi),%rsi
    334a:	48 83 c7 08          	add    $0x8,%rdi
    334e:	e9 ed fa ff ff       	jmpq   2e40 <init_genrand>
    3353:	0f 1f 00             	nopl   (%rax)
    3356:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    335d:	00 00 00 

0000000000003360 <random_generate>:
    3360:	48 8d b7 88 13 00 00 	lea    0x1388(%rdi),%rsi
    3367:	48 83 c7 08          	add    $0x8,%rdi
    336b:	e9 50 fc ff ff       	jmpq   2fc0 <genrand_int32>

0000000000003370 <thread_startup>:
    3370:	41 56                	push   %r14
    3372:	41 55                	push   %r13
    3374:	41 54                	push   %r12
    3376:	55                   	push   %rbp
    3377:	53                   	push   %rbx
    3378:	48 83 ec 10          	sub    $0x10,%rsp
    337c:	48 83 3d dc cd 20 00 	cmpq   $0x0,0x20cddc(%rip)        # 210160 <global_barrierPtr>
    3383:	00 
    3384:	48 89 3d 85 cc 20 00 	mov    %rdi,0x20cc85(%rip)        # 210010 <global_numThread>
    338b:	48 c7 05 6a cd 20 00 	movq   $0x0,0x20cd6a(%rip)        # 210100 <global_doShutdown>
    3392:	00 00 00 00 
    3396:	0f 85 29 03 00 00    	jne    36c5 <thread_startup+0x355>
    339c:	48 85 ff             	test   %rdi,%rdi
    339f:	48 89 fd             	mov    %rdi,%rbp
    33a2:	0f 8e fe 02 00 00    	jle    36a6 <thread_startup+0x336>
    33a8:	4c 8d 6f ff          	lea    -0x1(%rdi),%r13
    33ac:	4d 89 ec             	mov    %r13,%r12
    33af:	49 21 fc             	and    %rdi,%r12
    33b2:	0f 85 91 02 00 00    	jne    3649 <thread_startup+0x2d9>
    33b8:	48 8d 04 ff          	lea    (%rdi,%rdi,8),%rax
    33bc:	4c 8d 34 47          	lea    (%rdi,%rax,2),%r14
    33c0:	49 c1 e6 03          	shl    $0x3,%r14
    33c4:	4c 89 f7             	mov    %r14,%rdi
    33c7:	e8 a4 df ff ff       	callq  1370 <malloc@plt>
    33cc:	48 85 c0             	test   %rax,%rax
    33cf:	0f 84 2b 02 00 00    	je     3600 <thread_startup+0x290>
    33d5:	48 89 a8 90 00 00 00 	mov    %rbp,0x90(%rax)
    33dc:	48 89 05 7d cd 20 00 	mov    %rax,0x20cd7d(%rip)        # 210160 <global_barrierPtr>
    33e3:	48 89 c3             	mov    %rax,%rbx
    33e6:	49 01 c6             	add    %rax,%r14
    33e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    33f0:	48 c7 83 88 00 00 00 	movq   $0x0,0x88(%rbx)
    33f7:	00 00 00 00 
    33fb:	31 f6                	xor    %esi,%esi
    33fd:	48 89 df             	mov    %rbx,%rdi
    3400:	e8 7b e0 ff ff       	callq  1480 <pthread_mutex_init@plt>
    3405:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
    3409:	31 f6                	xor    %esi,%esi
    340b:	e8 30 df ff ff       	callq  1340 <pthread_cond_init@plt>
    3410:	48 8d 7b 58          	lea    0x58(%rbx),%rdi
    3414:	31 f6                	xor    %esi,%esi
    3416:	48 81 c3 98 00 00 00 	add    $0x98,%rbx
    341d:	e8 1e df ff ff       	callq  1340 <pthread_cond_init@plt>
    3422:	4c 39 f3             	cmp    %r14,%rbx
    3425:	75 c9                	jne    33f0 <thread_startup+0x80>
    3427:	48 8d 3d 3a cd 20 00 	lea    0x20cd3a(%rip),%rdi        # 210168 <global_threadId>
    342e:	31 f6                	xor    %esi,%esi
    3430:	e8 6b df ff ff       	callq  13a0 <pthread_key_create@plt>
    3435:	48 83 3d 1b cd 20 00 	cmpq   $0x0,0x20cd1b(%rip)        # 210158 <global_threadIds>
    343c:	00 
    343d:	0f 85 44 02 00 00    	jne    3687 <thread_startup+0x317>
    3443:	4c 8d 34 ed 00 00 00 	lea    0x0(,%rbp,8),%r14
    344a:	00 
    344b:	4c 89 f7             	mov    %r14,%rdi
    344e:	e8 1d df ff ff       	callq  1370 <malloc@plt>
    3453:	48 85 c0             	test   %rax,%rax
    3456:	48 89 c3             	mov    %rax,%rbx
    3459:	48 89 05 f8 cc 20 00 	mov    %rax,0x20ccf8(%rip)        # 210158 <global_threadIds>
    3460:	0f 84 02 02 00 00    	je     3668 <thread_startup+0x2f8>
    3466:	48 c1 e8 03          	shr    $0x3,%rax
    346a:	83 e0 01             	and    $0x1,%eax
    346d:	49 83 fd 08          	cmp    $0x8,%r13
    3471:	76 75                	jbe    34e8 <thread_startup+0x178>
    3473:	48 85 c0             	test   %rax,%rax
    3476:	74 0d                	je     3485 <thread_startup+0x115>
    3478:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    347f:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    3485:	49 8d 54 24 01       	lea    0x1(%r12),%rdx
    348a:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
    348f:	48 89 ee             	mov    %rbp,%rsi
    3492:	48 29 c6             	sub    %rax,%rsi
    3495:	f3 0f 7e 44 24 08    	movq   0x8(%rsp),%xmm0
    349b:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    34a0:	48 89 f1             	mov    %rsi,%rcx
    34a3:	48 8d 14 c3          	lea    (%rbx,%rax,8),%rdx
    34a7:	0f 16 44 24 08       	movhps 0x8(%rsp),%xmm0
    34ac:	66 0f 6f 0d 7c 9f 00 	movdqa 0x9f7c(%rip),%xmm1        # d430 <__PRETTY_FUNCTION__.3065+0x18>
    34b3:	00 
    34b4:	48 d1 e9             	shr    %rcx
    34b7:	31 c0                	xor    %eax,%eax
    34b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    34c0:	48 83 c0 01          	add    $0x1,%rax
    34c4:	48 83 c2 10          	add    $0x10,%rdx
    34c8:	0f 29 42 f0          	movaps %xmm0,-0x10(%rdx)
    34cc:	66 0f d4 c1          	paddq  %xmm1,%xmm0
    34d0:	48 39 c1             	cmp    %rax,%rcx
    34d3:	77 eb                	ja     34c0 <thread_startup+0x150>
    34d5:	48 89 f0             	mov    %rsi,%rax
    34d8:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    34dc:	49 01 c4             	add    %rax,%r12
    34df:	48 39 c6             	cmp    %rax,%rsi
    34e2:	0f 84 88 00 00 00    	je     3570 <thread_startup+0x200>
    34e8:	49 8d 54 24 01       	lea    0x1(%r12),%rdx
    34ed:	4a 8d 04 e5 00 00 00 	lea    0x0(,%r12,8),%rax
    34f4:	00 
    34f5:	4e 89 24 e3          	mov    %r12,(%rbx,%r12,8)
    34f9:	48 39 ea             	cmp    %rbp,%rdx
    34fc:	7d 72                	jge    3570 <thread_startup+0x200>
    34fe:	48 89 54 03 08       	mov    %rdx,0x8(%rbx,%rax,1)
    3503:	49 8d 54 24 02       	lea    0x2(%r12),%rdx
    3508:	48 39 d5             	cmp    %rdx,%rbp
    350b:	7e 63                	jle    3570 <thread_startup+0x200>
    350d:	48 89 54 03 10       	mov    %rdx,0x10(%rbx,%rax,1)
    3512:	49 8d 54 24 03       	lea    0x3(%r12),%rdx
    3517:	48 39 d5             	cmp    %rdx,%rbp
    351a:	7e 54                	jle    3570 <thread_startup+0x200>
    351c:	48 89 54 03 18       	mov    %rdx,0x18(%rbx,%rax,1)
    3521:	49 8d 54 24 04       	lea    0x4(%r12),%rdx
    3526:	48 39 d5             	cmp    %rdx,%rbp
    3529:	7e 45                	jle    3570 <thread_startup+0x200>
    352b:	48 89 54 03 20       	mov    %rdx,0x20(%rbx,%rax,1)
    3530:	49 8d 54 24 05       	lea    0x5(%r12),%rdx
    3535:	48 39 d5             	cmp    %rdx,%rbp
    3538:	7e 36                	jle    3570 <thread_startup+0x200>
    353a:	48 89 54 03 28       	mov    %rdx,0x28(%rbx,%rax,1)
    353f:	49 8d 54 24 06       	lea    0x6(%r12),%rdx
    3544:	48 39 d5             	cmp    %rdx,%rbp
    3547:	7e 27                	jle    3570 <thread_startup+0x200>
    3549:	48 89 54 03 30       	mov    %rdx,0x30(%rbx,%rax,1)
    354e:	49 8d 54 24 07       	lea    0x7(%r12),%rdx
    3553:	48 39 d5             	cmp    %rdx,%rbp
    3556:	7e 18                	jle    3570 <thread_startup+0x200>
    3558:	49 83 c4 08          	add    $0x8,%r12
    355c:	48 89 54 03 38       	mov    %rdx,0x38(%rbx,%rax,1)
    3561:	4c 39 e5             	cmp    %r12,%rbp
    3564:	7e 0a                	jle    3570 <thread_startup+0x200>
    3566:	4c 89 64 03 40       	mov    %r12,0x40(%rbx,%rax,1)
    356b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3570:	48 83 3d a0 cb 20 00 	cmpq   $0x0,0x20cba0(%rip)        # 210118 <global_threads>
    3577:	00 
    3578:	0f 85 ac 00 00 00    	jne    362a <thread_startup+0x2ba>
    357e:	4c 89 f7             	mov    %r14,%rdi
    3581:	e8 ea dd ff ff       	callq  1370 <malloc@plt>
    3586:	48 85 c0             	test   %rax,%rax
    3589:	49 89 c4             	mov    %rax,%r12
    358c:	48 89 05 85 cb 20 00 	mov    %rax,0x20cb85(%rip)        # 210118 <global_threads>
    3593:	0f 84 4b 01 00 00    	je     36e4 <thread_startup+0x374>
    3599:	48 8d 3d 80 cb 20 00 	lea    0x20cb80(%rip),%rdi        # 210120 <global_threadAttr>
    35a0:	e8 2b dd ff ff       	callq  12d0 <pthread_attr_init@plt>
    35a5:	48 83 fd 01          	cmp    $0x1,%rbp
    35a9:	74 43                	je     35ee <thread_startup+0x27e>
    35ab:	bd 08 00 00 00       	mov    $0x8,%ebp
    35b0:	4c 8d 2d c9 03 00 00 	lea    0x3c9(%rip),%r13        # 3980 <threadWait>
    35b7:	eb 15                	jmp    35ce <thread_startup+0x25e>
    35b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    35c0:	48 8b 1d 91 cb 20 00 	mov    0x20cb91(%rip),%rbx        # 210158 <global_threadIds>
    35c7:	4c 8b 25 4a cb 20 00 	mov    0x20cb4a(%rip),%r12        # 210118 <global_threads>
    35ce:	48 8d 0c 2b          	lea    (%rbx,%rbp,1),%rcx
    35d2:	49 8d 3c 2c          	lea    (%r12,%rbp,1),%rdi
    35d6:	48 8d 35 43 cb 20 00 	lea    0x20cb43(%rip),%rsi        # 210120 <global_threadAttr>
    35dd:	4c 89 ea             	mov    %r13,%rdx
    35e0:	48 83 c5 08          	add    $0x8,%rbp
    35e4:	e8 07 dc ff ff       	callq  11f0 <pthread_create@plt>
    35e9:	49 39 ee             	cmp    %rbp,%r14
    35ec:	75 d2                	jne    35c0 <thread_startup+0x250>
    35ee:	48 83 c4 10          	add    $0x10,%rsp
    35f2:	5b                   	pop    %rbx
    35f3:	5d                   	pop    %rbp
    35f4:	41 5c                	pop    %r12
    35f6:	41 5d                	pop    %r13
    35f8:	41 5e                	pop    %r14
    35fa:	c3                   	retq   
    35fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3600:	48 8d 0d 11 9e 00 00 	lea    0x9e11(%rip),%rcx        # d418 <__PRETTY_FUNCTION__.3065>
    3607:	48 8d 35 2a 9d 00 00 	lea    0x9d2a(%rip),%rsi        # d338 <mag01.2500+0x38>
    360e:	48 8d 3d ab 9d 00 00 	lea    0x9dab(%rip),%rdi        # d3c0 <mag01.2500+0xc0>
    3615:	ba 83 00 00 00       	mov    $0x83,%edx
    361a:	48 c7 05 3b cb 20 00 	movq   $0x0,0x20cb3b(%rip)        # 210160 <global_barrierPtr>
    3621:	00 00 00 00 
    3625:	e8 66 dc ff ff       	callq  1290 <__assert_fail@plt>
    362a:	48 8d 0d e7 9d 00 00 	lea    0x9de7(%rip),%rcx        # d418 <__PRETTY_FUNCTION__.3065>
    3631:	48 8d 35 00 9d 00 00 	lea    0x9d00(%rip),%rsi        # d338 <mag01.2500+0x38>
    3638:	48 8d 3d 5b 9d 00 00 	lea    0x9d5b(%rip),%rdi        # d39a <mag01.2500+0x9a>
    363f:	ba 90 00 00 00       	mov    $0x90,%edx
    3644:	e8 47 dc ff ff       	callq  1290 <__assert_fail@plt>
    3649:	48 8d 0d b0 9d 00 00 	lea    0x9db0(%rip),%rcx        # d400 <__PRETTY_FUNCTION__.3090>
    3650:	48 8d 35 e1 9c 00 00 	lea    0x9ce1(%rip),%rsi        # d338 <mag01.2500+0x38>
    3657:	48 8d 3d 7a 9d 00 00 	lea    0x9d7a(%rip),%rdi        # d3d8 <mag01.2500+0xd8>
    365e:	ba df 00 00 00       	mov    $0xdf,%edx
    3663:	e8 28 dc ff ff       	callq  1290 <__assert_fail@plt>
    3668:	48 8d 0d a9 9d 00 00 	lea    0x9da9(%rip),%rcx        # d418 <__PRETTY_FUNCTION__.3065>
    366f:	48 8d 35 c2 9c 00 00 	lea    0x9cc2(%rip),%rsi        # d338 <mag01.2500+0x38>
    3676:	48 8d 3d 0c 9d 00 00 	lea    0x9d0c(%rip),%rdi        # d389 <mag01.2500+0x89>
    367d:	ba 8a 00 00 00       	mov    $0x8a,%edx
    3682:	e8 09 dc ff ff       	callq  1290 <__assert_fail@plt>
    3687:	48 8d 0d 8a 9d 00 00 	lea    0x9d8a(%rip),%rcx        # d418 <__PRETTY_FUNCTION__.3065>
    368e:	48 8d 35 a3 9c 00 00 	lea    0x9ca3(%rip),%rsi        # d338 <mag01.2500+0x38>
    3695:	48 8d 3d d4 9c 00 00 	lea    0x9cd4(%rip),%rdi        # d370 <mag01.2500+0x70>
    369c:	ba 88 00 00 00       	mov    $0x88,%edx
    36a1:	e8 ea db ff ff       	callq  1290 <__assert_fail@plt>
    36a6:	48 8d 0d 53 9d 00 00 	lea    0x9d53(%rip),%rcx        # d400 <__PRETTY_FUNCTION__.3090>
    36ad:	48 8d 35 84 9c 00 00 	lea    0x9c84(%rip),%rsi        # d338 <mag01.2500+0x38>
    36b4:	48 8d 3d a7 9c 00 00 	lea    0x9ca7(%rip),%rdi        # d362 <mag01.2500+0x62>
    36bb:	ba de 00 00 00       	mov    $0xde,%edx
    36c0:	e8 cb db ff ff       	callq  1290 <__assert_fail@plt>
    36c5:	48 8d 0d 4c 9d 00 00 	lea    0x9d4c(%rip),%rcx        # d418 <__PRETTY_FUNCTION__.3065>
    36cc:	48 8d 35 65 9c 00 00 	lea    0x9c65(%rip),%rsi        # d338 <mag01.2500+0x38>
    36d3:	48 8d 3d 6e 9c 00 00 	lea    0x9c6e(%rip),%rdi        # d348 <mag01.2500+0x48>
    36da:	ba 81 00 00 00       	mov    $0x81,%edx
    36df:	e8 ac db ff ff       	callq  1290 <__assert_fail@plt>
    36e4:	48 8d 0d 2d 9d 00 00 	lea    0x9d2d(%rip),%rcx        # d418 <__PRETTY_FUNCTION__.3065>
    36eb:	48 8d 35 46 9c 00 00 	lea    0x9c46(%rip),%rsi        # d338 <mag01.2500+0x38>
    36f2:	48 8d 3d b8 9c 00 00 	lea    0x9cb8(%rip),%rdi        # d3b1 <mag01.2500+0xb1>
    36f9:	ba 92 00 00 00       	mov    $0x92,%edx
    36fe:	e8 8d db ff ff       	callq  1290 <__assert_fail@plt>
    3703:	0f 1f 00             	nopl   (%rax)
    3706:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    370d:	00 00 00 

0000000000003710 <thread_barrier_alloc>:
    3710:	48 85 ff             	test   %rdi,%rdi
    3713:	53                   	push   %rbx
    3714:	7e 2b                	jle    3741 <thread_barrier_alloc+0x31>
    3716:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
    371a:	48 89 fb             	mov    %rdi,%rbx
    371d:	48 85 f8             	test   %rdi,%rax
    3720:	75 3e                	jne    3760 <thread_barrier_alloc+0x50>
    3722:	48 8d 04 ff          	lea    (%rdi,%rdi,8),%rax
    3726:	48 8d 3c 47          	lea    (%rdi,%rax,2),%rdi
    372a:	48 c1 e7 03          	shl    $0x3,%rdi
    372e:	e8 3d dc ff ff       	callq  1370 <malloc@plt>
    3733:	48 85 c0             	test   %rax,%rax
    3736:	74 07                	je     373f <thread_barrier_alloc+0x2f>
    3738:	48 89 98 90 00 00 00 	mov    %rbx,0x90(%rax)
    373f:	5b                   	pop    %rbx
    3740:	c3                   	retq   
    3741:	48 8d 0d b8 9c 00 00 	lea    0x9cb8(%rip),%rcx        # d400 <__PRETTY_FUNCTION__.3090>
    3748:	48 8d 35 e9 9b 00 00 	lea    0x9be9(%rip),%rsi        # d338 <mag01.2500+0x38>
    374f:	48 8d 3d 0c 9c 00 00 	lea    0x9c0c(%rip),%rdi        # d362 <mag01.2500+0x62>
    3756:	ba de 00 00 00       	mov    $0xde,%edx
    375b:	e8 30 db ff ff       	callq  1290 <__assert_fail@plt>
    3760:	48 8d 0d 99 9c 00 00 	lea    0x9c99(%rip),%rcx        # d400 <__PRETTY_FUNCTION__.3090>
    3767:	48 8d 35 ca 9b 00 00 	lea    0x9bca(%rip),%rsi        # d338 <mag01.2500+0x38>
    376e:	48 8d 3d 63 9c 00 00 	lea    0x9c63(%rip),%rdi        # d3d8 <mag01.2500+0xd8>
    3775:	ba df 00 00 00       	mov    $0xdf,%edx
    377a:	e8 11 db ff ff       	callq  1290 <__assert_fail@plt>
    377f:	90                   	nop

0000000000003780 <thread_barrier_free>:
    3780:	e9 2b dd ff ff       	jmpq   14b0 <free@plt>
    3785:	90                   	nop
    3786:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    378d:	00 00 00 

0000000000003790 <thread_barrier_init>:
    3790:	48 8b 87 90 00 00 00 	mov    0x90(%rdi),%rax
    3797:	48 85 c0             	test   %rax,%rax
    379a:	7e 64                	jle    3800 <thread_barrier_init+0x70>
    379c:	48 8d 14 c0          	lea    (%rax,%rax,8),%rdx
    37a0:	55                   	push   %rbp
    37a1:	53                   	push   %rbx
    37a2:	48 89 fb             	mov    %rdi,%rbx
    37a5:	48 8d 04 50          	lea    (%rax,%rdx,2),%rax
    37a9:	48 83 ec 08          	sub    $0x8,%rsp
    37ad:	48 8d 2c c7          	lea    (%rdi,%rax,8),%rbp
    37b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    37b8:	48 c7 83 88 00 00 00 	movq   $0x0,0x88(%rbx)
    37bf:	00 00 00 00 
    37c3:	31 f6                	xor    %esi,%esi
    37c5:	48 89 df             	mov    %rbx,%rdi
    37c8:	e8 b3 dc ff ff       	callq  1480 <pthread_mutex_init@plt>
    37cd:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
    37d1:	31 f6                	xor    %esi,%esi
    37d3:	e8 68 db ff ff       	callq  1340 <pthread_cond_init@plt>
    37d8:	48 8d 7b 58          	lea    0x58(%rbx),%rdi
    37dc:	31 f6                	xor    %esi,%esi
    37de:	48 81 c3 98 00 00 00 	add    $0x98,%rbx
    37e5:	e8 56 db ff ff       	callq  1340 <pthread_cond_init@plt>
    37ea:	48 39 eb             	cmp    %rbp,%rbx
    37ed:	75 c9                	jne    37b8 <thread_barrier_init+0x28>
    37ef:	48 83 c4 08          	add    $0x8,%rsp
    37f3:	5b                   	pop    %rbx
    37f4:	5d                   	pop    %rbp
    37f5:	c3                   	retq   
    37f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    37fd:	00 00 00 
    3800:	f3 c3                	repz retq 
    3802:	0f 1f 40 00          	nopl   0x0(%rax)
    3806:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    380d:	00 00 00 

0000000000003810 <thread_barrier>:
    3810:	41 57                	push   %r15
    3812:	41 56                	push   %r14
    3814:	41 55                	push   %r13
    3816:	41 54                	push   %r12
    3818:	55                   	push   %rbp
    3819:	53                   	push   %rbx
    381a:	48 83 ec 18          	sub    $0x18,%rsp
    381e:	4c 8b af 90 00 00 00 	mov    0x90(%rdi),%r13
    3825:	49 83 fd 01          	cmp    $0x1,%r13
    3829:	0f 8e ea 00 00 00    	jle    3919 <thread_barrier+0x109>
    382f:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    3834:	49 89 ff             	mov    %rdi,%r15
    3837:	45 31 e4             	xor    %r12d,%r12d
    383a:	bb 02 00 00 00       	mov    $0x2,%ebx
    383f:	90                   	nop
    3840:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3845:	48 99                	cqto   
    3847:	48 f7 fb             	idiv   %rbx
    384a:	4c 01 e0             	add    %r12,%rax
    384d:	48 85 d2             	test   %rdx,%rdx
    3850:	48 8d 0c c0          	lea    (%rax,%rax,8),%rcx
    3854:	48 8d 04 48          	lea    (%rax,%rcx,2),%rax
    3858:	4d 8d 34 c7          	lea    (%r15,%rax,8),%r14
    385c:	4c 89 f7             	mov    %r14,%rdi
    385f:	0f 85 cb 00 00 00    	jne    3930 <thread_barrier+0x120>
    3865:	e8 26 dc ff ff       	callq  1490 <pthread_mutex_lock@plt>
    386a:	49 8b 86 88 00 00 00 	mov    0x88(%r14),%rax
    3871:	48 83 c0 01          	add    $0x1,%rax
    3875:	48 83 f8 01          	cmp    $0x1,%rax
    3879:	49 89 86 88 00 00 00 	mov    %rax,0x88(%r14)
    3880:	7f 23                	jg     38a5 <thread_barrier+0x95>
    3882:	49 8d 6e 28          	lea    0x28(%r14),%rbp
    3886:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    388d:	00 00 00 
    3890:	4c 89 f6             	mov    %r14,%rsi
    3893:	48 89 ef             	mov    %rbp,%rdi
    3896:	e8 85 d9 ff ff       	callq  1220 <pthread_cond_wait@plt>
    389b:	49 83 be 88 00 00 00 	cmpq   $0x1,0x88(%r14)
    38a2:	01 
    38a3:	7e eb                	jle    3890 <thread_barrier+0x80>
    38a5:	4c 89 f7             	mov    %r14,%rdi
    38a8:	e8 b3 da ff ff       	callq  1360 <pthread_mutex_unlock@plt>
    38ad:	4c 89 e8             	mov    %r13,%rax
    38b0:	48 99                	cqto   
    38b2:	48 f7 fb             	idiv   %rbx
    38b5:	48 01 db             	add    %rbx,%rbx
    38b8:	49 01 c4             	add    %rax,%r12
    38bb:	49 39 dd             	cmp    %rbx,%r13
    38be:	7d 80                	jge    3840 <thread_barrier+0x30>
    38c0:	eb 4e                	jmp    3910 <thread_barrier+0x100>
    38c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    38c8:	4c 89 e8             	mov    %r13,%rax
    38cb:	48 99                	cqto   
    38cd:	48 f7 fb             	idiv   %rbx
    38d0:	49 29 c4             	sub    %rax,%r12
    38d3:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    38d8:	48 99                	cqto   
    38da:	48 f7 fb             	idiv   %rbx
    38dd:	4c 01 e0             	add    %r12,%rax
    38e0:	48 8d 14 c0          	lea    (%rax,%rax,8),%rdx
    38e4:	48 8d 04 50          	lea    (%rax,%rdx,2),%rax
    38e8:	49 8d 2c c7          	lea    (%r15,%rax,8),%rbp
    38ec:	48 89 ef             	mov    %rbp,%rdi
    38ef:	e8 9c db ff ff       	callq  1490 <pthread_mutex_lock@plt>
    38f4:	48 8d 7d 58          	lea    0x58(%rbp),%rdi
    38f8:	48 c7 85 88 00 00 00 	movq   $0x0,0x88(%rbp)
    38ff:	00 00 00 00 
    3903:	e8 e8 d9 ff ff       	callq  12f0 <pthread_cond_signal@plt>
    3908:	48 89 ef             	mov    %rbp,%rdi
    390b:	e8 50 da ff ff       	callq  1360 <pthread_mutex_unlock@plt>
    3910:	48 d1 fb             	sar    %rbx
    3913:	48 83 fb 01          	cmp    $0x1,%rbx
    3917:	75 af                	jne    38c8 <thread_barrier+0xb8>
    3919:	48 83 c4 18          	add    $0x18,%rsp
    391d:	5b                   	pop    %rbx
    391e:	5d                   	pop    %rbp
    391f:	41 5c                	pop    %r12
    3921:	41 5d                	pop    %r13
    3923:	41 5e                	pop    %r14
    3925:	41 5f                	pop    %r15
    3927:	c3                   	retq   
    3928:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    392f:	00 
    3930:	e8 5b db ff ff       	callq  1490 <pthread_mutex_lock@plt>
    3935:	49 8b 86 88 00 00 00 	mov    0x88(%r14),%rax
    393c:	48 83 c0 01          	add    $0x1,%rax
    3940:	48 83 f8 02          	cmp    $0x2,%rax
    3944:	49 89 86 88 00 00 00 	mov    %rax,0x88(%r14)
    394b:	74 24                	je     3971 <thread_barrier+0x161>
    394d:	49 8d 6e 58          	lea    0x58(%r14),%rbp
    3951:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3958:	4c 89 f6             	mov    %r14,%rsi
    395b:	48 89 ef             	mov    %rbp,%rdi
    395e:	e8 bd d8 ff ff       	callq  1220 <pthread_cond_wait@plt>
    3963:	85 c0                	test   %eax,%eax
    3965:	75 f1                	jne    3958 <thread_barrier+0x148>
    3967:	4c 89 f7             	mov    %r14,%rdi
    396a:	e8 f1 d9 ff ff       	callq  1360 <pthread_mutex_unlock@plt>
    396f:	eb 9f                	jmp    3910 <thread_barrier+0x100>
    3971:	49 8d 7e 28          	lea    0x28(%r14),%rdi
    3975:	e8 76 d9 ff ff       	callq  12f0 <pthread_cond_signal@plt>
    397a:	eb d1                	jmp    394d <thread_barrier+0x13d>
    397c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003980 <threadWait>:
    3980:	53                   	push   %rbx
    3981:	48 8b 1f             	mov    (%rdi),%rbx
    3984:	8b 3d de c7 20 00    	mov    0x20c7de(%rip),%edi        # 210168 <global_threadId>
    398a:	48 89 de             	mov    %rbx,%rsi
    398d:	e8 ce d8 ff ff       	callq  1260 <pthread_setspecific@plt>
    3992:	48 85 db             	test   %rbx,%rbx
    3995:	75 25                	jne    39bc <threadWait+0x3c>
    3997:	eb 47                	jmp    39e0 <threadWait+0x60>
    3999:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    39a0:	48 8b 3d 61 c7 20 00 	mov    0x20c761(%rip),%rdi        # 210108 <global_argPtr>
    39a7:	ff 15 63 c7 20 00    	callq  *0x20c763(%rip)        # 210110 <global_funcPtr>
    39ad:	48 8b 3d ac c7 20 00 	mov    0x20c7ac(%rip),%rdi        # 210160 <global_barrierPtr>
    39b4:	48 89 de             	mov    %rbx,%rsi
    39b7:	e8 54 fe ff ff       	callq  3810 <thread_barrier>
    39bc:	48 8b 3d 9d c7 20 00 	mov    0x20c79d(%rip),%rdi        # 210160 <global_barrierPtr>
    39c3:	48 89 de             	mov    %rbx,%rsi
    39c6:	e8 45 fe ff ff       	callq  3810 <thread_barrier>
    39cb:	48 8b 05 2e c7 20 00 	mov    0x20c72e(%rip),%rax        # 210100 <global_doShutdown>
    39d2:	48 85 c0             	test   %rax,%rax
    39d5:	74 c9                	je     39a0 <threadWait+0x20>
    39d7:	5b                   	pop    %rbx
    39d8:	c3                   	retq   
    39d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    39e0:	48 8b 3d 79 c7 20 00 	mov    0x20c779(%rip),%rdi        # 210160 <global_barrierPtr>
    39e7:	31 f6                	xor    %esi,%esi
    39e9:	e8 22 fe ff ff       	callq  3810 <thread_barrier>
    39ee:	48 8b 05 0b c7 20 00 	mov    0x20c70b(%rip),%rax        # 210100 <global_doShutdown>
    39f5:	48 85 c0             	test   %rax,%rax
    39f8:	75 dd                	jne    39d7 <threadWait+0x57>
    39fa:	48 8b 3d 07 c7 20 00 	mov    0x20c707(%rip),%rdi        # 210108 <global_argPtr>
    3a01:	ff 15 09 c7 20 00    	callq  *0x20c709(%rip)        # 210110 <global_funcPtr>
    3a07:	5b                   	pop    %rbx
    3a08:	48 8b 3d 51 c7 20 00 	mov    0x20c751(%rip),%rdi        # 210160 <global_barrierPtr>
    3a0f:	31 f6                	xor    %esi,%esi
    3a11:	e9 fa fd ff ff       	jmpq   3810 <thread_barrier>
    3a16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3a1d:	00 00 00 

0000000000003a20 <thread_shutdown>:
    3a20:	55                   	push   %rbp
    3a21:	53                   	push   %rbx
    3a22:	31 f6                	xor    %esi,%esi
    3a24:	48 83 ec 08          	sub    $0x8,%rsp
    3a28:	48 8b 3d 31 c7 20 00 	mov    0x20c731(%rip),%rdi        # 210160 <global_barrierPtr>
    3a2f:	48 c7 05 c6 c6 20 00 	movq   $0x1,0x20c6c6(%rip)        # 210100 <global_doShutdown>
    3a36:	01 00 00 00 
    3a3a:	e8 d1 fd ff ff       	callq  3810 <thread_barrier>
    3a3f:	48 8b 2d ca c5 20 00 	mov    0x20c5ca(%rip),%rbp        # 210010 <global_numThread>
    3a46:	48 83 fd 01          	cmp    $0x1,%rbp
    3a4a:	7e 27                	jle    3a73 <thread_shutdown+0x53>
    3a4c:	bb 01 00 00 00       	mov    $0x1,%ebx
    3a51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3a58:	48 8b 05 b9 c6 20 00 	mov    0x20c6b9(%rip),%rax        # 210118 <global_threads>
    3a5f:	31 f6                	xor    %esi,%esi
    3a61:	48 8b 3c d8          	mov    (%rax,%rbx,8),%rdi
    3a65:	48 83 c3 01          	add    $0x1,%rbx
    3a69:	e8 a2 d9 ff ff       	callq  1410 <pthread_join@plt>
    3a6e:	48 39 dd             	cmp    %rbx,%rbp
    3a71:	75 e5                	jne    3a58 <thread_shutdown+0x38>
    3a73:	48 8b 3d e6 c6 20 00 	mov    0x20c6e6(%rip),%rdi        # 210160 <global_barrierPtr>
    3a7a:	e8 31 da ff ff       	callq  14b0 <free@plt>
    3a7f:	48 8b 3d d2 c6 20 00 	mov    0x20c6d2(%rip),%rdi        # 210158 <global_threadIds>
    3a86:	48 c7 05 cf c6 20 00 	movq   $0x0,0x20c6cf(%rip)        # 210160 <global_barrierPtr>
    3a8d:	00 00 00 00 
    3a91:	e8 1a da ff ff       	callq  14b0 <free@plt>
    3a96:	48 8b 3d 7b c6 20 00 	mov    0x20c67b(%rip),%rdi        # 210118 <global_threads>
    3a9d:	48 c7 05 b0 c6 20 00 	movq   $0x0,0x20c6b0(%rip)        # 210158 <global_threadIds>
    3aa4:	00 00 00 00 
    3aa8:	e8 03 da ff ff       	callq  14b0 <free@plt>
    3aad:	48 c7 05 60 c6 20 00 	movq   $0x0,0x20c660(%rip)        # 210118 <global_threads>
    3ab4:	00 00 00 00 
    3ab8:	48 c7 05 4d c5 20 00 	movq   $0x1,0x20c54d(%rip)        # 210010 <global_numThread>
    3abf:	01 00 00 00 
    3ac3:	48 83 c4 08          	add    $0x8,%rsp
    3ac7:	5b                   	pop    %rbx
    3ac8:	5d                   	pop    %rbp
    3ac9:	c3                   	retq   
    3aca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000003ad0 <thread_start>:
    3ad0:	48 83 ec 08          	sub    $0x8,%rsp
    3ad4:	48 89 3d 35 c6 20 00 	mov    %rdi,0x20c635(%rip)        # 210110 <global_funcPtr>
    3adb:	8b 3d 87 c6 20 00    	mov    0x20c687(%rip),%edi        # 210168 <global_threadId>
    3ae1:	48 89 35 20 c6 20 00 	mov    %rsi,0x20c620(%rip)        # 210108 <global_argPtr>
    3ae8:	31 f6                	xor    %esi,%esi
    3aea:	e8 71 d7 ff ff       	callq  1260 <pthread_setspecific@plt>
    3aef:	48 8b 3d 6a c6 20 00 	mov    0x20c66a(%rip),%rdi        # 210160 <global_barrierPtr>
    3af6:	31 f6                	xor    %esi,%esi
    3af8:	e8 13 fd ff ff       	callq  3810 <thread_barrier>
    3afd:	48 8b 05 fc c5 20 00 	mov    0x20c5fc(%rip),%rax        # 210100 <global_doShutdown>
    3b04:	48 85 c0             	test   %rax,%rax
    3b07:	75 1f                	jne    3b28 <thread_start+0x58>
    3b09:	48 8b 3d f8 c5 20 00 	mov    0x20c5f8(%rip),%rdi        # 210108 <global_argPtr>
    3b10:	ff 15 fa c5 20 00    	callq  *0x20c5fa(%rip)        # 210110 <global_funcPtr>
    3b16:	48 8b 3d 43 c6 20 00 	mov    0x20c643(%rip),%rdi        # 210160 <global_barrierPtr>
    3b1d:	31 f6                	xor    %esi,%esi
    3b1f:	48 83 c4 08          	add    $0x8,%rsp
    3b23:	e9 e8 fc ff ff       	jmpq   3810 <thread_barrier>
    3b28:	58                   	pop    %rax
    3b29:	c3                   	retq   
    3b2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000003b30 <thread_getId>:
    3b30:	8b 3d 32 c6 20 00    	mov    0x20c632(%rip),%edi        # 210168 <global_threadId>
    3b36:	e9 15 d8 ff ff       	jmpq   1350 <pthread_getspecific@plt>
    3b3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003b40 <thread_getNumThread>:
    3b40:	48 8b 05 c9 c4 20 00 	mov    0x20c4c9(%rip),%rax        # 210010 <global_numThread>
    3b47:	c3                   	retq   
    3b48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3b4f:	00 

0000000000003b50 <thread_barrier_wait>:
    3b50:	48 83 ec 08          	sub    $0x8,%rsp
    3b54:	8b 3d 0e c6 20 00    	mov    0x20c60e(%rip),%edi        # 210168 <global_threadId>
    3b5a:	e8 f1 d7 ff ff       	callq  1350 <pthread_getspecific@plt>
    3b5f:	48 8b 3d fa c5 20 00 	mov    0x20c5fa(%rip),%rdi        # 210160 <global_barrierPtr>
    3b66:	48 89 c6             	mov    %rax,%rsi
    3b69:	48 83 c4 08          	add    $0x8,%rsp
    3b6d:	e9 9e fc ff ff       	jmpq   3810 <thread_barrier>
    3b72:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3b79:	00 00 00 
    3b7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003b80 <rollover_clock>:
    3b80:	48 8d 3d f9 c5 20 00 	lea    0x20c5f9(%rip),%rdi        # 210180 <_tinystm>
    3b87:	ba 00 00 80 00       	mov    $0x800000,%edx
    3b8c:	31 f6                	xor    %esi,%esi
    3b8e:	48 c7 05 67 c6 a0 00 	movq   $0x0,0xa0c667(%rip)        # a10200 <_tinystm+0x800080>
    3b95:	00 00 00 00 
    3b99:	e9 02 d7 ff ff       	jmpq   12a0 <memset@plt>
    3b9e:	66 90                	xchg   %ax,%ax

0000000000003ba0 <stm_allocate_rs_entries>:
    3ba0:	53                   	push   %rbx
    3ba1:	48 89 fb             	mov    %rdi,%rbx
    3ba4:	48 83 ec 10          	sub    $0x10,%rsp
    3ba8:	85 f6                	test   %esi,%esi
    3baa:	8b 97 f4 00 00 00    	mov    0xf4(%rdi),%edx
    3bb0:	74 2e                	je     3be0 <stm_allocate_rs_entries+0x40>
    3bb2:	01 d2                	add    %edx,%edx
    3bb4:	89 97 f4 00 00 00    	mov    %edx,0xf4(%rdi)
    3bba:	48 8b bf e8 00 00 00 	mov    0xe8(%rdi),%rdi
    3bc1:	48 89 d6             	mov    %rdx,%rsi
    3bc4:	48 c1 e6 04          	shl    $0x4,%rsi
    3bc8:	e8 b3 d7 ff ff       	callq  1380 <realloc@plt>
    3bcd:	48 85 c0             	test   %rax,%rax
    3bd0:	74 5e                	je     3c30 <stm_allocate_rs_entries+0x90>
    3bd2:	48 89 83 e8 00 00 00 	mov    %rax,0xe8(%rbx)
    3bd9:	48 83 c4 10          	add    $0x10,%rsp
    3bdd:	5b                   	pop    %rbx
    3bde:	c3                   	retq   
    3bdf:	90                   	nop
    3be0:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    3be5:	48 c1 e2 04          	shl    $0x4,%rdx
    3be9:	be 40 00 00 00       	mov    $0x40,%esi
    3bee:	e8 6d d8 ff ff       	callq  1460 <posix_memalign@plt>
    3bf3:	85 c0                	test   %eax,%eax
    3bf5:	75 11                	jne    3c08 <stm_allocate_rs_entries+0x68>
    3bf7:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3bfc:	48 85 c0             	test   %rax,%rax
    3bff:	75 d1                	jne    3bd2 <stm_allocate_rs_entries+0x32>
    3c01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3c08:	48 8b 0d d1 c4 20 00 	mov    0x20c4d1(%rip),%rcx        # 2100e0 <stderr@@GLIBC_2.2.5>
    3c0f:	48 8d 3d f2 98 00 00 	lea    0x98f2(%rip),%rdi        # d508 <__PRETTY_FUNCTION__.3065+0xf0>
    3c16:	ba 20 00 00 00       	mov    $0x20,%edx
    3c1b:	be 01 00 00 00       	mov    $0x1,%esi
    3c20:	e8 1b d8 ff ff       	callq  1440 <fwrite@plt>
    3c25:	bf 01 00 00 00       	mov    $0x1,%edi
    3c2a:	e8 01 d8 ff ff       	callq  1430 <exit@plt>
    3c2f:	90                   	nop
    3c30:	48 8d 3d 09 98 00 00 	lea    0x9809(%rip),%rdi        # d440 <__PRETTY_FUNCTION__.3065+0x28>
    3c37:	e8 b4 d7 ff ff       	callq  13f0 <perror@plt>
    3c3c:	bf 01 00 00 00       	mov    $0x1,%edi
    3c41:	e8 ea d7 ff ff       	callq  1430 <exit@plt>
    3c46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3c4d:	00 00 00 

0000000000003c50 <stm_allocate_ws_entries>:
    3c50:	53                   	push   %rbx
    3c51:	48 89 fb             	mov    %rdi,%rbx
    3c54:	48 83 ec 10          	sub    $0x10,%rsp
    3c58:	85 f6                	test   %esi,%esi
    3c5a:	8b 97 04 01 00 00    	mov    0x104(%rdi),%edx
    3c60:	74 2e                	je     3c90 <stm_allocate_ws_entries+0x40>
    3c62:	01 d2                	add    %edx,%edx
    3c64:	89 97 04 01 00 00    	mov    %edx,0x104(%rdi)
    3c6a:	48 8b bf f8 00 00 00 	mov    0xf8(%rdi),%rdi
    3c71:	48 89 d6             	mov    %rdx,%rsi
    3c74:	48 c1 e6 06          	shl    $0x6,%rsi
    3c78:	e8 03 d7 ff ff       	callq  1380 <realloc@plt>
    3c7d:	48 85 c0             	test   %rax,%rax
    3c80:	74 5e                	je     3ce0 <stm_allocate_ws_entries+0x90>
    3c82:	48 89 83 f8 00 00 00 	mov    %rax,0xf8(%rbx)
    3c89:	48 83 c4 10          	add    $0x10,%rsp
    3c8d:	5b                   	pop    %rbx
    3c8e:	c3                   	retq   
    3c8f:	90                   	nop
    3c90:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    3c95:	48 c1 e2 06          	shl    $0x6,%rdx
    3c99:	be 40 00 00 00       	mov    $0x40,%esi
    3c9e:	e8 bd d7 ff ff       	callq  1460 <posix_memalign@plt>
    3ca3:	85 c0                	test   %eax,%eax
    3ca5:	75 11                	jne    3cb8 <stm_allocate_ws_entries+0x68>
    3ca7:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3cac:	48 85 c0             	test   %rax,%rax
    3caf:	75 d1                	jne    3c82 <stm_allocate_ws_entries+0x32>
    3cb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3cb8:	48 8b 0d 21 c4 20 00 	mov    0x20c421(%rip),%rcx        # 2100e0 <stderr@@GLIBC_2.2.5>
    3cbf:	48 8d 3d 42 98 00 00 	lea    0x9842(%rip),%rdi        # d508 <__PRETTY_FUNCTION__.3065+0xf0>
    3cc6:	ba 20 00 00 00       	mov    $0x20,%edx
    3ccb:	be 01 00 00 00       	mov    $0x1,%esi
    3cd0:	e8 6b d7 ff ff       	callq  1440 <fwrite@plt>
    3cd5:	bf 01 00 00 00       	mov    $0x1,%edi
    3cda:	e8 51 d7 ff ff       	callq  1430 <exit@plt>
    3cdf:	90                   	nop
    3ce0:	48 8d 3d 59 97 00 00 	lea    0x9759(%rip),%rdi        # d440 <__PRETTY_FUNCTION__.3065+0x28>
    3ce7:	e8 04 d7 ff ff       	callq  13f0 <perror@plt>
    3cec:	bf 01 00 00 00       	mov    $0x1,%edi
    3cf1:	e8 3a d7 ff ff       	callq  1430 <exit@plt>
    3cf6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3cfd:	00 00 00 

0000000000003d00 <stm_quiesce_barrier.isra.0.constprop.1>:
    3d00:	53                   	push   %rbx
    3d01:	48 8d 3d 70 c9 a0 00 	lea    0xa0c970(%rip),%rdi        # a10678 <_tinystm+0x8004f8>
    3d08:	e8 83 d7 ff ff       	callq  1490 <pthread_mutex_lock@plt>
    3d0d:	48 8b 05 54 c9 a0 00 	mov    0xa0c954(%rip),%rax        # a10668 <_tinystm+0x8004e8>
    3d14:	48 83 e8 01          	sub    $0x1,%rax
    3d18:	48 89 05 49 c9 a0 00 	mov    %rax,0xa0c949(%rip)        # a10668 <_tinystm+0x8004e8>
    3d1f:	48 8b 05 3a c9 a0 00 	mov    0xa0c93a(%rip),%rax        # a10660 <_tinystm+0x8004e0>
    3d26:	48 85 c0             	test   %rax,%rax
    3d29:	75 0b                	jne    3d36 <stm_quiesce_barrier.isra.0.constprop.1+0x36>
    3d2b:	48 c7 05 2a c9 a0 00 	movq   $0x1,0xa0c92a(%rip)        # a10660 <_tinystm+0x8004e0>
    3d32:	01 00 00 00 
    3d36:	48 8d 1d 3b c9 a0 00 	lea    0xa0c93b(%rip),%rbx        # a10678 <_tinystm+0x8004f8>
    3d3d:	0f 1f 00             	nopl   (%rax)
    3d40:	48 8b 05 19 c9 a0 00 	mov    0xa0c919(%rip),%rax        # a10660 <_tinystm+0x8004e0>
    3d47:	48 85 c0             	test   %rax,%rax
    3d4a:	48 8b 05 17 c9 a0 00 	mov    0xa0c917(%rip),%rax        # a10668 <_tinystm+0x8004e8>
    3d51:	74 55                	je     3da8 <stm_quiesce_barrier.isra.0.constprop.1+0xa8>
    3d53:	48 85 c0             	test   %rax,%rax
    3d56:	75 38                	jne    3d90 <stm_quiesce_barrier.isra.0.constprop.1+0x90>
    3d58:	48 8d 3d 21 c4 20 00 	lea    0x20c421(%rip),%rdi        # 210180 <_tinystm>
    3d5f:	ba 00 00 80 00       	mov    $0x800000,%edx
    3d64:	31 f6                	xor    %esi,%esi
    3d66:	48 c7 05 8f c4 a0 00 	movq   $0x0,0xa0c48f(%rip)        # a10200 <_tinystm+0x800080>
    3d6d:	00 00 00 00 
    3d71:	e8 2a d5 ff ff       	callq  12a0 <memset@plt>
    3d76:	48 8d 3d 23 c9 a0 00 	lea    0xa0c923(%rip),%rdi        # a106a0 <_tinystm+0x800520>
    3d7d:	48 c7 05 d8 c8 a0 00 	movq   $0x0,0xa0c8d8(%rip)        # a10660 <_tinystm+0x8004e0>
    3d84:	00 00 00 00 
    3d88:	e8 73 d4 ff ff       	callq  1200 <pthread_cond_broadcast@plt>
    3d8d:	eb b1                	jmp    3d40 <stm_quiesce_barrier.isra.0.constprop.1+0x40>
    3d8f:	90                   	nop
    3d90:	48 8d 3d 09 c9 a0 00 	lea    0xa0c909(%rip),%rdi        # a106a0 <_tinystm+0x800520>
    3d97:	48 89 de             	mov    %rbx,%rsi
    3d9a:	e8 81 d4 ff ff       	callq  1220 <pthread_cond_wait@plt>
    3d9f:	eb 9f                	jmp    3d40 <stm_quiesce_barrier.isra.0.constprop.1+0x40>
    3da1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3da8:	5b                   	pop    %rbx
    3da9:	48 8d 3d c8 c8 a0 00 	lea    0xa0c8c8(%rip),%rdi        # a10678 <_tinystm+0x8004f8>
    3db0:	48 83 c0 01          	add    $0x1,%rax
    3db4:	48 89 05 ad c8 a0 00 	mov    %rax,0xa0c8ad(%rip)        # a10668 <_tinystm+0x8004e8>
    3dbb:	e9 a0 d5 ff ff       	jmpq   1360 <pthread_mutex_unlock@plt>

0000000000003dc0 <stm_init>:
    3dc0:	8b 05 8a c8 a0 00    	mov    0xa0c88a(%rip),%eax        # a10650 <_tinystm+0x8004d0>
    3dc6:	85 c0                	test   %eax,%eax
    3dc8:	74 06                	je     3dd0 <stm_init+0x10>
    3dca:	f3 c3                	repz retq 
    3dcc:	0f 1f 40 00          	nopl   0x0(%rax)
    3dd0:	48 8d 3d a9 c3 20 00 	lea    0x20c3a9(%rip),%rdi        # 210180 <_tinystm>
    3dd7:	48 83 ec 08          	sub    $0x8,%rsp
    3ddb:	31 f6                	xor    %esi,%esi
    3ddd:	ba 00 00 80 00       	mov    $0x800000,%edx
    3de2:	e8 b9 d4 ff ff       	callq  12a0 <memset@plt>
    3de7:	48 8d 3d 8a c8 a0 00 	lea    0xa0c88a(%rip),%rdi        # a10678 <_tinystm+0x8004f8>
    3dee:	31 f6                	xor    %esi,%esi
    3df0:	48 c7 05 05 c4 a0 00 	movq   $0x0,0xa0c405(%rip)        # a10200 <_tinystm+0x800080>
    3df7:	00 00 00 00 
    3dfb:	e8 80 d6 ff ff       	callq  1480 <pthread_mutex_init@plt>
    3e00:	85 c0                	test   %eax,%eax
    3e02:	75 5c                	jne    3e60 <stm_init+0xa0>
    3e04:	48 8d 3d 95 c8 a0 00 	lea    0xa0c895(%rip),%rdi        # a106a0 <_tinystm+0x800520>
    3e0b:	31 f6                	xor    %esi,%esi
    3e0d:	e8 2e d5 ff ff       	callq  1340 <pthread_cond_init@plt>
    3e12:	85 c0                	test   %eax,%eax
    3e14:	75 71                	jne    3e87 <stm_init+0xc7>
    3e16:	48 c7 05 3f c8 a0 00 	movq   $0x0,0xa0c83f(%rip)        # a10660 <_tinystm+0x8004e0>
    3e1d:	00 00 00 00 
    3e21:	48 c7 05 44 c8 a0 00 	movq   $0x0,0xa0c844(%rip)        # a10670 <_tinystm+0x8004f0>
    3e28:	00 00 00 00 
    3e2c:	48 c7 05 31 c8 a0 00 	movq   $0x0,0xa0c831(%rip)        # a10668 <_tinystm+0x8004e8>
    3e33:	00 00 00 00 
    3e37:	64 48 c7 04 25 f8 ff 	movq   $0x0,%fs:0xfffffffffffffff8
    3e3e:	ff ff 00 00 00 00 
    3e44:	64 48 c7 04 25 f0 ff 	movq   $0x0,%fs:0xfffffffffffffff0
    3e4b:	ff ff 00 00 00 00 
    3e51:	c7 05 f5 c7 a0 00 01 	movl   $0x1,0xa0c7f5(%rip)        # a10650 <_tinystm+0x8004d0>
    3e58:	00 00 00 
    3e5b:	48 83 c4 08          	add    $0x8,%rsp
    3e5f:	c3                   	retq   
    3e60:	48 8b 0d 79 c2 20 00 	mov    0x20c279(%rip),%rcx        # 2100e0 <stderr@@GLIBC_2.2.5>
    3e67:	48 8d 3d da 95 00 00 	lea    0x95da(%rip),%rdi        # d448 <__PRETTY_FUNCTION__.3065+0x30>
    3e6e:	ba 15 00 00 00       	mov    $0x15,%edx
    3e73:	be 01 00 00 00       	mov    $0x1,%esi
    3e78:	e8 c3 d5 ff ff       	callq  1440 <fwrite@plt>
    3e7d:	bf 01 00 00 00       	mov    $0x1,%edi
    3e82:	e8 a9 d5 ff ff       	callq  1430 <exit@plt>
    3e87:	48 8b 0d 52 c2 20 00 	mov    0x20c252(%rip),%rcx        # 2100e0 <stderr@@GLIBC_2.2.5>
    3e8e:	48 8d 3d 9b 96 00 00 	lea    0x969b(%rip),%rdi        # d530 <__PRETTY_FUNCTION__.3065+0x118>
    3e95:	ba 22 00 00 00       	mov    $0x22,%edx
    3e9a:	be 01 00 00 00       	mov    $0x1,%esi
    3e9f:	e8 9c d5 ff ff       	callq  1440 <fwrite@plt>
    3ea4:	bf 01 00 00 00       	mov    $0x1,%edi
    3ea9:	e8 82 d5 ff ff       	callq  1430 <exit@plt>
    3eae:	66 90                	xchg   %ax,%ax

0000000000003eb0 <stm_exit>:
    3eb0:	8b 05 9a c7 a0 00    	mov    0xa0c79a(%rip),%eax        # a10650 <_tinystm+0x8004d0>
    3eb6:	85 c0                	test   %eax,%eax
    3eb8:	75 06                	jne    3ec0 <stm_exit+0x10>
    3eba:	f3 c3                	repz retq 
    3ebc:	0f 1f 40 00          	nopl   0x0(%rax)
    3ec0:	48 8d 3d d9 c7 a0 00 	lea    0xa0c7d9(%rip),%rdi        # a106a0 <_tinystm+0x800520>
    3ec7:	48 83 ec 08          	sub    $0x8,%rsp
    3ecb:	64 48 c7 04 25 f8 ff 	movq   $0x0,%fs:0xfffffffffffffff8
    3ed2:	ff ff 00 00 00 00 
    3ed8:	64 48 c7 04 25 f0 ff 	movq   $0x0,%fs:0xfffffffffffffff0
    3edf:	ff ff 00 00 00 00 
    3ee5:	e8 d6 d4 ff ff       	callq  13c0 <pthread_cond_destroy@plt>
    3eea:	48 8d 3d 87 c7 a0 00 	lea    0xa0c787(%rip),%rdi        # a10678 <_tinystm+0x8004f8>
    3ef1:	e8 7a d3 ff ff       	callq  1270 <pthread_mutex_destroy@plt>
    3ef6:	c7 05 50 c7 a0 00 00 	movl   $0x0,0xa0c750(%rip)        # a10650 <_tinystm+0x8004d0>
    3efd:	00 00 00 
    3f00:	48 83 c4 08          	add    $0x8,%rsp
    3f04:	c3                   	retq   
    3f05:	90                   	nop
    3f06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3f0d:	00 00 00 

0000000000003f10 <stm_init_thread>:
    3f10:	41 54                	push   %r12
    3f12:	55                   	push   %rbp
    3f13:	53                   	push   %rbx
    3f14:	48 83 ec 10          	sub    $0x10,%rsp
    3f18:	64 48 8b 1c 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rbx
    3f1f:	ff ff 
    3f21:	48 85 db             	test   %rbx,%rbx
    3f24:	74 12                	je     3f38 <stm_init_thread+0x28>
    3f26:	48 83 c4 10          	add    $0x10,%rsp
    3f2a:	48 89 d8             	mov    %rbx,%rax
    3f2d:	5b                   	pop    %rbx
    3f2e:	5d                   	pop    %rbp
    3f2f:	41 5c                	pop    %r12
    3f31:	c3                   	retq   
    3f32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3f38:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    3f3d:	ba 58 01 00 00       	mov    $0x158,%edx
    3f42:	be 40 00 00 00       	mov    $0x40,%esi
    3f47:	e8 14 d5 ff ff       	callq  1460 <posix_memalign@plt>
    3f4c:	85 c0                	test   %eax,%eax
    3f4e:	74 30                	je     3f80 <stm_init_thread+0x70>
    3f50:	48 8b 0d 89 c1 20 00 	mov    0x20c189(%rip),%rcx        # 2100e0 <stderr@@GLIBC_2.2.5>
    3f57:	48 8d 3d aa 95 00 00 	lea    0x95aa(%rip),%rdi        # d508 <__PRETTY_FUNCTION__.3065+0xf0>
    3f5e:	ba 20 00 00 00       	mov    $0x20,%edx
    3f63:	be 01 00 00 00       	mov    $0x1,%esi
    3f68:	e8 d3 d4 ff ff       	callq  1440 <fwrite@plt>
    3f6d:	bf 01 00 00 00       	mov    $0x1,%edi
    3f72:	e8 b9 d4 ff ff       	callq  1430 <exit@plt>
    3f77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3f7e:	00 00 
    3f80:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    3f85:	48 85 db             	test   %rbx,%rbx
    3f88:	74 c6                	je     3f50 <stm_init_thread+0x40>
    3f8a:	48 bd 00 00 00 00 00 	movabs $0x100000000000,%rbp
    3f91:	10 00 00 
    3f94:	31 f6                	xor    %esi,%esi
    3f96:	48 89 df             	mov    %rbx,%rdi
    3f99:	c7 83 c8 00 00 00 00 	movl   $0x0,0xc8(%rbx)
    3fa0:	00 00 00 
    3fa3:	48 c7 83 d0 00 00 00 	movq   $0x0,0xd0(%rbx)
    3faa:	00 00 00 00 
    3fae:	48 89 ab f0 00 00 00 	mov    %rbp,0xf0(%rbx)
    3fb5:	e8 e6 fb ff ff       	callq  3ba0 <stm_allocate_rs_entries>
    3fba:	31 f6                	xor    %esi,%esi
    3fbc:	48 89 df             	mov    %rbx,%rdi
    3fbf:	48 89 ab 00 01 00 00 	mov    %rbp,0x100(%rbx)
    3fc6:	c7 83 08 01 00 00 00 	movl   $0x0,0x108(%rbx)
    3fcd:	00 00 00 
    3fd0:	e8 7b fc ff ff       	callq  3c50 <stm_allocate_ws_entries>
    3fd5:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
    3fd9:	80 a3 10 01 00 00 f0 	andb   $0xf0,0x110(%rbx)
    3fe0:	48 8d 3d 91 c6 a0 00 	lea    0xa0c691(%rip),%rdi        # a10678 <_tinystm+0x8004f8>
    3fe7:	c7 83 14 01 00 00 00 	movl   $0x0,0x114(%rbx)
    3fee:	00 00 00 
    3ff1:	48 c7 83 48 01 00 00 	movq   $0x0,0x148(%rbx)
    3ff8:	00 00 00 00 
    3ffc:	64 48 89 1c 25 f8 ff 	mov    %rbx,%fs:0xfffffffffffffff8
    4003:	ff ff 
    4005:	c5 f8 11 83 18 01 00 	vmovups %xmm0,0x118(%rbx)
    400c:	00 
    400d:	c5 f8 11 83 28 01 00 	vmovups %xmm0,0x128(%rbx)
    4014:	00 
    4015:	c5 f8 11 83 38 01 00 	vmovups %xmm0,0x138(%rbx)
    401c:	00 
    401d:	e8 6e d4 ff ff       	callq  1490 <pthread_mutex_lock@plt>
    4022:	48 8b 05 47 c6 a0 00 	mov    0xa0c647(%rip),%rax        # a10670 <_tinystm+0x8004f0>
    4029:	48 8d 3d 48 c6 a0 00 	lea    0xa0c648(%rip),%rdi        # a10678 <_tinystm+0x8004f8>
    4030:	48 89 1d 39 c6 a0 00 	mov    %rbx,0xa0c639(%rip)        # a10670 <_tinystm+0x8004f0>
    4037:	48 89 83 50 01 00 00 	mov    %rax,0x150(%rbx)
    403e:	48 8b 05 23 c6 a0 00 	mov    0xa0c623(%rip),%rax        # a10668 <_tinystm+0x8004e8>
    4045:	48 83 c0 01          	add    $0x1,%rax
    4049:	48 89 05 18 c6 a0 00 	mov    %rax,0xa0c618(%rip)        # a10668 <_tinystm+0x8004e8>
    4050:	e8 0b d3 ff ff       	callq  1360 <pthread_mutex_unlock@plt>
    4055:	8b 05 29 c3 a0 00    	mov    0xa0c329(%rip),%eax        # a10384 <_tinystm+0x800204>
    405b:	85 c0                	test   %eax,%eax
    405d:	0f 84 c3 fe ff ff    	je     3f26 <stm_init_thread+0x16>
    4063:	48 8d 2d 16 c1 20 00 	lea    0x20c116(%rip),%rbp        # 210180 <_tinystm>
    406a:	45 31 e4             	xor    %r12d,%r12d
    406d:	0f 1f 00             	nopl   (%rax)
    4070:	48 8b bd 10 02 80 00 	mov    0x800210(%rbp),%rdi
    4077:	41 83 c4 01          	add    $0x1,%r12d
    407b:	ff 95 08 02 80 00    	callq  *0x800208(%rbp)
    4081:	48 83 c5 10          	add    $0x10,%rbp
    4085:	44 3b 25 f8 c2 a0 00 	cmp    0xa0c2f8(%rip),%r12d        # a10384 <_tinystm+0x800204>
    408c:	72 e2                	jb     4070 <stm_init_thread+0x160>
    408e:	48 83 c4 10          	add    $0x10,%rsp
    4092:	48 89 d8             	mov    %rbx,%rax
    4095:	5b                   	pop    %rbx
    4096:	5d                   	pop    %rbp
    4097:	41 5c                	pop    %r12
    4099:	c3                   	retq   
    409a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000040a0 <stm_exit_thread>:
    40a0:	41 54                	push   %r12
    40a2:	55                   	push   %rbp
    40a3:	53                   	push   %rbx
    40a4:	64 4c 8b 24 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%r12
    40ab:	ff ff 
    40ad:	4d 85 e4             	test   %r12,%r12
    40b0:	0f 84 d1 00 00 00    	je     4187 <stm_exit_thread+0xe7>
    40b6:	8b 05 3c c3 a0 00    	mov    0xa0c33c(%rip),%eax        # a103f8 <_tinystm+0x800278>
    40bc:	85 c0                	test   %eax,%eax
    40be:	74 2c                	je     40ec <stm_exit_thread+0x4c>
    40c0:	48 8d 1d b9 c0 20 00 	lea    0x20c0b9(%rip),%rbx        # 210180 <_tinystm>
    40c7:	31 ed                	xor    %ebp,%ebp
    40c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    40d0:	48 8b bb 88 02 80 00 	mov    0x800288(%rbx),%rdi
    40d7:	83 c5 01             	add    $0x1,%ebp
    40da:	ff 93 80 02 80 00    	callq  *0x800280(%rbx)
    40e0:	48 83 c3 10          	add    $0x10,%rbx
    40e4:	3b 2d 0e c3 a0 00    	cmp    0xa0c30e(%rip),%ebp        # a103f8 <_tinystm+0x800278>
    40ea:	72 e4                	jb     40d0 <stm_exit_thread+0x30>
    40ec:	48 8d 3d 85 c5 a0 00 	lea    0xa0c585(%rip),%rdi        # a10678 <_tinystm+0x8004f8>
    40f3:	e8 98 d3 ff ff       	callq  1490 <pthread_mutex_lock@plt>
    40f8:	48 8b 15 71 c5 a0 00 	mov    0xa0c571(%rip),%rdx        # a10670 <_tinystm+0x8004f0>
    40ff:	4c 39 e2             	cmp    %r12,%rdx
    4102:	75 0f                	jne    4113 <stm_exit_thread+0x73>
    4104:	e9 97 00 00 00       	jmpq   41a0 <stm_exit_thread+0x100>
    4109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4110:	48 89 c2             	mov    %rax,%rdx
    4113:	48 8b 82 50 01 00 00 	mov    0x150(%rdx),%rax
    411a:	4c 39 e0             	cmp    %r12,%rax
    411d:	75 f1                	jne    4110 <stm_exit_thread+0x70>
    411f:	49 8b 84 24 50 01 00 	mov    0x150(%r12),%rax
    4126:	00 
    4127:	48 89 82 50 01 00 00 	mov    %rax,0x150(%rdx)
    412e:	48 8b 05 33 c5 a0 00 	mov    0xa0c533(%rip),%rax        # a10668 <_tinystm+0x8004e8>
    4135:	48 83 e8 01          	sub    $0x1,%rax
    4139:	48 89 05 28 c5 a0 00 	mov    %rax,0xa0c528(%rip)        # a10668 <_tinystm+0x8004e8>
    4140:	48 8b 05 19 c5 a0 00 	mov    0xa0c519(%rip),%rax        # a10660 <_tinystm+0x8004e0>
    4147:	48 85 c0             	test   %rax,%rax
    414a:	75 44                	jne    4190 <stm_exit_thread+0xf0>
    414c:	48 8d 3d 25 c5 a0 00 	lea    0xa0c525(%rip),%rdi        # a10678 <_tinystm+0x8004f8>
    4153:	e8 08 d2 ff ff       	callq  1360 <pthread_mutex_unlock@plt>
    4158:	49 8b bc 24 e8 00 00 	mov    0xe8(%r12),%rdi
    415f:	00 
    4160:	e8 4b d3 ff ff       	callq  14b0 <free@plt>
    4165:	49 8b bc 24 f8 00 00 	mov    0xf8(%r12),%rdi
    416c:	00 
    416d:	e8 3e d3 ff ff       	callq  14b0 <free@plt>
    4172:	4c 89 e7             	mov    %r12,%rdi
    4175:	e8 36 d3 ff ff       	callq  14b0 <free@plt>
    417a:	64 48 c7 04 25 f8 ff 	movq   $0x0,%fs:0xfffffffffffffff8
    4181:	ff ff 00 00 00 00 
    4187:	5b                   	pop    %rbx
    4188:	5d                   	pop    %rbp
    4189:	41 5c                	pop    %r12
    418b:	c3                   	retq   
    418c:	0f 1f 40 00          	nopl   0x0(%rax)
    4190:	48 8d 3d 09 c5 a0 00 	lea    0xa0c509(%rip),%rdi        # a106a0 <_tinystm+0x800520>
    4197:	e8 54 d1 ff ff       	callq  12f0 <pthread_cond_signal@plt>
    419c:	eb ae                	jmp    414c <stm_exit_thread+0xac>
    419e:	66 90                	xchg   %ax,%ax
    41a0:	49 8b 84 24 50 01 00 	mov    0x150(%r12),%rax
    41a7:	00 
    41a8:	48 89 05 c1 c4 a0 00 	mov    %rax,0xa0c4c1(%rip)        # a10670 <_tinystm+0x8004f0>
    41af:	e9 7a ff ff ff       	jmpq   412e <stm_exit_thread+0x8e>
    41b4:	66 90                	xchg   %ax,%ax
    41b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    41bd:	00 00 00 

00000000000041c0 <stm_exit_thread_tx>:
    41c0:	48 85 ff             	test   %rdi,%rdi
    41c3:	0f 84 f7 00 00 00    	je     42c0 <stm_exit_thread_tx+0x100>
    41c9:	8b 05 29 c2 a0 00    	mov    0xa0c229(%rip),%eax        # a103f8 <_tinystm+0x800278>
    41cf:	41 54                	push   %r12
    41d1:	49 89 fc             	mov    %rdi,%r12
    41d4:	55                   	push   %rbp
    41d5:	53                   	push   %rbx
    41d6:	85 c0                	test   %eax,%eax
    41d8:	74 2a                	je     4204 <stm_exit_thread_tx+0x44>
    41da:	48 8d 1d 9f bf 20 00 	lea    0x20bf9f(%rip),%rbx        # 210180 <_tinystm>
    41e1:	31 ed                	xor    %ebp,%ebp
    41e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    41e8:	48 8b bb 88 02 80 00 	mov    0x800288(%rbx),%rdi
    41ef:	83 c5 01             	add    $0x1,%ebp
    41f2:	ff 93 80 02 80 00    	callq  *0x800280(%rbx)
    41f8:	48 83 c3 10          	add    $0x10,%rbx
    41fc:	3b 2d f6 c1 a0 00    	cmp    0xa0c1f6(%rip),%ebp        # a103f8 <_tinystm+0x800278>
    4202:	72 e4                	jb     41e8 <stm_exit_thread_tx+0x28>
    4204:	48 8d 3d 6d c4 a0 00 	lea    0xa0c46d(%rip),%rdi        # a10678 <_tinystm+0x8004f8>
    420b:	e8 80 d2 ff ff       	callq  1490 <pthread_mutex_lock@plt>
    4210:	48 8b 15 59 c4 a0 00 	mov    0xa0c459(%rip),%rdx        # a10670 <_tinystm+0x8004f0>
    4217:	49 39 d4             	cmp    %rdx,%r12
    421a:	75 0f                	jne    422b <stm_exit_thread_tx+0x6b>
    421c:	e9 a7 00 00 00       	jmpq   42c8 <stm_exit_thread_tx+0x108>
    4221:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4228:	48 89 c2             	mov    %rax,%rdx
    422b:	48 8b 82 50 01 00 00 	mov    0x150(%rdx),%rax
    4232:	49 39 c4             	cmp    %rax,%r12
    4235:	75 f1                	jne    4228 <stm_exit_thread_tx+0x68>
    4237:	49 8b 84 24 50 01 00 	mov    0x150(%r12),%rax
    423e:	00 
    423f:	48 89 82 50 01 00 00 	mov    %rax,0x150(%rdx)
    4246:	48 8b 05 1b c4 a0 00 	mov    0xa0c41b(%rip),%rax        # a10668 <_tinystm+0x8004e8>
    424d:	48 83 e8 01          	sub    $0x1,%rax
    4251:	48 89 05 10 c4 a0 00 	mov    %rax,0xa0c410(%rip)        # a10668 <_tinystm+0x8004e8>
    4258:	48 8b 05 01 c4 a0 00 	mov    0xa0c401(%rip),%rax        # a10660 <_tinystm+0x8004e0>
    425f:	48 85 c0             	test   %rax,%rax
    4262:	75 44                	jne    42a8 <stm_exit_thread_tx+0xe8>
    4264:	48 8d 3d 0d c4 a0 00 	lea    0xa0c40d(%rip),%rdi        # a10678 <_tinystm+0x8004f8>
    426b:	e8 f0 d0 ff ff       	callq  1360 <pthread_mutex_unlock@plt>
    4270:	49 8b bc 24 e8 00 00 	mov    0xe8(%r12),%rdi
    4277:	00 
    4278:	e8 33 d2 ff ff       	callq  14b0 <free@plt>
    427d:	49 8b bc 24 f8 00 00 	mov    0xf8(%r12),%rdi
    4284:	00 
    4285:	e8 26 d2 ff ff       	callq  14b0 <free@plt>
    428a:	4c 89 e7             	mov    %r12,%rdi
    428d:	e8 1e d2 ff ff       	callq  14b0 <free@plt>
    4292:	64 48 c7 04 25 f8 ff 	movq   $0x0,%fs:0xfffffffffffffff8
    4299:	ff ff 00 00 00 00 
    429f:	5b                   	pop    %rbx
    42a0:	5d                   	pop    %rbp
    42a1:	41 5c                	pop    %r12
    42a3:	c3                   	retq   
    42a4:	0f 1f 40 00          	nopl   0x0(%rax)
    42a8:	48 8d 3d f1 c3 a0 00 	lea    0xa0c3f1(%rip),%rdi        # a106a0 <_tinystm+0x800520>
    42af:	e8 3c d0 ff ff       	callq  12f0 <pthread_cond_signal@plt>
    42b4:	eb ae                	jmp    4264 <stm_exit_thread_tx+0xa4>
    42b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    42bd:	00 00 00 
    42c0:	f3 c3                	repz retq 
    42c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    42c8:	49 8b 84 24 50 01 00 	mov    0x150(%r12),%rax
    42cf:	00 
    42d0:	48 89 05 99 c3 a0 00 	mov    %rax,0xa0c399(%rip)        # a10670 <_tinystm+0x8004f0>
    42d7:	e9 6a ff ff ff       	jmpq   4246 <stm_exit_thread_tx+0x86>
    42dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000042e0 <stm_active>:
    42e0:	64 48 8b 04 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rax
    42e7:	ff ff 
    42e9:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
    42f0:	83 e0 01             	and    $0x1,%eax
    42f3:	c3                   	retq   
    42f4:	66 90                	xchg   %ax,%ax
    42f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    42fd:	00 00 00 

0000000000004300 <stm_active_tx>:
    4300:	48 8b 87 d0 00 00 00 	mov    0xd0(%rdi),%rax
    4307:	83 e0 01             	and    $0x1,%eax
    430a:	c3                   	retq   
    430b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004310 <stm_aborted>:
    4310:	64 48 8b 04 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rax
    4317:	ff ff 
    4319:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
    4320:	48 83 f8 04          	cmp    $0x4,%rax
    4324:	0f 94 c0             	sete   %al
    4327:	0f b6 c0             	movzbl %al,%eax
    432a:	c3                   	retq   
    432b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004330 <stm_aborted_tx>:
    4330:	48 8b 87 d0 00 00 00 	mov    0xd0(%rdi),%rax
    4337:	48 83 f8 04          	cmp    $0x4,%rax
    433b:	0f 94 c0             	sete   %al
    433e:	0f b6 c0             	movzbl %al,%eax
    4341:	c3                   	retq   
    4342:	0f 1f 40 00          	nopl   0x0(%rax)
    4346:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    434d:	00 00 00 

0000000000004350 <stm_irrevocable>:
    4350:	64 48 8b 04 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rax
    4357:	ff ff 
    4359:	0f b6 80 10 01 00 00 	movzbl 0x110(%rax),%eax
    4360:	83 e0 07             	and    $0x7,%eax
    4363:	3c 03                	cmp    $0x3,%al
    4365:	0f 94 c0             	sete   %al
    4368:	0f b6 c0             	movzbl %al,%eax
    436b:	c3                   	retq   
    436c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004370 <stm_irrevocable_tx>:
    4370:	0f b6 87 10 01 00 00 	movzbl 0x110(%rdi),%eax
    4377:	83 e0 07             	and    $0x7,%eax
    437a:	3c 03                	cmp    $0x3,%al
    437c:	0f 94 c0             	sete   %al
    437f:	0f b6 c0             	movzbl %al,%eax
    4382:	c3                   	retq   
    4383:	0f 1f 00             	nopl   (%rax)
    4386:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    438d:	00 00 00 

0000000000004390 <stm_killed>:
    4390:	64 48 8b 04 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rax
    4397:	ff ff 
    4399:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
    43a0:	48 83 f8 07          	cmp    $0x7,%rax
    43a4:	0f 94 c0             	sete   %al
    43a7:	0f b6 c0             	movzbl %al,%eax
    43aa:	c3                   	retq   
    43ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000043b0 <stm_killed_tx>:
    43b0:	48 8b 87 d0 00 00 00 	mov    0xd0(%rdi),%rax
    43b7:	48 83 f8 07          	cmp    $0x7,%rax
    43bb:	0f 94 c0             	sete   %al
    43be:	0f b6 c0             	movzbl %al,%eax
    43c1:	c3                   	retq   
    43c2:	0f 1f 40 00          	nopl   0x0(%rax)
    43c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    43cd:	00 00 00 

00000000000043d0 <stm_get_env>:
    43d0:	64 48 8b 04 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rax
    43d7:	ff ff 
    43d9:	8b 90 14 01 00 00    	mov    0x114(%rax),%edx
    43df:	85 d2                	test   %edx,%edx
    43e1:	ba 00 00 00 00       	mov    $0x0,%edx
    43e6:	48 0f 45 c2          	cmovne %rdx,%rax
    43ea:	c3                   	retq   
    43eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000043f0 <stm_get_env_tx>:
    43f0:	8b 87 14 01 00 00    	mov    0x114(%rdi),%eax
    43f6:	85 c0                	test   %eax,%eax
    43f8:	b8 00 00 00 00       	mov    $0x0,%eax
    43fd:	48 0f 44 c7          	cmove  %rdi,%rax
    4401:	c3                   	retq   
    4402:	0f 1f 40 00          	nopl   0x0(%rax)
    4406:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    440d:	00 00 00 

0000000000004410 <stm_get_attributes>:
    4410:	64 48 8b 04 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rax
    4417:	ff ff 
    4419:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax
    441f:	c3                   	retq   

0000000000004420 <stm_get_attributes_tx>:
    4420:	8b 87 c8 00 00 00    	mov    0xc8(%rdi),%eax
    4426:	c3                   	retq   
    4427:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    442e:	00 00 

0000000000004430 <stm_get_stats>:
    4430:	49 89 f0             	mov    %rsi,%r8
    4433:	48 8d 35 24 90 00 00 	lea    0x9024(%rip),%rsi        # d45e <__PRETTY_FUNCTION__.3065+0x46>
    443a:	b9 0e 00 00 00       	mov    $0xe,%ecx
    443f:	48 89 fa             	mov    %rdi,%rdx
    4442:	64 4c 8b 0c 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%r9
    4449:	ff ff 
    444b:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    444d:	0f 97 c0             	seta   %al
    4450:	1c 00                	sbb    $0x0,%al
    4452:	84 c0                	test   %al,%al
    4454:	0f 84 96 00 00 00    	je     44f0 <stm_get_stats+0xc0>
    445a:	48 8d 35 0b 90 00 00 	lea    0x900b(%rip),%rsi        # d46c <__PRETTY_FUNCTION__.3065+0x54>
    4461:	b9 0f 00 00 00       	mov    $0xf,%ecx
    4466:	48 89 d7             	mov    %rdx,%rdi
    4469:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    446b:	0f 97 c0             	seta   %al
    446e:	1c 00                	sbb    $0x0,%al
    4470:	84 c0                	test   %al,%al
    4472:	74 6c                	je     44e0 <stm_get_stats+0xb0>
    4474:	48 8d 35 00 90 00 00 	lea    0x9000(%rip),%rsi        # d47b <__PRETTY_FUNCTION__.3065+0x63>
    447b:	b9 14 00 00 00       	mov    $0x14,%ecx
    4480:	48 89 d7             	mov    %rdx,%rdi
    4483:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    4485:	0f 97 c0             	seta   %al
    4488:	1c 00                	sbb    $0x0,%al
    448a:	84 c0                	test   %al,%al
    448c:	74 72                	je     4500 <stm_get_stats+0xd0>
    448e:	48 8d 35 fa 8f 00 00 	lea    0x8ffa(%rip),%rsi        # d48f <__PRETTY_FUNCTION__.3065+0x77>
    4495:	b9 15 00 00 00       	mov    $0x15,%ecx
    449a:	48 89 d7             	mov    %rdx,%rdi
    449d:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    449f:	0f 97 c0             	seta   %al
    44a2:	1c 00                	sbb    $0x0,%al
    44a4:	84 c0                	test   %al,%al
    44a6:	74 68                	je     4510 <stm_get_stats+0xe0>
    44a8:	48 8d 35 f5 8f 00 00 	lea    0x8ff5(%rip),%rsi        # d4a4 <__PRETTY_FUNCTION__.3065+0x8c>
    44af:	48 89 d7             	mov    %rdx,%rdi
    44b2:	b9 0a 00 00 00       	mov    $0xa,%ecx
    44b7:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    44b9:	0f 97 c2             	seta   %dl
    44bc:	80 da 00             	sbb    $0x0,%dl
    44bf:	31 c0                	xor    %eax,%eax
    44c1:	84 d2                	test   %dl,%dl
    44c3:	75 13                	jne    44d8 <stm_get_stats+0xa8>
    44c5:	41 0f b6 81 ca 00 00 	movzbl 0xca(%r9),%eax
    44cc:	00 
    44cd:	83 e0 01             	and    $0x1,%eax
    44d0:	41 89 00             	mov    %eax,(%r8)
    44d3:	b8 01 00 00 00       	mov    $0x1,%eax
    44d8:	f3 c3                	repz retq 
    44da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    44e0:	41 8b 81 04 01 00 00 	mov    0x104(%r9),%eax
    44e7:	41 89 00             	mov    %eax,(%r8)
    44ea:	b8 01 00 00 00       	mov    $0x1,%eax
    44ef:	c3                   	retq   
    44f0:	41 8b 81 f4 00 00 00 	mov    0xf4(%r9),%eax
    44f7:	41 89 00             	mov    %eax,(%r8)
    44fa:	b8 01 00 00 00       	mov    $0x1,%eax
    44ff:	c3                   	retq   
    4500:	41 8b 81 f0 00 00 00 	mov    0xf0(%r9),%eax
    4507:	41 89 00             	mov    %eax,(%r8)
    450a:	b8 01 00 00 00       	mov    $0x1,%eax
    450f:	c3                   	retq   
    4510:	41 8b 81 00 01 00 00 	mov    0x100(%r9),%eax
    4517:	41 89 00             	mov    %eax,(%r8)
    451a:	b8 01 00 00 00       	mov    $0x1,%eax
    451f:	c3                   	retq   

0000000000004520 <stm_get_stats_tx>:
    4520:	49 89 f0             	mov    %rsi,%r8
    4523:	48 8d 35 34 8f 00 00 	lea    0x8f34(%rip),%rsi        # d45e <__PRETTY_FUNCTION__.3065+0x46>
    452a:	49 89 f9             	mov    %rdi,%r9
    452d:	b9 0e 00 00 00       	mov    $0xe,%ecx
    4532:	4c 89 c7             	mov    %r8,%rdi
    4535:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    4537:	0f 97 c0             	seta   %al
    453a:	1c 00                	sbb    $0x0,%al
    453c:	84 c0                	test   %al,%al
    453e:	0f 84 9c 00 00 00    	je     45e0 <stm_get_stats_tx+0xc0>
    4544:	48 8d 35 21 8f 00 00 	lea    0x8f21(%rip),%rsi        # d46c <__PRETTY_FUNCTION__.3065+0x54>
    454b:	b9 0f 00 00 00       	mov    $0xf,%ecx
    4550:	4c 89 c7             	mov    %r8,%rdi
    4553:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    4555:	0f 97 c0             	seta   %al
    4558:	1c 00                	sbb    $0x0,%al
    455a:	84 c0                	test   %al,%al
    455c:	74 6a                	je     45c8 <stm_get_stats_tx+0xa8>
    455e:	48 8d 35 16 8f 00 00 	lea    0x8f16(%rip),%rsi        # d47b <__PRETTY_FUNCTION__.3065+0x63>
    4565:	b9 14 00 00 00       	mov    $0x14,%ecx
    456a:	4c 89 c7             	mov    %r8,%rdi
    456d:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    456f:	0f 97 c0             	seta   %al
    4572:	1c 00                	sbb    $0x0,%al
    4574:	84 c0                	test   %al,%al
    4576:	74 78                	je     45f0 <stm_get_stats_tx+0xd0>
    4578:	48 8d 35 10 8f 00 00 	lea    0x8f10(%rip),%rsi        # d48f <__PRETTY_FUNCTION__.3065+0x77>
    457f:	b9 15 00 00 00       	mov    $0x15,%ecx
    4584:	4c 89 c7             	mov    %r8,%rdi
    4587:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    4589:	0f 97 c0             	seta   %al
    458c:	1c 00                	sbb    $0x0,%al
    458e:	84 c0                	test   %al,%al
    4590:	74 6e                	je     4600 <stm_get_stats_tx+0xe0>
    4592:	48 8d 35 0b 8f 00 00 	lea    0x8f0b(%rip),%rsi        # d4a4 <__PRETTY_FUNCTION__.3065+0x8c>
    4599:	b9 0a 00 00 00       	mov    $0xa,%ecx
    459e:	4c 89 c7             	mov    %r8,%rdi
    45a1:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    45a3:	0f 97 c1             	seta   %cl
    45a6:	80 d9 00             	sbb    $0x0,%cl
    45a9:	31 c0                	xor    %eax,%eax
    45ab:	84 c9                	test   %cl,%cl
    45ad:	75 12                	jne    45c1 <stm_get_stats_tx+0xa1>
    45af:	41 0f b6 81 ca 00 00 	movzbl 0xca(%r9),%eax
    45b6:	00 
    45b7:	83 e0 01             	and    $0x1,%eax
    45ba:	89 02                	mov    %eax,(%rdx)
    45bc:	b8 01 00 00 00       	mov    $0x1,%eax
    45c1:	f3 c3                	repz retq 
    45c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    45c8:	41 8b 81 04 01 00 00 	mov    0x104(%r9),%eax
    45cf:	89 02                	mov    %eax,(%rdx)
    45d1:	b8 01 00 00 00       	mov    $0x1,%eax
    45d6:	c3                   	retq   
    45d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    45de:	00 00 
    45e0:	41 8b 81 f4 00 00 00 	mov    0xf4(%r9),%eax
    45e7:	89 02                	mov    %eax,(%rdx)
    45e9:	b8 01 00 00 00       	mov    $0x1,%eax
    45ee:	c3                   	retq   
    45ef:	90                   	nop
    45f0:	41 8b 81 f0 00 00 00 	mov    0xf0(%r9),%eax
    45f7:	89 02                	mov    %eax,(%rdx)
    45f9:	b8 01 00 00 00       	mov    $0x1,%eax
    45fe:	c3                   	retq   
    45ff:	90                   	nop
    4600:	41 8b 81 00 01 00 00 	mov    0x100(%r9),%eax
    4607:	89 02                	mov    %eax,(%rdx)
    4609:	b8 01 00 00 00       	mov    $0x1,%eax
    460e:	c3                   	retq   
    460f:	90                   	nop

0000000000004610 <stm_get_parameter>:
    4610:	49 89 f0             	mov    %rsi,%r8
    4613:	48 8d 35 94 8e 00 00 	lea    0x8e94(%rip),%rsi        # d4ae <__PRETTY_FUNCTION__.3065+0x96>
    461a:	b9 13 00 00 00       	mov    $0x13,%ecx
    461f:	48 89 fa             	mov    %rdi,%rdx
    4622:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    4624:	0f 97 c0             	seta   %al
    4627:	1c 00                	sbb    $0x0,%al
    4629:	84 c0                	test   %al,%al
    462b:	74 73                	je     46a0 <stm_get_parameter+0x90>
    462d:	48 8d 35 95 8e 00 00 	lea    0x8e95(%rip),%rsi        # d4c9 <__PRETTY_FUNCTION__.3065+0xb1>
    4634:	b9 07 00 00 00       	mov    $0x7,%ecx
    4639:	48 89 d7             	mov    %rdx,%rdi
    463c:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    463e:	0f 97 c0             	seta   %al
    4641:	1c 00                	sbb    $0x0,%al
    4643:	84 c0                	test   %al,%al
    4645:	74 49                	je     4690 <stm_get_parameter+0x80>
    4647:	48 8d 35 93 8e 00 00 	lea    0x8e93(%rip),%rsi        # d4e1 <__PRETTY_FUNCTION__.3065+0xc9>
    464e:	b9 14 00 00 00       	mov    $0x14,%ecx
    4653:	48 89 d7             	mov    %rdx,%rdi
    4656:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    4658:	0f 97 c0             	seta   %al
    465b:	1c 00                	sbb    $0x0,%al
    465d:	84 c0                	test   %al,%al
    465f:	74 4f                	je     46b0 <stm_get_parameter+0xa0>
    4661:	48 8d 35 8d 8e 00 00 	lea    0x8e8d(%rip),%rsi        # d4f5 <__PRETTY_FUNCTION__.3065+0xdd>
    4668:	48 89 d7             	mov    %rdx,%rdi
    466b:	b9 0e 00 00 00       	mov    $0xe,%ecx
    4670:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    4672:	0f 97 c2             	seta   %dl
    4675:	80 da 00             	sbb    $0x0,%dl
    4678:	31 c0                	xor    %eax,%eax
    467a:	84 d2                	test   %dl,%dl
    467c:	75 0f                	jne    468d <stm_get_parameter+0x7d>
    467e:	48 8d 05 d3 8e 00 00 	lea    0x8ed3(%rip),%rax        # d558 <__PRETTY_FUNCTION__.3065+0x140>
    4685:	49 89 00             	mov    %rax,(%r8)
    4688:	b8 01 00 00 00       	mov    $0x1,%eax
    468d:	f3 c3                	repz retq 
    468f:	90                   	nop
    4690:	48 8d 05 39 8e 00 00 	lea    0x8e39(%rip),%rax        # d4d0 <__PRETTY_FUNCTION__.3065+0xb8>
    4697:	49 89 00             	mov    %rax,(%r8)
    469a:	b8 01 00 00 00       	mov    $0x1,%eax
    469f:	c3                   	retq   
    46a0:	48 8d 05 1a 8e 00 00 	lea    0x8e1a(%rip),%rax        # d4c1 <__PRETTY_FUNCTION__.3065+0xa9>
    46a7:	49 89 00             	mov    %rax,(%r8)
    46aa:	b8 01 00 00 00       	mov    $0x1,%eax
    46af:	c3                   	retq   
    46b0:	41 c7 00 00 10 00 00 	movl   $0x1000,(%r8)
    46b7:	b8 01 00 00 00       	mov    $0x1,%eax
    46bc:	c3                   	retq   
    46bd:	0f 1f 00             	nopl   (%rax)

00000000000046c0 <stm_set_parameter>:
    46c0:	31 c0                	xor    %eax,%eax
    46c2:	c3                   	retq   
    46c3:	0f 1f 00             	nopl   (%rax)
    46c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    46cd:	00 00 00 

00000000000046d0 <stm_create_specific>:
    46d0:	8b 05 aa bc a0 00    	mov    0xa0bcaa(%rip),%eax        # a10380 <_tinystm+0x800200>
    46d6:	83 f8 06             	cmp    $0x6,%eax
    46d9:	77 0a                	ja     46e5 <stm_create_specific+0x15>
    46db:	8d 50 01             	lea    0x1(%rax),%edx
    46de:	89 15 9c bc a0 00    	mov    %edx,0xa0bc9c(%rip)        # a10380 <_tinystm+0x800200>
    46e4:	c3                   	retq   
    46e5:	48 83 ec 08          	sub    $0x8,%rsp
    46e9:	48 8b 0d f0 b9 20 00 	mov    0x20b9f0(%rip),%rcx        # 2100e0 <stderr@@GLIBC_2.2.5>
    46f0:	48 8d 3d 21 90 00 00 	lea    0x9021(%rip),%rdi        # d718 <__PRETTY_FUNCTION__.3065+0x300>
    46f7:	ba 30 00 00 00       	mov    $0x30,%edx
    46fc:	be 01 00 00 00       	mov    $0x1,%esi
    4701:	e8 3a cd ff ff       	callq  1440 <fwrite@plt>
    4706:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    470b:	48 83 c4 08          	add    $0x8,%rsp
    470f:	c3                   	retq   

0000000000004710 <stm_set_specific>:
    4710:	64 48 8b 04 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rax
    4717:	ff ff 
    4719:	48 63 ff             	movslq %edi,%rdi
    471c:	48 8d 84 f8 18 01 00 	lea    0x118(%rax,%rdi,8),%rax
    4723:	00 
    4724:	48 89 30             	mov    %rsi,(%rax)
    4727:	c3                   	retq   
    4728:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    472f:	00 

0000000000004730 <stm_set_specific_tx>:
    4730:	48 63 f6             	movslq %esi,%rsi
    4733:	48 8d 84 f7 18 01 00 	lea    0x118(%rdi,%rsi,8),%rax
    473a:	00 
    473b:	48 89 10             	mov    %rdx,(%rax)
    473e:	c3                   	retq   
    473f:	90                   	nop

0000000000004740 <stm_get_specific>:
    4740:	64 48 8b 04 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rax
    4747:	ff ff 
    4749:	48 63 ff             	movslq %edi,%rdi
    474c:	48 8d 84 f8 18 01 00 	lea    0x118(%rax,%rdi,8),%rax
    4753:	00 
    4754:	48 8b 00             	mov    (%rax),%rax
    4757:	c3                   	retq   
    4758:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    475f:	00 

0000000000004760 <stm_get_specific_tx>:
    4760:	48 63 f6             	movslq %esi,%rsi
    4763:	48 8d 84 f7 18 01 00 	lea    0x118(%rdi,%rsi,8),%rax
    476a:	00 
    476b:	48 8b 00             	mov    (%rax),%rax
    476e:	c3                   	retq   
    476f:	90                   	nop

0000000000004770 <stm_register>:
    4770:	48 83 ec 08          	sub    $0x8,%rsp
    4774:	48 85 ff             	test   %rdi,%rdi
    4777:	74 0d                	je     4786 <stm_register+0x16>
    4779:	83 3d 04 bc a0 00 06 	cmpl   $0x6,0xa0bc04(%rip)        # a10384 <_tinystm+0x800204>
    4780:	0f 87 ba 01 00 00    	ja     4940 <stm_register+0x1d0>
    4786:	48 85 f6             	test   %rsi,%rsi
    4789:	74 0d                	je     4798 <stm_register+0x28>
    478b:	83 3d 66 bc a0 00 06 	cmpl   $0x6,0xa0bc66(%rip)        # a103f8 <_tinystm+0x800278>
    4792:	0f 87 a8 01 00 00    	ja     4940 <stm_register+0x1d0>
    4798:	48 85 d2             	test   %rdx,%rdx
    479b:	74 0d                	je     47aa <stm_register+0x3a>
    479d:	83 3d cc bc a0 00 06 	cmpl   $0x6,0xa0bccc(%rip)        # a10470 <_tinystm+0x8002f0>
    47a4:	0f 87 96 01 00 00    	ja     4940 <stm_register+0x1d0>
    47aa:	48 85 c9             	test   %rcx,%rcx
    47ad:	74 0d                	je     47bc <stm_register+0x4c>
    47af:	83 3d 32 bd a0 00 06 	cmpl   $0x6,0xa0bd32(%rip)        # a104e8 <_tinystm+0x800368>
    47b6:	0f 87 84 01 00 00    	ja     4940 <stm_register+0x1d0>
    47bc:	4d 85 c0             	test   %r8,%r8
    47bf:	74 0d                	je     47ce <stm_register+0x5e>
    47c1:	83 3d 98 bd a0 00 06 	cmpl   $0x6,0xa0bd98(%rip)        # a10560 <_tinystm+0x8003e0>
    47c8:	0f 87 72 01 00 00    	ja     4940 <stm_register+0x1d0>
    47ce:	4d 85 c9             	test   %r9,%r9
    47d1:	74 0d                	je     47e0 <stm_register+0x70>
    47d3:	83 3d fe bd a0 00 06 	cmpl   $0x6,0xa0bdfe(%rip)        # a105d8 <_tinystm+0x800458>
    47da:	0f 87 60 01 00 00    	ja     4940 <stm_register+0x1d0>
    47e0:	48 85 ff             	test   %rdi,%rdi
    47e3:	74 35                	je     481a <stm_register+0xaa>
    47e5:	8b 05 99 bb a0 00    	mov    0xa0bb99(%rip),%eax        # a10384 <_tinystm+0x800204>
    47eb:	4c 8d 15 8e b9 20 00 	lea    0x20b98e(%rip),%r10        # 210180 <_tinystm>
    47f2:	49 89 c3             	mov    %rax,%r11
    47f5:	48 05 20 00 08 00    	add    $0x80020,%rax
    47fb:	48 c1 e0 04          	shl    $0x4,%rax
    47ff:	41 83 c3 01          	add    $0x1,%r11d
    4803:	4c 01 d0             	add    %r10,%rax
    4806:	44 89 1d 77 bb a0 00 	mov    %r11d,0xa0bb77(%rip)        # a10384 <_tinystm+0x800204>
    480d:	48 89 78 08          	mov    %rdi,0x8(%rax)
    4811:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    4816:	48 89 78 10          	mov    %rdi,0x10(%rax)
    481a:	48 85 f6             	test   %rsi,%rsi
    481d:	74 34                	je     4853 <stm_register+0xe3>
    481f:	8b 05 d3 bb a0 00    	mov    0xa0bbd3(%rip),%eax        # a103f8 <_tinystm+0x800278>
    4825:	48 8d 3d 54 b9 20 00 	lea    0x20b954(%rip),%rdi        # 210180 <_tinystm>
    482c:	49 89 c2             	mov    %rax,%r10
    482f:	48 05 28 00 08 00    	add    $0x80028,%rax
    4835:	48 c1 e0 04          	shl    $0x4,%rax
    4839:	41 83 c2 01          	add    $0x1,%r10d
    483d:	48 01 f8             	add    %rdi,%rax
    4840:	44 89 15 b1 bb a0 00 	mov    %r10d,0xa0bbb1(%rip)        # a103f8 <_tinystm+0x800278>
    4847:	48 89 30             	mov    %rsi,(%rax)
    484a:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    484f:	48 89 70 08          	mov    %rsi,0x8(%rax)
    4853:	48 85 d2             	test   %rdx,%rdx
    4856:	74 33                	je     488b <stm_register+0x11b>
    4858:	8b 05 12 bc a0 00    	mov    0xa0bc12(%rip),%eax        # a10470 <_tinystm+0x8002f0>
    485e:	48 8d 35 1b b9 20 00 	lea    0x20b91b(%rip),%rsi        # 210180 <_tinystm>
    4865:	48 89 c7             	mov    %rax,%rdi
    4868:	48 05 2c 00 08 00    	add    $0x8002c,%rax
    486e:	48 c1 e0 04          	shl    $0x4,%rax
    4872:	83 c7 01             	add    $0x1,%edi
    4875:	48 01 f0             	add    %rsi,%rax
    4878:	89 3d f2 bb a0 00    	mov    %edi,0xa0bbf2(%rip)        # a10470 <_tinystm+0x8002f0>
    487e:	48 89 50 38          	mov    %rdx,0x38(%rax)
    4882:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    4887:	48 89 50 40          	mov    %rdx,0x40(%rax)
    488b:	48 85 c9             	test   %rcx,%rcx
    488e:	74 33                	je     48c3 <stm_register+0x153>
    4890:	8b 05 52 bc a0 00    	mov    0xa0bc52(%rip),%eax        # a104e8 <_tinystm+0x800368>
    4896:	48 8d 15 e3 b8 20 00 	lea    0x20b8e3(%rip),%rdx        # 210180 <_tinystm>
    489d:	48 89 c6             	mov    %rax,%rsi
    48a0:	48 05 34 00 08 00    	add    $0x80034,%rax
    48a6:	48 c1 e0 04          	shl    $0x4,%rax
    48aa:	83 c6 01             	add    $0x1,%esi
    48ad:	48 01 d0             	add    %rdx,%rax
    48b0:	89 35 32 bc a0 00    	mov    %esi,0xa0bc32(%rip)        # a104e8 <_tinystm+0x800368>
    48b6:	48 89 48 30          	mov    %rcx,0x30(%rax)
    48ba:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    48bf:	48 89 48 38          	mov    %rcx,0x38(%rax)
    48c3:	4d 85 c0             	test   %r8,%r8
    48c6:	74 33                	je     48fb <stm_register+0x18b>
    48c8:	8b 05 92 bc a0 00    	mov    0xa0bc92(%rip),%eax        # a10560 <_tinystm+0x8003e0>
    48ce:	48 8d 15 ab b8 20 00 	lea    0x20b8ab(%rip),%rdx        # 210180 <_tinystm>
    48d5:	48 89 c1             	mov    %rax,%rcx
    48d8:	48 05 3c 00 08 00    	add    $0x8003c,%rax
    48de:	83 c1 01             	add    $0x1,%ecx
    48e1:	48 c1 e0 04          	shl    $0x4,%rax
    48e5:	89 0d 75 bc a0 00    	mov    %ecx,0xa0bc75(%rip)        # a10560 <_tinystm+0x8003e0>
    48eb:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    48f0:	48 01 d0             	add    %rdx,%rax
    48f3:	4c 89 40 28          	mov    %r8,0x28(%rax)
    48f7:	48 89 48 30          	mov    %rcx,0x30(%rax)
    48fb:	4d 85 c9             	test   %r9,%r9
    48fe:	b8 01 00 00 00       	mov    $0x1,%eax
    4903:	74 5a                	je     495f <stm_register+0x1ef>
    4905:	8b 15 cd bc a0 00    	mov    0xa0bccd(%rip),%edx        # a105d8 <_tinystm+0x800458>
    490b:	48 8d 0d 6e b8 20 00 	lea    0x20b86e(%rip),%rcx        # 210180 <_tinystm>
    4912:	48 89 d6             	mov    %rdx,%rsi
    4915:	48 81 c2 44 00 08 00 	add    $0x80044,%rdx
    491c:	48 c1 e2 04          	shl    $0x4,%rdx
    4920:	83 c6 01             	add    $0x1,%esi
    4923:	48 01 ca             	add    %rcx,%rdx
    4926:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    492b:	89 35 a7 bc a0 00    	mov    %esi,0xa0bca7(%rip)        # a105d8 <_tinystm+0x800458>
    4931:	4c 89 4a 20          	mov    %r9,0x20(%rdx)
    4935:	48 89 4a 28          	mov    %rcx,0x28(%rdx)
    4939:	eb 24                	jmp    495f <stm_register+0x1ef>
    493b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4940:	48 8b 0d 99 b7 20 00 	mov    0x20b799(%rip),%rcx        # 2100e0 <stderr@@GLIBC_2.2.5>
    4947:	48 8d 3d 02 8e 00 00 	lea    0x8e02(%rip),%rdi        # d750 <__PRETTY_FUNCTION__.3065+0x338>
    494e:	ba 29 00 00 00       	mov    $0x29,%edx
    4953:	be 01 00 00 00       	mov    $0x1,%esi
    4958:	e8 e3 ca ff ff       	callq  1440 <fwrite@plt>
    495d:	31 c0                	xor    %eax,%eax
    495f:	48 83 c4 08          	add    $0x8,%rsp
    4963:	c3                   	retq   
    4964:	66 90                	xchg   %ax,%ax
    4966:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    496d:	00 00 00 

0000000000004970 <stm_unit_load>:
    4970:	48 83 ec 08          	sub    $0x8,%rsp
    4974:	48 8b 0d 65 b7 20 00 	mov    0x20b765(%rip),%rcx        # 2100e0 <stderr@@GLIBC_2.2.5>
    497b:	48 8d 3d fe 8d 00 00 	lea    0x8dfe(%rip),%rdi        # d780 <__PRETTY_FUNCTION__.3065+0x368>
    4982:	ba 20 00 00 00       	mov    $0x20,%edx
    4987:	be 01 00 00 00       	mov    $0x1,%esi
    498c:	e8 af ca ff ff       	callq  1440 <fwrite@plt>
    4991:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    4996:	e8 95 ca ff ff       	callq  1430 <exit@plt>
    499b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000049a0 <stm_unit_store>:
    49a0:	48 83 ec 08          	sub    $0x8,%rsp
    49a4:	48 8b 0d 35 b7 20 00 	mov    0x20b735(%rip),%rcx        # 2100e0 <stderr@@GLIBC_2.2.5>
    49ab:	48 8d 3d ce 8d 00 00 	lea    0x8dce(%rip),%rdi        # d780 <__PRETTY_FUNCTION__.3065+0x368>
    49b2:	ba 20 00 00 00       	mov    $0x20,%edx
    49b7:	be 01 00 00 00       	mov    $0x1,%esi
    49bc:	e8 7f ca ff ff       	callq  1440 <fwrite@plt>
    49c1:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    49c6:	e8 65 ca ff ff       	callq  1430 <exit@plt>
    49cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000049d0 <stm_unit_store2>:
    49d0:	48 83 ec 08          	sub    $0x8,%rsp
    49d4:	48 8b 0d 05 b7 20 00 	mov    0x20b705(%rip),%rcx        # 2100e0 <stderr@@GLIBC_2.2.5>
    49db:	48 8d 3d 9e 8d 00 00 	lea    0x8d9e(%rip),%rdi        # d780 <__PRETTY_FUNCTION__.3065+0x368>
    49e2:	ba 20 00 00 00       	mov    $0x20,%edx
    49e7:	be 01 00 00 00       	mov    $0x1,%esi
    49ec:	e8 4f ca ff ff       	callq  1440 <fwrite@plt>
    49f1:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    49f6:	e8 35 ca ff ff       	callq  1430 <exit@plt>
    49fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004a00 <stm_set_extension>:
    4a00:	48 83 ec 08          	sub    $0x8,%rsp
    4a04:	48 8b 0d d5 b6 20 00 	mov    0x20b6d5(%rip),%rcx        # 2100e0 <stderr@@GLIBC_2.2.5>
    4a0b:	48 8d 3d 6e 8d 00 00 	lea    0x8d6e(%rip),%rdi        # d780 <__PRETTY_FUNCTION__.3065+0x368>
    4a12:	ba 20 00 00 00       	mov    $0x20,%edx
    4a17:	be 01 00 00 00       	mov    $0x1,%esi
    4a1c:	e8 1f ca ff ff       	callq  1440 <fwrite@plt>
    4a21:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    4a26:	e8 05 ca ff ff       	callq  1430 <exit@plt>
    4a2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004a30 <stm_set_extension_tx>:
    4a30:	48 83 ec 08          	sub    $0x8,%rsp
    4a34:	48 8b 0d a5 b6 20 00 	mov    0x20b6a5(%rip),%rcx        # 2100e0 <stderr@@GLIBC_2.2.5>
    4a3b:	48 8d 3d 3e 8d 00 00 	lea    0x8d3e(%rip),%rdi        # d780 <__PRETTY_FUNCTION__.3065+0x368>
    4a42:	ba 20 00 00 00       	mov    $0x20,%edx
    4a47:	be 01 00 00 00       	mov    $0x1,%esi
    4a4c:	e8 ef c9 ff ff       	callq  1440 <fwrite@plt>
    4a51:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    4a56:	e8 d5 c9 ff ff       	callq  1430 <exit@plt>
    4a5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004a60 <stm_get_clock>:
    4a60:	48 8b 05 99 b7 a0 00 	mov    0xa0b799(%rip),%rax        # a10200 <_tinystm+0x800080>
    4a67:	c3                   	retq   
    4a68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    4a6f:	00 

0000000000004a70 <stm_current_tx>:
    4a70:	64 48 8b 04 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rax
    4a77:	ff ff 
    4a79:	c3                   	retq   
    4a7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000004a80 <stm_set_irrevocable_tx>:
    4a80:	48 8b 87 d0 00 00 00 	mov    0xd0(%rdi),%rax
    4a87:	a8 01                	test   $0x1,%al
    4a89:	75 09                	jne    4a94 <stm_set_irrevocable_tx+0x14>
    4a8b:	83 fe ff             	cmp    $0xffffffff,%esi
    4a8e:	0f 85 04 01 00 00    	jne    4b98 <stm_set_irrevocable_tx+0x118>
    4a94:	0f b6 97 10 01 00 00 	movzbl 0x110(%rdi),%edx
    4a9b:	b8 01 00 00 00       	mov    $0x1,%eax
    4aa0:	41 89 d0             	mov    %edx,%r8d
    4aa3:	89 d1                	mov    %edx,%ecx
    4aa5:	41 83 e0 07          	and    $0x7,%r8d
    4aa9:	83 e1 0f             	and    $0xf,%ecx
    4aac:	41 80 f8 03          	cmp    $0x3,%r8b
    4ab0:	0f 84 0a 01 00 00    	je     4bc0 <stm_set_irrevocable_tx+0x140>
    4ab6:	84 c9                	test   %cl,%cl
    4ab8:	53                   	push   %rbx
    4ab9:	48 89 fb             	mov    %rdi,%rbx
    4abc:	0f 85 06 01 00 00    	jne    4bc8 <stm_set_irrevocable_tx+0x148>
    4ac2:	83 fe 01             	cmp    $0x1,%esi
    4ac5:	19 c0                	sbb    %eax,%eax
    4ac7:	83 e2 f0             	and    $0xfffffff0,%edx
    4aca:	83 e0 f8             	and    $0xfffffff8,%eax
    4acd:	83 c0 09             	add    $0x9,%eax
    4ad0:	83 e0 0f             	and    $0xf,%eax
    4ad3:	09 c2                	or     %eax,%edx
    4ad5:	88 97 10 01 00 00    	mov    %dl,0x110(%rdi)
    4adb:	48 8b 05 76 bb a0 00 	mov    0xa0bb76(%rip),%rax        # a10658 <_tinystm+0x8004d8>
    4ae2:	48 83 f8 01          	cmp    $0x1,%rax
    4ae6:	0f 84 da 01 00 00    	je     4cc6 <stm_set_irrevocable_tx+0x246>
    4aec:	31 c0                	xor    %eax,%eax
    4aee:	ba 01 00 00 00       	mov    $0x1,%edx
    4af3:	f0 48 0f b1 15 5c bb 	lock cmpxchg %rdx,0xa0bb5c(%rip)        # a10658 <_tinystm+0x8004d8>
    4afa:	a0 00 
    4afc:	0f 85 c4 01 00 00    	jne    4cc6 <stm_set_irrevocable_tx+0x246>
    4b02:	0f b6 87 10 01 00 00 	movzbl 0x110(%rdi),%eax
    4b09:	48 8b 97 e8 00 00 00 	mov    0xe8(%rdi),%rdx
    4b10:	8d 48 01             	lea    0x1(%rax),%ecx
    4b13:	83 e0 f0             	and    $0xfffffff0,%eax
    4b16:	83 e1 0f             	and    $0xf,%ecx
    4b19:	09 c8                	or     %ecx,%eax
    4b1b:	88 87 10 01 00 00    	mov    %al,0x110(%rdi)
    4b21:	8b 87 f0 00 00 00    	mov    0xf0(%rdi),%eax
    4b27:	85 c0                	test   %eax,%eax
    4b29:	0f 8e 81 01 00 00    	jle    4cb0 <stm_set_irrevocable_tx+0x230>
    4b2f:	44 8d 48 ff          	lea    -0x1(%rax),%r9d
    4b33:	49 83 c1 01          	add    $0x1,%r9
    4b37:	49 c1 e1 04          	shl    $0x4,%r9
    4b3b:	49 01 d1             	add    %rdx,%r9
    4b3e:	eb 30                	jmp    4b70 <stm_set_irrevocable_tx+0xf0>
    4b40:	48 8b bb f8 00 00 00 	mov    0xf8(%rbx),%rdi
    4b47:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    4b4b:	48 39 f8             	cmp    %rdi,%rax
    4b4e:	72 34                	jb     4b84 <stm_set_irrevocable_tx+0x104>
    4b50:	44 8b 83 00 01 00 00 	mov    0x100(%rbx),%r8d
    4b57:	49 c1 e0 06          	shl    $0x6,%r8
    4b5b:	4c 01 c7             	add    %r8,%rdi
    4b5e:	48 39 f8             	cmp    %rdi,%rax
    4b61:	73 21                	jae    4b84 <stm_set_irrevocable_tx+0x104>
    4b63:	48 83 c2 10          	add    $0x10,%rdx
    4b67:	4c 39 ca             	cmp    %r9,%rdx
    4b6a:	0f 84 40 01 00 00    	je     4cb0 <stm_set_irrevocable_tx+0x230>
    4b70:	48 8b 42 08          	mov    0x8(%rdx),%rax
    4b74:	48 8b 00             	mov    (%rax),%rax
    4b77:	a8 01                	test   $0x1,%al
    4b79:	75 c5                	jne    4b40 <stm_set_irrevocable_tx+0xc0>
    4b7b:	48 c1 e8 04          	shr    $0x4,%rax
    4b7f:	48 3b 02             	cmp    (%rdx),%rax
    4b82:	74 df                	je     4b63 <stm_set_irrevocable_tx+0xe3>
    4b84:	48 89 df             	mov    %rbx,%rdi
    4b87:	be 40 07 00 00       	mov    $0x740,%esi
    4b8c:	e8 5f 01 00 00       	callq  4cf0 <stm_rollback>
    4b91:	31 c0                	xor    %eax,%eax
    4b93:	5b                   	pop    %rbx
    4b94:	c3                   	retq   
    4b95:	0f 1f 00             	nopl   (%rax)
    4b98:	83 fe 01             	cmp    $0x1,%esi
    4b9b:	0f b6 97 10 01 00 00 	movzbl 0x110(%rdi),%edx
    4ba2:	19 c0                	sbb    %eax,%eax
    4ba4:	83 e0 f8             	and    $0xfffffff8,%eax
    4ba7:	83 c0 09             	add    $0x9,%eax
    4baa:	83 e0 0f             	and    $0xf,%eax
    4bad:	83 e2 f0             	and    $0xfffffff0,%edx
    4bb0:	09 d0                	or     %edx,%eax
    4bb2:	88 87 10 01 00 00    	mov    %al,0x110(%rdi)
    4bb8:	31 c0                	xor    %eax,%eax
    4bba:	c3                   	retq   
    4bbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4bc0:	f3 c3                	repz retq 
    4bc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4bc8:	41 80 f8 01          	cmp    $0x1,%r8b
    4bcc:	0f 84 96 00 00 00    	je     4c68 <stm_set_irrevocable_tx+0x1e8>
    4bd2:	f6 c1 08             	test   $0x8,%cl
    4bd5:	74 6a                	je     4c41 <stm_set_irrevocable_tx+0x1c1>
    4bd7:	48 8b 83 d0 00 00 00 	mov    0xd0(%rbx),%rax
    4bde:	48 8d 3d 93 ba a0 00 	lea    0xa0ba93(%rip),%rdi        # a10678 <_tinystm+0x8004f8>
    4be5:	a8 01                	test   $0x1,%al
    4be7:	0f 84 f3 00 00 00    	je     4ce0 <stm_set_irrevocable_tx+0x260>
    4bed:	e8 ae c8 ff ff       	callq  14a0 <pthread_mutex_trylock@plt>
    4bf2:	85 c0                	test   %eax,%eax
    4bf4:	0f 85 cc 00 00 00    	jne    4cc6 <stm_set_irrevocable_tx+0x246>
    4bfa:	48 c7 05 5b ba a0 00 	movq   $0x2,0xa0ba5b(%rip)        # a10660 <_tinystm+0x8004e0>
    4c01:	02 00 00 00 
    4c05:	0f ae f0             	mfence 
    4c08:	48 8b 15 61 ba a0 00 	mov    0xa0ba61(%rip),%rdx        # a10670 <_tinystm+0x8004f0>
    4c0f:	48 85 d2             	test   %rdx,%rdx
    4c12:	74 23                	je     4c37 <stm_set_irrevocable_tx+0x1b7>
    4c14:	0f 1f 40 00          	nopl   0x0(%rax)
    4c18:	48 39 d3             	cmp    %rdx,%rbx
    4c1b:	74 0e                	je     4c2b <stm_set_irrevocable_tx+0x1ab>
    4c1d:	0f 1f 00             	nopl   (%rax)
    4c20:	48 8b 82 d0 00 00 00 	mov    0xd0(%rdx),%rax
    4c27:	a8 01                	test   $0x1,%al
    4c29:	75 f5                	jne    4c20 <stm_set_irrevocable_tx+0x1a0>
    4c2b:	48 8b 92 50 01 00 00 	mov    0x150(%rdx),%rdx
    4c32:	48 85 d2             	test   %rdx,%rdx
    4c35:	75 e1                	jne    4c18 <stm_set_irrevocable_tx+0x198>
    4c37:	0f b6 8b 10 01 00 00 	movzbl 0x110(%rbx),%ecx
    4c3e:	83 e1 0f             	and    $0xf,%ecx
    4c41:	83 c1 01             	add    $0x1,%ecx
    4c44:	89 c8                	mov    %ecx,%eax
    4c46:	0f b6 8b 10 01 00 00 	movzbl 0x110(%rbx),%ecx
    4c4d:	83 e0 0f             	and    $0xf,%eax
    4c50:	83 e1 f0             	and    $0xfffffff0,%ecx
    4c53:	09 c1                	or     %eax,%ecx
    4c55:	b8 01 00 00 00       	mov    $0x1,%eax
    4c5a:	88 8b 10 01 00 00    	mov    %cl,0x110(%rbx)
    4c60:	5b                   	pop    %rbx
    4c61:	c3                   	retq   
    4c62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4c68:	31 c9                	xor    %ecx,%ecx
    4c6a:	ba 01 00 00 00       	mov    $0x1,%edx
    4c6f:	90                   	nop
    4c70:	48 8b 05 e1 b9 a0 00 	mov    0xa0b9e1(%rip),%rax        # a10658 <_tinystm+0x8004d8>
    4c77:	48 83 f8 01          	cmp    $0x1,%rax
    4c7b:	74 f3                	je     4c70 <stm_set_irrevocable_tx+0x1f0>
    4c7d:	48 89 c8             	mov    %rcx,%rax
    4c80:	f0 48 0f b1 15 cf b9 	lock cmpxchg %rdx,0xa0b9cf(%rip)        # a10658 <_tinystm+0x8004d8>
    4c87:	a0 00 
    4c89:	75 e5                	jne    4c70 <stm_set_irrevocable_tx+0x1f0>
    4c8b:	0f b6 83 10 01 00 00 	movzbl 0x110(%rbx),%eax
    4c92:	8d 48 01             	lea    0x1(%rax),%ecx
    4c95:	83 e0 f0             	and    $0xfffffff0,%eax
    4c98:	83 e1 0f             	and    $0xf,%ecx
    4c9b:	09 c8                	or     %ecx,%eax
    4c9d:	88 83 10 01 00 00    	mov    %al,0x110(%rbx)
    4ca3:	e9 2a ff ff ff       	jmpq   4bd2 <stm_set_irrevocable_tx+0x152>
    4ca8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    4caf:	00 
    4cb0:	85 f6                	test   %esi,%esi
    4cb2:	0f 84 1a ff ff ff    	je     4bd2 <stm_set_irrevocable_tx+0x152>
    4cb8:	8b 83 00 01 00 00    	mov    0x100(%rbx),%eax
    4cbe:	85 c0                	test   %eax,%eax
    4cc0:	0f 84 0c ff ff ff    	je     4bd2 <stm_set_irrevocable_tx+0x152>
    4cc6:	48 89 df             	mov    %rbx,%rdi
    4cc9:	be 40 09 00 00       	mov    $0x940,%esi
    4cce:	e8 1d 00 00 00       	callq  4cf0 <stm_rollback>
    4cd3:	31 c0                	xor    %eax,%eax
    4cd5:	5b                   	pop    %rbx
    4cd6:	c3                   	retq   
    4cd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4cde:	00 00 
    4ce0:	e8 ab c7 ff ff       	callq  1490 <pthread_mutex_lock@plt>
    4ce5:	e9 10 ff ff ff       	jmpq   4bfa <stm_set_irrevocable_tx+0x17a>
    4cea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000004cf0 <stm_rollback>:
    4cf0:	41 55                	push   %r13
    4cf2:	41 54                	push   %r12
    4cf4:	41 89 f5             	mov    %esi,%r13d
    4cf7:	55                   	push   %rbp
    4cf8:	53                   	push   %rbx
    4cf9:	49 89 fc             	mov    %rdi,%r12
    4cfc:	48 83 ec 08          	sub    $0x8,%rsp
    4d00:	8b 97 00 01 00 00    	mov    0x100(%rdi),%edx
    4d06:	85 d2                	test   %edx,%edx
    4d08:	7e 4b                	jle    4d55 <stm_rollback+0x65>
    4d0a:	48 8b 8f f8 00 00 00 	mov    0xf8(%rdi),%rcx
    4d11:	83 ea 01             	sub    $0x1,%edx
    4d14:	48 c1 e2 06          	shl    $0x6,%rdx
    4d18:	48 8d 41 18          	lea    0x18(%rcx),%rax
    4d1c:	48 8d 4c 11 58       	lea    0x58(%rcx,%rdx,1),%rcx
    4d21:	eb 0e                	jmp    4d31 <stm_rollback+0x41>
    4d23:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4d28:	48 83 c0 40          	add    $0x40,%rax
    4d2c:	48 39 c8             	cmp    %rcx,%rax
    4d2f:	74 21                	je     4d52 <stm_rollback+0x62>
    4d31:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    4d36:	75 f0                	jne    4d28 <stm_rollback+0x38>
    4d38:	ba 04 00 00 00       	mov    $0x4,%edx
    4d3d:	c4 e2 e9 f7 10       	shlx   %rdx,(%rax),%rdx
    4d42:	48 8b 70 08          	mov    0x8(%rax),%rsi
    4d46:	48 83 c0 40          	add    $0x40,%rax
    4d4a:	48 39 c8             	cmp    %rcx,%rax
    4d4d:	48 89 16             	mov    %rdx,(%rsi)
    4d50:	75 df                	jne    4d31 <stm_rollback+0x41>
    4d52:	0f ae f0             	mfence 
    4d55:	41 81 fd 40 0c 00 00 	cmp    $0xc40,%r13d
    4d5c:	49 c7 84 24 d0 00 00 	movq   $0x4,0xd0(%r12)
    4d63:	00 04 00 00 00 
    4d68:	74 76                	je     4de0 <stm_rollback+0xf0>
    4d6a:	41 c7 84 24 14 01 00 	movl   $0x1,0x114(%r12)
    4d71:	00 01 00 00 00 
    4d76:	8b 05 5c b8 a0 00    	mov    0xa0b85c(%rip),%eax        # a105d8 <_tinystm+0x800458>
    4d7c:	85 c0                	test   %eax,%eax
    4d7e:	74 2c                	je     4dac <stm_rollback+0xbc>
    4d80:	48 8d 1d f9 b3 20 00 	lea    0x20b3f9(%rip),%rbx        # 210180 <_tinystm>
    4d87:	31 ed                	xor    %ebp,%ebp
    4d89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4d90:	48 8b bb 68 04 80 00 	mov    0x800468(%rbx),%rdi
    4d97:	83 c5 01             	add    $0x1,%ebp
    4d9a:	ff 93 60 04 80 00    	callq  *0x800460(%rbx)
    4da0:	48 83 c3 10          	add    $0x10,%rbx
    4da4:	39 2d 2e b8 a0 00    	cmp    %ebp,0xa0b82e(%rip)        # a105d8 <_tinystm+0x800458>
    4daa:	77 e4                	ja     4d90 <stm_rollback+0xa0>
    4dac:	41 f6 84 24 ca 00 00 	testb  $0x4,0xca(%r12)
    4db3:	00 04 
    4db5:	75 0f                	jne    4dc6 <stm_rollback+0xd6>
    4db7:	44 89 e8             	mov    %r13d,%eax
    4dba:	25 20 01 00 00       	and    $0x120,%eax
    4dbf:	3d 20 01 00 00       	cmp    $0x120,%eax
    4dc4:	75 2c                	jne    4df2 <stm_rollback+0x102>
    4dc6:	41 c7 84 24 14 01 00 	movl   $0x0,0x114(%r12)
    4dcd:	00 00 00 00 00 
    4dd2:	48 83 c4 08          	add    $0x8,%rsp
    4dd6:	5b                   	pop    %rbx
    4dd7:	5d                   	pop    %rbp
    4dd8:	41 5c                	pop    %r12
    4dda:	41 5d                	pop    %r13
    4ddc:	c3                   	retq   
    4ddd:	0f 1f 00             	nopl   (%rax)
    4de0:	be 01 00 00 00       	mov    $0x1,%esi
    4de5:	4c 89 e7             	mov    %r12,%rdi
    4de8:	e8 63 ee ff ff       	callq  3c50 <stm_allocate_ws_entries>
    4ded:	e9 78 ff ff ff       	jmpq   4d6a <stm_rollback+0x7a>
    4df2:	41 c7 84 24 08 01 00 	movl   $0x0,0x108(%r12)
    4df9:	00 00 00 00 00 
    4dfe:	41 c7 84 24 00 01 00 	movl   $0x0,0x100(%r12)
    4e05:	00 00 00 00 00 
    4e0a:	48 bb fe df ff ff ff 	movabs $0xfffffffffffdffe,%rbx
    4e11:	ff ff 0f 
    4e14:	41 c7 84 24 f0 00 00 	movl   $0x0,0xf0(%r12)
    4e1b:	00 00 00 00 00 
    4e20:	48 8b 05 d9 b3 a0 00 	mov    0xa0b3d9(%rip),%rax        # a10200 <_tinystm+0x800080>
    4e27:	48 39 d8             	cmp    %rbx,%rax
    4e2a:	49 89 84 24 e0 00 00 	mov    %rax,0xe0(%r12)
    4e31:	00 
    4e32:	49 89 84 24 d8 00 00 	mov    %rax,0xd8(%r12)
    4e39:	00 
    4e3a:	77 48                	ja     4e84 <stm_rollback+0x194>
    4e3c:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
    4e43:	00 0f 
    4e45:	75 7c                	jne    4ec3 <stm_rollback+0x1d3>
    4e47:	49 c7 84 24 d0 00 00 	movq   $0x1,0xd0(%r12)
    4e4e:	00 01 00 00 00 
    4e53:	48 8b 05 06 b8 a0 00 	mov    0xa0b806(%rip),%rax        # a10660 <_tinystm+0x8004e0>
    4e5a:	48 83 f8 02          	cmp    $0x2,%rax
    4e5e:	41 0f b6 84 24 10 01 	movzbl 0x110(%r12),%eax
    4e65:	00 00 
    4e67:	74 22                	je     4e8b <stm_rollback+0x19b>
    4e69:	83 e0 0f             	and    $0xf,%eax
    4e6c:	4c 89 e7             	mov    %r12,%rdi
    4e6f:	3c 0b                	cmp    $0xb,%al
    4e71:	0f 94 c0             	sete   %al
    4e74:	0f b6 c0             	movzbl %al,%eax
    4e77:	83 c0 01             	add    $0x1,%eax
    4e7a:	44 09 e8             	or     %r13d,%eax
    4e7d:	89 c6                	mov    %eax,%esi
    4e7f:	e8 2c c5 ff ff       	callq  13b0 <__longjmp_chk@plt>
    4e84:	e8 77 ee ff ff       	callq  3d00 <stm_quiesce_barrier.isra.0.constprop.1>
    4e89:	eb 95                	jmp    4e20 <stm_rollback+0x130>
    4e8b:	a8 08                	test   $0x8,%al
    4e8d:	75 da                	jne    4e69 <stm_rollback+0x179>
    4e8f:	49 8b 84 24 d0 00 00 	mov    0xd0(%r12),%rax
    4e96:	00 
    4e97:	49 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%r12)
    4e9e:	00 00 00 00 00 
    4ea3:	48 8b 15 b6 b7 a0 00 	mov    0xa0b7b6(%rip),%rdx        # a10660 <_tinystm+0x8004e0>
    4eaa:	48 83 fa 02          	cmp    $0x2,%rdx
    4eae:	74 f3                	je     4ea3 <stm_rollback+0x1b3>
    4eb0:	49 89 84 24 d0 00 00 	mov    %rax,0xd0(%r12)
    4eb7:	00 
    4eb8:	41 0f b6 84 24 10 01 	movzbl 0x110(%r12),%eax
    4ebf:	00 00 
    4ec1:	eb a6                	jmp    4e69 <stm_rollback+0x179>
    4ec3:	83 ce ff             	or     $0xffffffff,%esi
    4ec6:	4c 89 e7             	mov    %r12,%rdi
    4ec9:	e8 b2 fb ff ff       	callq  4a80 <stm_set_irrevocable_tx>
    4ece:	49 c7 84 24 d0 00 00 	movq   $0x9,0xd0(%r12)
    4ed5:	00 09 00 00 00 
    4eda:	e9 74 ff ff ff       	jmpq   4e53 <stm_rollback+0x163>
    4edf:	90                   	nop

0000000000004ee0 <stm_commit>:
    4ee0:	41 55                	push   %r13
    4ee2:	41 54                	push   %r12
    4ee4:	55                   	push   %rbp
    4ee5:	53                   	push   %rbx
    4ee6:	48 83 ec 08          	sub    $0x8,%rsp
    4eea:	64 48 8b 1c 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rbx
    4ef1:	ff ff 
    4ef3:	8b 83 14 01 00 00    	mov    0x114(%rbx),%eax
    4ef9:	8d 68 ff             	lea    -0x1(%rax),%ebp
    4efc:	85 ed                	test   %ebp,%ebp
    4efe:	89 ab 14 01 00 00    	mov    %ebp,0x114(%rbx)
    4f04:	0f 85 f2 00 00 00    	jne    4ffc <stm_commit+0x11c>
    4f0a:	8b 0d d8 b5 a0 00    	mov    0xa0b5d8(%rip),%ecx        # a104e8 <_tinystm+0x800368>
    4f10:	85 c9                	test   %ecx,%ecx
    4f12:	0f 85 68 01 00 00    	jne    5080 <stm_commit+0x1a0>
    4f18:	0f b6 83 10 01 00 00 	movzbl 0x110(%rbx),%eax
    4f1f:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    4f25:	83 e0 0f             	and    $0xf,%eax
    4f28:	85 d2                	test   %edx,%edx
    4f2a:	0f 84 8b 00 00 00    	je     4fbb <stm_commit+0xdb>
    4f30:	84 c0                	test   %al,%al
    4f32:	0f 84 d8 00 00 00    	je     5010 <stm_commit+0x130>
    4f38:	b8 01 00 00 00       	mov    $0x1,%eax
    4f3d:	f0 48 0f c1 05 ba b2 	lock xadd %rax,0xa0b2ba(%rip)        # a10200 <_tinystm+0x800080>
    4f44:	a0 00 
    4f46:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    4f4d:	48 8d 78 01          	lea    0x1(%rax),%rdi
    4f51:	0f 85 e9 00 00 00    	jne    5040 <stm_commit+0x160>
    4f57:	48 39 83 d8 00 00 00 	cmp    %rax,0xd8(%rbx)
    4f5e:	0f 85 5c 01 00 00    	jne    50c0 <stm_commit+0x1e0>
    4f64:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    4f6a:	48 8b 83 f8 00 00 00 	mov    0xf8(%rbx),%rax
    4f71:	85 d2                	test   %edx,%edx
    4f73:	7e 4e                	jle    4fc3 <stm_commit+0xe3>
    4f75:	48 c1 e7 04          	shl    $0x4,%rdi
    4f79:	eb 0e                	jmp    4f89 <stm_commit+0xa9>
    4f7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4f80:	48 83 c0 40          	add    $0x40,%rax
    4f84:	83 ea 01             	sub    $0x1,%edx
    4f87:	74 28                	je     4fb1 <stm_commit+0xd1>
    4f89:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    4f8e:	74 0a                	je     4f9a <stm_commit+0xba>
    4f90:	48 8b 08             	mov    (%rax),%rcx
    4f93:	48 8b 70 08          	mov    0x8(%rax),%rsi
    4f97:	48 89 31             	mov    %rsi,(%rcx)
    4f9a:	48 83 78 28 00       	cmpq   $0x0,0x28(%rax)
    4f9f:	75 df                	jne    4f80 <stm_commit+0xa0>
    4fa1:	48 8b 48 20          	mov    0x20(%rax),%rcx
    4fa5:	48 83 c0 40          	add    $0x40,%rax
    4fa9:	83 ea 01             	sub    $0x1,%edx
    4fac:	48 89 39             	mov    %rdi,(%rcx)
    4faf:	75 d8                	jne    4f89 <stm_commit+0xa9>
    4fb1:	0f b6 83 10 01 00 00 	movzbl 0x110(%rbx),%eax
    4fb8:	83 e0 0f             	and    $0xf,%eax
    4fbb:	84 c0                	test   %al,%al
    4fbd:	0f 85 92 00 00 00    	jne    5055 <stm_commit+0x175>
    4fc3:	48 c7 83 d0 00 00 00 	movq   $0x2,0xd0(%rbx)
    4fca:	02 00 00 00 
    4fce:	8b 05 8c b5 a0 00    	mov    0xa0b58c(%rip),%eax        # a10560 <_tinystm+0x8003e0>
    4fd4:	85 c0                	test   %eax,%eax
    4fd6:	74 24                	je     4ffc <stm_commit+0x11c>
    4fd8:	48 8d 1d a1 b1 20 00 	lea    0x20b1a1(%rip),%rbx        # 210180 <_tinystm>
    4fdf:	90                   	nop
    4fe0:	48 8b bb f0 03 80 00 	mov    0x8003f0(%rbx),%rdi
    4fe7:	83 c5 01             	add    $0x1,%ebp
    4fea:	ff 93 e8 03 80 00    	callq  *0x8003e8(%rbx)
    4ff0:	48 83 c3 10          	add    $0x10,%rbx
    4ff4:	3b 2d 66 b5 a0 00    	cmp    0xa0b566(%rip),%ebp        # a10560 <_tinystm+0x8003e0>
    4ffa:	72 e4                	jb     4fe0 <stm_commit+0x100>
    4ffc:	48 83 c4 08          	add    $0x8,%rsp
    5000:	b8 01 00 00 00       	mov    $0x1,%eax
    5005:	5b                   	pop    %rbx
    5006:	5d                   	pop    %rbp
    5007:	41 5c                	pop    %r12
    5009:	41 5d                	pop    %r13
    500b:	c3                   	retq   
    500c:	0f 1f 40 00          	nopl   0x0(%rax)
    5010:	48 8b 05 41 b6 a0 00 	mov    0xa0b641(%rip),%rax        # a10658 <_tinystm+0x8004d8>
    5017:	48 85 c0             	test   %rax,%rax
    501a:	0f 84 18 ff ff ff    	je     4f38 <stm_commit+0x58>
    5020:	be 40 09 00 00       	mov    $0x940,%esi
    5025:	48 89 df             	mov    %rbx,%rdi
    5028:	e8 c3 fc ff ff       	callq  4cf0 <stm_rollback>
    502d:	0f b6 83 10 01 00 00 	movzbl 0x110(%rbx),%eax
    5034:	83 e0 0f             	and    $0xf,%eax
    5037:	84 c0                	test   %al,%al
    5039:	74 88                	je     4fc3 <stm_commit+0xe3>
    503b:	eb 18                	jmp    5055 <stm_commit+0x175>
    503d:	0f 1f 00             	nopl   (%rax)
    5040:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    5046:	48 8b 83 f8 00 00 00 	mov    0xf8(%rbx),%rax
    504d:	85 d2                	test   %edx,%edx
    504f:	0f 8f 20 ff ff ff    	jg     4f75 <stm_commit+0x95>
    5055:	48 c7 05 f8 b5 a0 00 	movq   $0x0,0xa0b5f8(%rip)        # a10658 <_tinystm+0x8004d8>
    505c:	00 00 00 00 
    5060:	f6 83 10 01 00 00 08 	testb  $0x8,0x110(%rbx)
    5067:	0f 85 e2 00 00 00    	jne    514f <stm_commit+0x26f>
    506d:	80 a3 10 01 00 00 f0 	andb   $0xf0,0x110(%rbx)
    5074:	e9 4a ff ff ff       	jmpq   4fc3 <stm_commit+0xe3>
    5079:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5080:	4c 8d 25 f9 b0 20 00 	lea    0x20b0f9(%rip),%r12        # 210180 <_tinystm>
    5087:	45 31 ed             	xor    %r13d,%r13d
    508a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5090:	49 8b bc 24 78 03 80 	mov    0x800378(%r12),%rdi
    5097:	00 
    5098:	41 83 c5 01          	add    $0x1,%r13d
    509c:	41 ff 94 24 70 03 80 	callq  *0x800370(%r12)
    50a3:	00 
    50a4:	49 83 c4 10          	add    $0x10,%r12
    50a8:	44 3b 2d 39 b4 a0 00 	cmp    0xa0b439(%rip),%r13d        # a104e8 <_tinystm+0x800368>
    50af:	72 df                	jb     5090 <stm_commit+0x1b0>
    50b1:	e9 62 fe ff ff       	jmpq   4f18 <stm_commit+0x38>
    50b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    50bd:	00 00 00 
    50c0:	8b 83 f0 00 00 00    	mov    0xf0(%rbx),%eax
    50c6:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    50cd:	85 c0                	test   %eax,%eax
    50cf:	0f 8e 8f fe ff ff    	jle    4f64 <stm_commit+0x84>
    50d5:	44 8d 40 ff          	lea    -0x1(%rax),%r8d
    50d9:	49 83 c0 01          	add    $0x1,%r8
    50dd:	49 c1 e0 04          	shl    $0x4,%r8
    50e1:	49 01 d0             	add    %rdx,%r8
    50e4:	eb 39                	jmp    511f <stm_commit+0x23f>
    50e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    50ed:	00 00 00 
    50f0:	48 8b 8b f8 00 00 00 	mov    0xf8(%rbx),%rcx
    50f7:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    50fb:	48 39 c8             	cmp    %rcx,%rax
    50fe:	72 33                	jb     5133 <stm_commit+0x253>
    5100:	8b b3 00 01 00 00    	mov    0x100(%rbx),%esi
    5106:	48 c1 e6 06          	shl    $0x6,%rsi
    510a:	48 01 f1             	add    %rsi,%rcx
    510d:	48 39 c8             	cmp    %rcx,%rax
    5110:	73 21                	jae    5133 <stm_commit+0x253>
    5112:	48 83 c2 10          	add    $0x10,%rdx
    5116:	49 39 d0             	cmp    %rdx,%r8
    5119:	0f 84 45 fe ff ff    	je     4f64 <stm_commit+0x84>
    511f:	48 8b 42 08          	mov    0x8(%rdx),%rax
    5123:	48 8b 00             	mov    (%rax),%rax
    5126:	a8 01                	test   $0x1,%al
    5128:	75 c6                	jne    50f0 <stm_commit+0x210>
    512a:	48 c1 e8 04          	shr    $0x4,%rax
    512e:	48 3b 02             	cmp    (%rdx),%rax
    5131:	74 df                	je     5112 <stm_commit+0x232>
    5133:	be 40 07 00 00       	mov    $0x740,%esi
    5138:	48 89 df             	mov    %rbx,%rdi
    513b:	e8 b0 fb ff ff       	callq  4cf0 <stm_rollback>
    5140:	0f b6 83 10 01 00 00 	movzbl 0x110(%rbx),%eax
    5147:	83 e0 0f             	and    $0xf,%eax
    514a:	e9 6c fe ff ff       	jmpq   4fbb <stm_commit+0xdb>
    514f:	48 8d 3d 22 b5 a0 00 	lea    0xa0b522(%rip),%rdi        # a10678 <_tinystm+0x8004f8>
    5156:	48 c7 05 ff b4 a0 00 	movq   $0x0,0xa0b4ff(%rip)        # a10660 <_tinystm+0x8004e0>
    515d:	00 00 00 00 
    5161:	e8 fa c1 ff ff       	callq  1360 <pthread_mutex_unlock@plt>
    5166:	e9 02 ff ff ff       	jmpq   506d <stm_commit+0x18d>
    516b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005170 <stm_commit_tx>:
    5170:	41 55                	push   %r13
    5172:	41 54                	push   %r12
    5174:	55                   	push   %rbp
    5175:	53                   	push   %rbx
    5176:	48 83 ec 08          	sub    $0x8,%rsp
    517a:	8b 87 14 01 00 00    	mov    0x114(%rdi),%eax
    5180:	8d 68 ff             	lea    -0x1(%rax),%ebp
    5183:	85 ed                	test   %ebp,%ebp
    5185:	89 af 14 01 00 00    	mov    %ebp,0x114(%rdi)
    518b:	0f 85 fb 00 00 00    	jne    528c <stm_commit_tx+0x11c>
    5191:	8b 0d 51 b3 a0 00    	mov    0xa0b351(%rip),%ecx        # a104e8 <_tinystm+0x800368>
    5197:	48 89 fb             	mov    %rdi,%rbx
    519a:	85 c9                	test   %ecx,%ecx
    519c:	0f 85 6e 01 00 00    	jne    5310 <stm_commit_tx+0x1a0>
    51a2:	0f b6 83 10 01 00 00 	movzbl 0x110(%rbx),%eax
    51a9:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    51af:	83 e0 0f             	and    $0xf,%eax
    51b2:	85 d2                	test   %edx,%edx
    51b4:	0f 84 89 00 00 00    	je     5243 <stm_commit_tx+0xd3>
    51ba:	84 c0                	test   %al,%al
    51bc:	0f 84 de 00 00 00    	je     52a0 <stm_commit_tx+0x130>
    51c2:	b8 01 00 00 00       	mov    $0x1,%eax
    51c7:	f0 48 0f c1 05 30 b0 	lock xadd %rax,0xa0b030(%rip)        # a10200 <_tinystm+0x800080>
    51ce:	a0 00 
    51d0:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    51d7:	48 8d 78 01          	lea    0x1(%rax),%rdi
    51db:	0f 85 ef 00 00 00    	jne    52d0 <stm_commit_tx+0x160>
    51e1:	48 39 83 d8 00 00 00 	cmp    %rax,0xd8(%rbx)
    51e8:	0f 85 62 01 00 00    	jne    5350 <stm_commit_tx+0x1e0>
    51ee:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    51f4:	48 8b 83 f8 00 00 00 	mov    0xf8(%rbx),%rax
    51fb:	85 d2                	test   %edx,%edx
    51fd:	7e 4c                	jle    524b <stm_commit_tx+0xdb>
    51ff:	48 c1 e7 04          	shl    $0x4,%rdi
    5203:	eb 0c                	jmp    5211 <stm_commit_tx+0xa1>
    5205:	0f 1f 00             	nopl   (%rax)
    5208:	48 83 c0 40          	add    $0x40,%rax
    520c:	83 ea 01             	sub    $0x1,%edx
    520f:	74 28                	je     5239 <stm_commit_tx+0xc9>
    5211:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    5216:	74 0a                	je     5222 <stm_commit_tx+0xb2>
    5218:	48 8b 08             	mov    (%rax),%rcx
    521b:	48 8b 70 08          	mov    0x8(%rax),%rsi
    521f:	48 89 31             	mov    %rsi,(%rcx)
    5222:	48 83 78 28 00       	cmpq   $0x0,0x28(%rax)
    5227:	75 df                	jne    5208 <stm_commit_tx+0x98>
    5229:	48 8b 48 20          	mov    0x20(%rax),%rcx
    522d:	48 83 c0 40          	add    $0x40,%rax
    5231:	83 ea 01             	sub    $0x1,%edx
    5234:	48 89 39             	mov    %rdi,(%rcx)
    5237:	75 d8                	jne    5211 <stm_commit_tx+0xa1>
    5239:	0f b6 83 10 01 00 00 	movzbl 0x110(%rbx),%eax
    5240:	83 e0 0f             	and    $0xf,%eax
    5243:	84 c0                	test   %al,%al
    5245:	0f 85 9a 00 00 00    	jne    52e5 <stm_commit_tx+0x175>
    524b:	48 c7 83 d0 00 00 00 	movq   $0x2,0xd0(%rbx)
    5252:	02 00 00 00 
    5256:	8b 05 04 b3 a0 00    	mov    0xa0b304(%rip),%eax        # a10560 <_tinystm+0x8003e0>
    525c:	85 c0                	test   %eax,%eax
    525e:	74 2c                	je     528c <stm_commit_tx+0x11c>
    5260:	48 8d 1d 19 af 20 00 	lea    0x20af19(%rip),%rbx        # 210180 <_tinystm>
    5267:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    526e:	00 00 
    5270:	48 8b bb f0 03 80 00 	mov    0x8003f0(%rbx),%rdi
    5277:	83 c5 01             	add    $0x1,%ebp
    527a:	ff 93 e8 03 80 00    	callq  *0x8003e8(%rbx)
    5280:	48 83 c3 10          	add    $0x10,%rbx
    5284:	3b 2d d6 b2 a0 00    	cmp    0xa0b2d6(%rip),%ebp        # a10560 <_tinystm+0x8003e0>
    528a:	72 e4                	jb     5270 <stm_commit_tx+0x100>
    528c:	48 83 c4 08          	add    $0x8,%rsp
    5290:	b8 01 00 00 00       	mov    $0x1,%eax
    5295:	5b                   	pop    %rbx
    5296:	5d                   	pop    %rbp
    5297:	41 5c                	pop    %r12
    5299:	41 5d                	pop    %r13
    529b:	c3                   	retq   
    529c:	0f 1f 40 00          	nopl   0x0(%rax)
    52a0:	48 8b 05 b1 b3 a0 00 	mov    0xa0b3b1(%rip),%rax        # a10658 <_tinystm+0x8004d8>
    52a7:	48 85 c0             	test   %rax,%rax
    52aa:	0f 84 12 ff ff ff    	je     51c2 <stm_commit_tx+0x52>
    52b0:	be 40 09 00 00       	mov    $0x940,%esi
    52b5:	48 89 df             	mov    %rbx,%rdi
    52b8:	e8 33 fa ff ff       	callq  4cf0 <stm_rollback>
    52bd:	0f b6 83 10 01 00 00 	movzbl 0x110(%rbx),%eax
    52c4:	83 e0 0f             	and    $0xf,%eax
    52c7:	84 c0                	test   %al,%al
    52c9:	74 80                	je     524b <stm_commit_tx+0xdb>
    52cb:	eb 18                	jmp    52e5 <stm_commit_tx+0x175>
    52cd:	0f 1f 00             	nopl   (%rax)
    52d0:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    52d6:	48 8b 83 f8 00 00 00 	mov    0xf8(%rbx),%rax
    52dd:	85 d2                	test   %edx,%edx
    52df:	0f 8f 1a ff ff ff    	jg     51ff <stm_commit_tx+0x8f>
    52e5:	48 c7 05 68 b3 a0 00 	movq   $0x0,0xa0b368(%rip)        # a10658 <_tinystm+0x8004d8>
    52ec:	00 00 00 00 
    52f0:	f6 83 10 01 00 00 08 	testb  $0x8,0x110(%rbx)
    52f7:	0f 85 e2 00 00 00    	jne    53df <stm_commit_tx+0x26f>
    52fd:	80 a3 10 01 00 00 f0 	andb   $0xf0,0x110(%rbx)
    5304:	e9 42 ff ff ff       	jmpq   524b <stm_commit_tx+0xdb>
    5309:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5310:	4c 8d 25 69 ae 20 00 	lea    0x20ae69(%rip),%r12        # 210180 <_tinystm>
    5317:	45 31 ed             	xor    %r13d,%r13d
    531a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5320:	49 8b bc 24 78 03 80 	mov    0x800378(%r12),%rdi
    5327:	00 
    5328:	41 83 c5 01          	add    $0x1,%r13d
    532c:	41 ff 94 24 70 03 80 	callq  *0x800370(%r12)
    5333:	00 
    5334:	49 83 c4 10          	add    $0x10,%r12
    5338:	44 3b 2d a9 b1 a0 00 	cmp    0xa0b1a9(%rip),%r13d        # a104e8 <_tinystm+0x800368>
    533f:	72 df                	jb     5320 <stm_commit_tx+0x1b0>
    5341:	e9 5c fe ff ff       	jmpq   51a2 <stm_commit_tx+0x32>
    5346:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    534d:	00 00 00 
    5350:	8b 83 f0 00 00 00    	mov    0xf0(%rbx),%eax
    5356:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    535d:	85 c0                	test   %eax,%eax
    535f:	0f 8e 89 fe ff ff    	jle    51ee <stm_commit_tx+0x7e>
    5365:	44 8d 40 ff          	lea    -0x1(%rax),%r8d
    5369:	49 83 c0 01          	add    $0x1,%r8
    536d:	49 c1 e0 04          	shl    $0x4,%r8
    5371:	49 01 d0             	add    %rdx,%r8
    5374:	eb 39                	jmp    53af <stm_commit_tx+0x23f>
    5376:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    537d:	00 00 00 
    5380:	48 8b 8b f8 00 00 00 	mov    0xf8(%rbx),%rcx
    5387:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    538b:	48 39 c8             	cmp    %rcx,%rax
    538e:	72 33                	jb     53c3 <stm_commit_tx+0x253>
    5390:	8b b3 00 01 00 00    	mov    0x100(%rbx),%esi
    5396:	48 c1 e6 06          	shl    $0x6,%rsi
    539a:	48 01 f1             	add    %rsi,%rcx
    539d:	48 39 c8             	cmp    %rcx,%rax
    53a0:	73 21                	jae    53c3 <stm_commit_tx+0x253>
    53a2:	48 83 c2 10          	add    $0x10,%rdx
    53a6:	49 39 d0             	cmp    %rdx,%r8
    53a9:	0f 84 3f fe ff ff    	je     51ee <stm_commit_tx+0x7e>
    53af:	48 8b 42 08          	mov    0x8(%rdx),%rax
    53b3:	48 8b 00             	mov    (%rax),%rax
    53b6:	a8 01                	test   $0x1,%al
    53b8:	75 c6                	jne    5380 <stm_commit_tx+0x210>
    53ba:	48 c1 e8 04          	shr    $0x4,%rax
    53be:	48 3b 02             	cmp    (%rdx),%rax
    53c1:	74 df                	je     53a2 <stm_commit_tx+0x232>
    53c3:	be 40 07 00 00       	mov    $0x740,%esi
    53c8:	48 89 df             	mov    %rbx,%rdi
    53cb:	e8 20 f9 ff ff       	callq  4cf0 <stm_rollback>
    53d0:	0f b6 83 10 01 00 00 	movzbl 0x110(%rbx),%eax
    53d7:	83 e0 0f             	and    $0xf,%eax
    53da:	e9 64 fe ff ff       	jmpq   5243 <stm_commit_tx+0xd3>
    53df:	48 8d 3d 92 b2 a0 00 	lea    0xa0b292(%rip),%rdi        # a10678 <_tinystm+0x8004f8>
    53e6:	48 c7 05 6f b2 a0 00 	movq   $0x0,0xa0b26f(%rip)        # a10660 <_tinystm+0x8004e0>
    53ed:	00 00 00 00 
    53f1:	e8 6a bf ff ff       	callq  1360 <pthread_mutex_unlock@plt>
    53f6:	e9 02 ff ff ff       	jmpq   52fd <stm_commit_tx+0x18d>
    53fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005400 <stm_abort>:
    5400:	89 fe                	mov    %edi,%esi
    5402:	64 48 8b 3c 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rdi
    5409:	ff ff 
    540b:	83 ce 20             	or     $0x20,%esi
    540e:	e9 dd f8 ff ff       	jmpq   4cf0 <stm_rollback>
    5413:	0f 1f 00             	nopl   (%rax)
    5416:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    541d:	00 00 00 

0000000000005420 <stm_abort_tx>:
    5420:	83 ce 20             	or     $0x20,%esi
    5423:	e9 c8 f8 ff ff       	jmpq   4cf0 <stm_rollback>
    5428:	0f 1f 40 00          	nopl   0x0(%rax)
    542c:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5433:	00 00 00 
    5436:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    543d:	00 00 00 

0000000000005440 <stm_load>:
    5440:	41 55                	push   %r13
    5442:	41 54                	push   %r12
    5444:	48 8d 05 35 ad 20 00 	lea    0x20ad35(%rip),%rax        # 210180 <_tinystm>
    544b:	55                   	push   %rbp
    544c:	53                   	push   %rbx
    544d:	48 89 fb             	mov    %rdi,%rbx
    5450:	48 c1 eb 02          	shr    $0x2,%rbx
    5454:	49 b9 fe df ff ff ff 	movabs $0xfffffffffffdffe,%r9
    545b:	ff ff 0f 
    545e:	48 83 ec 18          	sub    $0x18,%rsp
    5462:	64 48 8b 2c 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rbp
    5469:	ff ff 
    546b:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
    5471:	48 01 c3             	add    %rax,%rbx
    5474:	48 8b 13             	mov    (%rbx),%rdx
    5477:	f6 c2 01             	test   $0x1,%dl
    547a:	0f 85 a0 00 00 00    	jne    5520 <stm_load+0xe0>
    5480:	48 8b 07             	mov    (%rdi),%rax
    5483:	48 8b 0b             	mov    (%rbx),%rcx
    5486:	48 39 ca             	cmp    %rcx,%rdx
    5489:	0f 85 7c 00 00 00    	jne    550b <stm_load+0xcb>
    548f:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    5496:	75 52                	jne    54ea <stm_load+0xaa>
    5498:	0f b6 8d ca 00 00 00 	movzbl 0xca(%rbp),%ecx
    549f:	49 89 d4             	mov    %rdx,%r12
    54a2:	49 c1 ec 04          	shr    $0x4,%r12
    54a6:	83 e1 01             	and    $0x1,%ecx
    54a9:	4c 3b a5 e0 00 00 00 	cmp    0xe0(%rbp),%r12
    54b0:	0f 87 c2 00 00 00    	ja     5578 <stm_load+0x138>
    54b6:	84 c9                	test   %cl,%cl
    54b8:	75 30                	jne    54ea <stm_load+0xaa>
    54ba:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
    54c0:	3b 95 f4 00 00 00    	cmp    0xf4(%rbp),%edx
    54c6:	0f 84 44 01 00 00    	je     5610 <stm_load+0x1d0>
    54cc:	48 8b 8d e8 00 00 00 	mov    0xe8(%rbp),%rcx
    54d3:	8d 72 01             	lea    0x1(%rdx),%esi
    54d6:	48 c1 e2 04          	shl    $0x4,%rdx
    54da:	89 b5 f0 00 00 00    	mov    %esi,0xf0(%rbp)
    54e0:	48 01 ca             	add    %rcx,%rdx
    54e3:	4c 89 22             	mov    %r12,(%rdx)
    54e6:	48 89 5a 08          	mov    %rbx,0x8(%rdx)
    54ea:	48 83 c4 18          	add    $0x18,%rsp
    54ee:	5b                   	pop    %rbx
    54ef:	5d                   	pop    %rbp
    54f0:	41 5c                	pop    %r12
    54f2:	41 5d                	pop    %r13
    54f4:	c3                   	retq   
    54f5:	0f 1f 00             	nopl   (%rax)
    54f8:	4c 89 9d e0 00 00 00 	mov    %r11,0xe0(%rbp)
    54ff:	48 8b 0b             	mov    (%rbx),%rcx
    5502:	48 39 ca             	cmp    %rcx,%rdx
    5505:	0f 84 36 01 00 00    	je     5641 <stm_load+0x201>
    550b:	48 89 ca             	mov    %rcx,%rdx
    550e:	f6 c2 01             	test   $0x1,%dl
    5511:	0f 84 69 ff ff ff    	je     5480 <stm_load+0x40>
    5517:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    551e:	00 00 
    5520:	48 8b 85 f8 00 00 00 	mov    0xf8(%rbp),%rax
    5527:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
    552b:	48 39 c2             	cmp    %rax,%rdx
    552e:	0f 82 1c 01 00 00    	jb     5650 <stm_load+0x210>
    5534:	8b 8d 00 01 00 00    	mov    0x100(%rbp),%ecx
    553a:	48 c1 e1 06          	shl    $0x6,%rcx
    553e:	48 01 c8             	add    %rcx,%rax
    5541:	48 39 c2             	cmp    %rax,%rdx
    5544:	72 13                	jb     5559 <stm_load+0x119>
    5546:	e9 05 01 00 00       	jmpq   5650 <stm_load+0x210>
    554b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5550:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    5554:	48 85 d2             	test   %rdx,%rdx
    5557:	74 10                	je     5569 <stm_load+0x129>
    5559:	48 3b 3a             	cmp    (%rdx),%rdi
    555c:	75 f2                	jne    5550 <stm_load+0x110>
    555e:	48 83 7a 10 00       	cmpq   $0x0,0x10(%rdx)
    5563:	0f 85 cf 00 00 00    	jne    5638 <stm_load+0x1f8>
    5569:	48 8b 07             	mov    (%rdi),%rax
    556c:	e9 79 ff ff ff       	jmpq   54ea <stm_load+0xaa>
    5571:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5578:	84 c9                	test   %cl,%cl
    557a:	75 79                	jne    55f5 <stm_load+0x1b5>
    557c:	4c 8b 1d 7d ac a0 00 	mov    0xa0ac7d(%rip),%r11        # a10200 <_tinystm+0x800080>
    5583:	4d 39 cb             	cmp    %r9,%r11
    5586:	77 6d                	ja     55f5 <stm_load+0x1b5>
    5588:	8b 8d f0 00 00 00    	mov    0xf0(%rbp),%ecx
    558e:	48 8b b5 e8 00 00 00 	mov    0xe8(%rbp),%rsi
    5595:	85 c9                	test   %ecx,%ecx
    5597:	0f 8e 5b ff ff ff    	jle    54f8 <stm_load+0xb8>
    559d:	44 8d 51 ff          	lea    -0x1(%rcx),%r10d
    55a1:	49 83 c2 01          	add    $0x1,%r10
    55a5:	49 c1 e2 04          	shl    $0x4,%r10
    55a9:	49 01 f2             	add    %rsi,%r10
    55ac:	eb 32                	jmp    55e0 <stm_load+0x1a0>
    55ae:	66 90                	xchg   %ax,%ax
    55b0:	4c 8b 85 f8 00 00 00 	mov    0xf8(%rbp),%r8
    55b7:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    55bb:	4c 39 c1             	cmp    %r8,%rcx
    55be:	72 35                	jb     55f5 <stm_load+0x1b5>
    55c0:	44 8b ad 00 01 00 00 	mov    0x100(%rbp),%r13d
    55c7:	49 c1 e5 06          	shl    $0x6,%r13
    55cb:	4d 01 e8             	add    %r13,%r8
    55ce:	4c 39 c1             	cmp    %r8,%rcx
    55d1:	73 22                	jae    55f5 <stm_load+0x1b5>
    55d3:	48 83 c6 10          	add    $0x10,%rsi
    55d7:	49 39 f2             	cmp    %rsi,%r10
    55da:	0f 84 18 ff ff ff    	je     54f8 <stm_load+0xb8>
    55e0:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    55e4:	48 8b 09             	mov    (%rcx),%rcx
    55e7:	f6 c1 01             	test   $0x1,%cl
    55ea:	75 c4                	jne    55b0 <stm_load+0x170>
    55ec:	48 c1 e9 04          	shr    $0x4,%rcx
    55f0:	48 3b 0e             	cmp    (%rsi),%rcx
    55f3:	74 de                	je     55d3 <stm_load+0x193>
    55f5:	be 40 05 00 00       	mov    $0x540,%esi
    55fa:	48 89 ef             	mov    %rbp,%rdi
    55fd:	e8 ee f6 ff ff       	callq  4cf0 <stm_rollback>
    5602:	31 c0                	xor    %eax,%eax
    5604:	e9 e1 fe ff ff       	jmpq   54ea <stm_load+0xaa>
    5609:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5610:	be 01 00 00 00       	mov    $0x1,%esi
    5615:	48 89 ef             	mov    %rbp,%rdi
    5618:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    561d:	e8 7e e5 ff ff       	callq  3ba0 <stm_allocate_rs_entries>
    5622:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
    5628:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    562d:	e9 9a fe ff ff       	jmpq   54cc <stm_load+0x8c>
    5632:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5638:	48 8b 42 08          	mov    0x8(%rdx),%rax
    563c:	e9 a9 fe ff ff       	jmpq   54ea <stm_load+0xaa>
    5641:	0f b6 8d ca 00 00 00 	movzbl 0xca(%rbp),%ecx
    5648:	83 e1 01             	and    $0x1,%ecx
    564b:	e9 66 fe ff ff       	jmpq   54b6 <stm_load+0x76>
    5650:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    5657:	0f 85 17 fe ff ff    	jne    5474 <stm_load+0x34>
    565d:	be 40 02 00 00       	mov    $0x240,%esi
    5662:	48 89 ef             	mov    %rbp,%rdi
    5665:	e8 86 f6 ff ff       	callq  4cf0 <stm_rollback>
    566a:	31 c0                	xor    %eax,%eax
    566c:	e9 79 fe ff ff       	jmpq   54ea <stm_load+0xaa>
    5671:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5676:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    567d:	00 00 00 

0000000000005680 <stm_load_tx>:
    5680:	41 55                	push   %r13
    5682:	41 54                	push   %r12
    5684:	48 8d 05 f5 aa 20 00 	lea    0x20aaf5(%rip),%rax        # 210180 <_tinystm>
    568b:	55                   	push   %rbp
    568c:	53                   	push   %rbx
    568d:	48 89 f3             	mov    %rsi,%rbx
    5690:	48 c1 eb 02          	shr    $0x2,%rbx
    5694:	48 89 fd             	mov    %rdi,%rbp
    5697:	49 b9 fe df ff ff ff 	movabs $0xfffffffffffdffe,%r9
    569e:	ff ff 0f 
    56a1:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
    56a7:	48 83 ec 18          	sub    $0x18,%rsp
    56ab:	48 01 c3             	add    %rax,%rbx
    56ae:	48 8b 13             	mov    (%rbx),%rdx
    56b1:	f6 c2 01             	test   $0x1,%dl
    56b4:	0f 85 96 00 00 00    	jne    5750 <stm_load_tx+0xd0>
    56ba:	48 8b 06             	mov    (%rsi),%rax
    56bd:	48 8b 0b             	mov    (%rbx),%rcx
    56c0:	48 39 ca             	cmp    %rcx,%rdx
    56c3:	75 7e                	jne    5743 <stm_load_tx+0xc3>
    56c5:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    56cc:	75 52                	jne    5720 <stm_load_tx+0xa0>
    56ce:	0f b6 8d ca 00 00 00 	movzbl 0xca(%rbp),%ecx
    56d5:	49 89 d4             	mov    %rdx,%r12
    56d8:	49 c1 ec 04          	shr    $0x4,%r12
    56dc:	83 e1 01             	and    $0x1,%ecx
    56df:	4c 3b a5 e0 00 00 00 	cmp    0xe0(%rbp),%r12
    56e6:	0f 87 bc 00 00 00    	ja     57a8 <stm_load_tx+0x128>
    56ec:	84 c9                	test   %cl,%cl
    56ee:	75 30                	jne    5720 <stm_load_tx+0xa0>
    56f0:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
    56f6:	3b 95 f4 00 00 00    	cmp    0xf4(%rbp),%edx
    56fc:	0f 84 3e 01 00 00    	je     5840 <stm_load_tx+0x1c0>
    5702:	48 8b 8d e8 00 00 00 	mov    0xe8(%rbp),%rcx
    5709:	8d 72 01             	lea    0x1(%rdx),%esi
    570c:	48 c1 e2 04          	shl    $0x4,%rdx
    5710:	89 b5 f0 00 00 00    	mov    %esi,0xf0(%rbp)
    5716:	48 01 ca             	add    %rcx,%rdx
    5719:	4c 89 22             	mov    %r12,(%rdx)
    571c:	48 89 5a 08          	mov    %rbx,0x8(%rdx)
    5720:	48 83 c4 18          	add    $0x18,%rsp
    5724:	5b                   	pop    %rbx
    5725:	5d                   	pop    %rbp
    5726:	41 5c                	pop    %r12
    5728:	41 5d                	pop    %r13
    572a:	c3                   	retq   
    572b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5730:	4c 89 9d e0 00 00 00 	mov    %r11,0xe0(%rbp)
    5737:	48 8b 0b             	mov    (%rbx),%rcx
    573a:	48 39 ca             	cmp    %rcx,%rdx
    573d:	0f 84 2e 01 00 00    	je     5871 <stm_load_tx+0x1f1>
    5743:	48 89 ca             	mov    %rcx,%rdx
    5746:	f6 c2 01             	test   $0x1,%dl
    5749:	0f 84 6b ff ff ff    	je     56ba <stm_load_tx+0x3a>
    574f:	90                   	nop
    5750:	48 8b 85 f8 00 00 00 	mov    0xf8(%rbp),%rax
    5757:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
    575b:	48 39 c2             	cmp    %rax,%rdx
    575e:	0f 82 1c 01 00 00    	jb     5880 <stm_load_tx+0x200>
    5764:	8b 8d 00 01 00 00    	mov    0x100(%rbp),%ecx
    576a:	48 c1 e1 06          	shl    $0x6,%rcx
    576e:	48 01 c8             	add    %rcx,%rax
    5771:	48 39 c2             	cmp    %rax,%rdx
    5774:	72 13                	jb     5789 <stm_load_tx+0x109>
    5776:	e9 05 01 00 00       	jmpq   5880 <stm_load_tx+0x200>
    577b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5780:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    5784:	48 85 d2             	test   %rdx,%rdx
    5787:	74 10                	je     5799 <stm_load_tx+0x119>
    5789:	48 3b 32             	cmp    (%rdx),%rsi
    578c:	75 f2                	jne    5780 <stm_load_tx+0x100>
    578e:	48 83 7a 10 00       	cmpq   $0x0,0x10(%rdx)
    5793:	0f 85 cf 00 00 00    	jne    5868 <stm_load_tx+0x1e8>
    5799:	48 8b 06             	mov    (%rsi),%rax
    579c:	e9 7f ff ff ff       	jmpq   5720 <stm_load_tx+0xa0>
    57a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    57a8:	84 c9                	test   %cl,%cl
    57aa:	75 79                	jne    5825 <stm_load_tx+0x1a5>
    57ac:	4c 8b 1d 4d aa a0 00 	mov    0xa0aa4d(%rip),%r11        # a10200 <_tinystm+0x800080>
    57b3:	4d 39 cb             	cmp    %r9,%r11
    57b6:	77 6d                	ja     5825 <stm_load_tx+0x1a5>
    57b8:	8b 8d f0 00 00 00    	mov    0xf0(%rbp),%ecx
    57be:	48 8b bd e8 00 00 00 	mov    0xe8(%rbp),%rdi
    57c5:	85 c9                	test   %ecx,%ecx
    57c7:	0f 8e 63 ff ff ff    	jle    5730 <stm_load_tx+0xb0>
    57cd:	44 8d 51 ff          	lea    -0x1(%rcx),%r10d
    57d1:	49 83 c2 01          	add    $0x1,%r10
    57d5:	49 c1 e2 04          	shl    $0x4,%r10
    57d9:	49 01 fa             	add    %rdi,%r10
    57dc:	eb 32                	jmp    5810 <stm_load_tx+0x190>
    57de:	66 90                	xchg   %ax,%ax
    57e0:	4c 8b 85 f8 00 00 00 	mov    0xf8(%rbp),%r8
    57e7:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    57eb:	4c 39 c1             	cmp    %r8,%rcx
    57ee:	72 35                	jb     5825 <stm_load_tx+0x1a5>
    57f0:	44 8b ad 00 01 00 00 	mov    0x100(%rbp),%r13d
    57f7:	49 c1 e5 06          	shl    $0x6,%r13
    57fb:	4d 01 e8             	add    %r13,%r8
    57fe:	4c 39 c1             	cmp    %r8,%rcx
    5801:	73 22                	jae    5825 <stm_load_tx+0x1a5>
    5803:	48 83 c7 10          	add    $0x10,%rdi
    5807:	49 39 fa             	cmp    %rdi,%r10
    580a:	0f 84 20 ff ff ff    	je     5730 <stm_load_tx+0xb0>
    5810:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
    5814:	48 8b 09             	mov    (%rcx),%rcx
    5817:	f6 c1 01             	test   $0x1,%cl
    581a:	75 c4                	jne    57e0 <stm_load_tx+0x160>
    581c:	48 c1 e9 04          	shr    $0x4,%rcx
    5820:	48 3b 0f             	cmp    (%rdi),%rcx
    5823:	74 de                	je     5803 <stm_load_tx+0x183>
    5825:	be 40 05 00 00       	mov    $0x540,%esi
    582a:	48 89 ef             	mov    %rbp,%rdi
    582d:	e8 be f4 ff ff       	callq  4cf0 <stm_rollback>
    5832:	31 c0                	xor    %eax,%eax
    5834:	e9 e7 fe ff ff       	jmpq   5720 <stm_load_tx+0xa0>
    5839:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5840:	be 01 00 00 00       	mov    $0x1,%esi
    5845:	48 89 ef             	mov    %rbp,%rdi
    5848:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    584d:	e8 4e e3 ff ff       	callq  3ba0 <stm_allocate_rs_entries>
    5852:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
    5858:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    585d:	e9 a0 fe ff ff       	jmpq   5702 <stm_load_tx+0x82>
    5862:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5868:	48 8b 42 08          	mov    0x8(%rdx),%rax
    586c:	e9 af fe ff ff       	jmpq   5720 <stm_load_tx+0xa0>
    5871:	0f b6 8d ca 00 00 00 	movzbl 0xca(%rbp),%ecx
    5878:	83 e1 01             	and    $0x1,%ecx
    587b:	e9 6c fe ff ff       	jmpq   56ec <stm_load_tx+0x6c>
    5880:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    5887:	0f 85 21 fe ff ff    	jne    56ae <stm_load_tx+0x2e>
    588d:	be 40 02 00 00       	mov    $0x240,%esi
    5892:	48 89 ef             	mov    %rbp,%rdi
    5895:	e8 56 f4 ff ff       	callq  4cf0 <stm_rollback>
    589a:	31 c0                	xor    %eax,%eax
    589c:	e9 7f fe ff ff       	jmpq   5720 <stm_load_tx+0xa0>
    58a1:	90                   	nop
    58a2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    58a9:	00 00 00 
    58ac:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    58b3:	00 00 00 
    58b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    58bd:	00 00 00 

00000000000058c0 <stm_store>:
    58c0:	41 56                	push   %r14
    58c2:	41 55                	push   %r13
    58c4:	48 8d 05 b5 a8 20 00 	lea    0x20a8b5(%rip),%rax        # 210180 <_tinystm>
    58cb:	41 54                	push   %r12
    58cd:	55                   	push   %rbp
    58ce:	48 89 fd             	mov    %rdi,%rbp
    58d1:	53                   	push   %rbx
    58d2:	48 c1 ed 02          	shr    $0x2,%rbp
    58d6:	49 89 fc             	mov    %rdi,%r12
    58d9:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    58df:	49 89 f5             	mov    %rsi,%r13
    58e2:	48 83 ec 10          	sub    $0x10,%rsp
    58e6:	64 48 8b 1c 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rbx
    58ed:	ff ff 
    58ef:	48 01 c5             	add    %rax,%rbp
    58f2:	48 8b 45 00          	mov    0x0(%rbp),%rax
    58f6:	a8 01                	test   $0x1,%al
    58f8:	0f 85 8a 00 00 00    	jne    5988 <stm_store+0xc8>
    58fe:	49 89 c6             	mov    %rax,%r14
    5901:	49 c1 ee 04          	shr    $0x4,%r14
    5905:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    590c:	75 0d                	jne    591b <stm_store+0x5b>
    590e:	4c 3b b3 e0 00 00 00 	cmp    0xe0(%rbx),%r14
    5915:	0f 87 f5 00 00 00    	ja     5a10 <stm_store+0x150>
    591b:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    5921:	3b 93 04 01 00 00    	cmp    0x104(%rbx),%edx
    5927:	0f 84 bb 00 00 00    	je     59e8 <stm_store+0x128>
    592d:	48 c1 e2 06          	shl    $0x6,%rdx
    5931:	48 03 93 f8 00 00 00 	add    0xf8(%rbx),%rdx
    5938:	48 89 d1             	mov    %rdx,%rcx
    593b:	48 83 c9 01          	or     $0x1,%rcx
    593f:	f0 48 0f b1 4d 00    	lock cmpxchg %rcx,0x0(%rbp)
    5945:	75 ab                	jne    58f2 <stm_store+0x32>
    5947:	4c 89 22             	mov    %r12,(%rdx)
    594a:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
    5951:	ff 
    5952:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    5956:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    595a:	4c 89 72 18          	mov    %r14,0x18(%rdx)
    595e:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    5965:	00 
    5966:	83 83 00 01 00 00 01 	addl   $0x1,0x100(%rbx)
    596d:	83 83 08 01 00 00 01 	addl   $0x1,0x108(%rbx)
    5974:	48 83 c4 10          	add    $0x10,%rsp
    5978:	5b                   	pop    %rbx
    5979:	5d                   	pop    %rbp
    597a:	41 5c                	pop    %r12
    597c:	41 5d                	pop    %r13
    597e:	41 5e                	pop    %r14
    5980:	c3                   	retq   
    5981:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5988:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    598f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    5993:	48 39 d0             	cmp    %rdx,%rax
    5996:	0f 82 1c 01 00 00    	jb     5ab8 <stm_store+0x1f8>
    599c:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    59a2:	48 89 ce             	mov    %rcx,%rsi
    59a5:	48 c1 e1 06          	shl    $0x6,%rcx
    59a9:	48 01 d1             	add    %rdx,%rcx
    59ac:	48 39 c8             	cmp    %rcx,%rax
    59af:	72 1f                	jb     59d0 <stm_store+0x110>
    59b1:	e9 02 01 00 00       	jmpq   5ab8 <stm_store+0x1f8>
    59b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    59bd:	00 00 00 
    59c0:	48 8b 48 28          	mov    0x28(%rax),%rcx
    59c4:	48 85 c9             	test   %rcx,%rcx
    59c7:	0f 84 a3 00 00 00    	je     5a70 <stm_store+0x1b0>
    59cd:	48 89 c8             	mov    %rcx,%rax
    59d0:	4c 3b 20             	cmp    (%rax),%r12
    59d3:	75 eb                	jne    59c0 <stm_store+0x100>
    59d5:	4c 89 68 08          	mov    %r13,0x8(%rax)
    59d9:	48 c7 40 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rax)
    59e0:	ff 
    59e1:	eb 91                	jmp    5974 <stm_store+0xb4>
    59e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    59e8:	be 40 0c 00 00       	mov    $0xc40,%esi
    59ed:	48 89 df             	mov    %rbx,%rdi
    59f0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    59f5:	e8 f6 f2 ff ff       	callq  4cf0 <stm_rollback>
    59fa:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    5a00:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5a05:	e9 23 ff ff ff       	jmpq   592d <stm_store+0x6d>
    5a0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5a10:	8b 8b f0 00 00 00    	mov    0xf0(%rbx),%ecx
    5a16:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    5a1d:	85 c9                	test   %ecx,%ecx
    5a1f:	0f 8e f6 fe ff ff    	jle    591b <stm_store+0x5b>
    5a25:	48 3b 6a 08          	cmp    0x8(%rdx),%rbp
    5a29:	74 28                	je     5a53 <stm_store+0x193>
    5a2b:	83 e9 01             	sub    $0x1,%ecx
    5a2e:	48 83 c2 18          	add    $0x18,%rdx
    5a32:	48 c1 e1 04          	shl    $0x4,%rcx
    5a36:	48 01 d1             	add    %rdx,%rcx
    5a39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5a40:	48 39 d1             	cmp    %rdx,%rcx
    5a43:	0f 84 d2 fe ff ff    	je     591b <stm_store+0x5b>
    5a49:	48 83 c2 10          	add    $0x10,%rdx
    5a4d:	48 3b 6a f0          	cmp    -0x10(%rdx),%rbp
    5a51:	75 ed                	jne    5a40 <stm_store+0x180>
    5a53:	be 40 06 00 00       	mov    $0x640,%esi
    5a58:	48 83 c4 10          	add    $0x10,%rsp
    5a5c:	48 89 df             	mov    %rbx,%rdi
    5a5f:	5b                   	pop    %rbx
    5a60:	5d                   	pop    %rbp
    5a61:	41 5c                	pop    %r12
    5a63:	41 5d                	pop    %r13
    5a65:	41 5e                	pop    %r14
    5a67:	e9 84 f2 ff ff       	jmpq   4cf0 <stm_rollback>
    5a6c:	0f 1f 40 00          	nopl   0x0(%rax)
    5a70:	3b b3 04 01 00 00    	cmp    0x104(%rbx),%esi
    5a76:	4c 8b 70 18          	mov    0x18(%rax),%r14
    5a7a:	74 54                	je     5ad0 <stm_store+0x210>
    5a7c:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    5a82:	48 c1 e1 06          	shl    $0x6,%rcx
    5a86:	48 01 ca             	add    %rcx,%rdx
    5a89:	4c 89 22             	mov    %r12,(%rdx)
    5a8c:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
    5a93:	ff 
    5a94:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    5a98:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    5a9c:	4c 89 72 18          	mov    %r14,0x18(%rdx)
    5aa0:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    5aa7:	00 
    5aa8:	48 89 50 28          	mov    %rdx,0x28(%rax)
    5aac:	e9 b5 fe ff ff       	jmpq   5966 <stm_store+0xa6>
    5ab1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5ab8:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    5abf:	0f 85 2d fe ff ff    	jne    58f2 <stm_store+0x32>
    5ac5:	be 40 04 00 00       	mov    $0x440,%esi
    5aca:	eb 8c                	jmp    5a58 <stm_store+0x198>
    5acc:	0f 1f 40 00          	nopl   0x0(%rax)
    5ad0:	be 40 0c 00 00       	mov    $0xc40,%esi
    5ad5:	48 89 df             	mov    %rbx,%rdi
    5ad8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5add:	e8 0e f2 ff ff       	callq  4cf0 <stm_rollback>
    5ae2:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    5ae9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5aee:	eb 8c                	jmp    5a7c <stm_store+0x1bc>

0000000000005af0 <stm_store_tx>:
    5af0:	41 55                	push   %r13
    5af2:	41 54                	push   %r12
    5af4:	48 8d 05 85 a6 20 00 	lea    0x20a685(%rip),%rax        # 210180 <_tinystm>
    5afb:	55                   	push   %rbp
    5afc:	48 89 f5             	mov    %rsi,%rbp
    5aff:	53                   	push   %rbx
    5b00:	48 c1 ed 02          	shr    $0x2,%rbp
    5b04:	48 89 fb             	mov    %rdi,%rbx
    5b07:	49 89 f4             	mov    %rsi,%r12
    5b0a:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    5b10:	48 83 ec 18          	sub    $0x18,%rsp
    5b14:	48 01 c5             	add    %rax,%rbp
    5b17:	48 8b 45 00          	mov    0x0(%rbp),%rax
    5b1b:	a8 01                	test   $0x1,%al
    5b1d:	0f 85 85 00 00 00    	jne    5ba8 <stm_store_tx+0xb8>
    5b23:	49 89 c5             	mov    %rax,%r13
    5b26:	49 c1 ed 04          	shr    $0x4,%r13
    5b2a:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    5b31:	75 0d                	jne    5b40 <stm_store_tx+0x50>
    5b33:	4c 3b ab e0 00 00 00 	cmp    0xe0(%rbx),%r13
    5b3a:	0f 87 f8 00 00 00    	ja     5c38 <stm_store_tx+0x148>
    5b40:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    5b46:	3b 8b 04 01 00 00    	cmp    0x104(%rbx),%ecx
    5b4c:	0f 84 b6 00 00 00    	je     5c08 <stm_store_tx+0x118>
    5b52:	48 c1 e1 06          	shl    $0x6,%rcx
    5b56:	48 03 8b f8 00 00 00 	add    0xf8(%rbx),%rcx
    5b5d:	48 89 ce             	mov    %rcx,%rsi
    5b60:	48 83 ce 01          	or     $0x1,%rsi
    5b64:	f0 48 0f b1 75 00    	lock cmpxchg %rsi,0x0(%rbp)
    5b6a:	75 ab                	jne    5b17 <stm_store_tx+0x27>
    5b6c:	4c 89 21             	mov    %r12,(%rcx)
    5b6f:	48 c7 41 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rcx)
    5b76:	ff 
    5b77:	48 89 69 20          	mov    %rbp,0x20(%rcx)
    5b7b:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    5b7f:	4c 89 69 18          	mov    %r13,0x18(%rcx)
    5b83:	48 c7 41 28 00 00 00 	movq   $0x0,0x28(%rcx)
    5b8a:	00 
    5b8b:	83 83 00 01 00 00 01 	addl   $0x1,0x100(%rbx)
    5b92:	83 83 08 01 00 00 01 	addl   $0x1,0x108(%rbx)
    5b99:	48 83 c4 18          	add    $0x18,%rsp
    5b9d:	5b                   	pop    %rbx
    5b9e:	5d                   	pop    %rbp
    5b9f:	41 5c                	pop    %r12
    5ba1:	41 5d                	pop    %r13
    5ba3:	c3                   	retq   
    5ba4:	0f 1f 40 00          	nopl   0x0(%rax)
    5ba8:	48 8b 8b f8 00 00 00 	mov    0xf8(%rbx),%rcx
    5baf:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    5bb3:	48 39 c8             	cmp    %rcx,%rax
    5bb6:	0f 82 24 01 00 00    	jb     5ce0 <stm_store_tx+0x1f0>
    5bbc:	8b b3 00 01 00 00    	mov    0x100(%rbx),%esi
    5bc2:	48 89 f7             	mov    %rsi,%rdi
    5bc5:	48 c1 e6 06          	shl    $0x6,%rsi
    5bc9:	48 01 ce             	add    %rcx,%rsi
    5bcc:	48 39 f0             	cmp    %rsi,%rax
    5bcf:	72 1f                	jb     5bf0 <stm_store_tx+0x100>
    5bd1:	e9 0a 01 00 00       	jmpq   5ce0 <stm_store_tx+0x1f0>
    5bd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5bdd:	00 00 00 
    5be0:	48 8b 70 28          	mov    0x28(%rax),%rsi
    5be4:	48 85 f6             	test   %rsi,%rsi
    5be7:	0f 84 ab 00 00 00    	je     5c98 <stm_store_tx+0x1a8>
    5bed:	48 89 f0             	mov    %rsi,%rax
    5bf0:	4c 3b 20             	cmp    (%rax),%r12
    5bf3:	75 eb                	jne    5be0 <stm_store_tx+0xf0>
    5bf5:	48 89 50 08          	mov    %rdx,0x8(%rax)
    5bf9:	48 c7 40 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rax)
    5c00:	ff 
    5c01:	eb 96                	jmp    5b99 <stm_store_tx+0xa9>
    5c03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5c08:	be 40 0c 00 00       	mov    $0xc40,%esi
    5c0d:	48 89 df             	mov    %rbx,%rdi
    5c10:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    5c15:	48 89 04 24          	mov    %rax,(%rsp)
    5c19:	e8 d2 f0 ff ff       	callq  4cf0 <stm_rollback>
    5c1e:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    5c24:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    5c29:	48 8b 04 24          	mov    (%rsp),%rax
    5c2d:	e9 20 ff ff ff       	jmpq   5b52 <stm_store_tx+0x62>
    5c32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5c38:	8b b3 f0 00 00 00    	mov    0xf0(%rbx),%esi
    5c3e:	48 8b 8b e8 00 00 00 	mov    0xe8(%rbx),%rcx
    5c45:	85 f6                	test   %esi,%esi
    5c47:	0f 8e f3 fe ff ff    	jle    5b40 <stm_store_tx+0x50>
    5c4d:	48 3b 69 08          	cmp    0x8(%rcx),%rbp
    5c51:	74 28                	je     5c7b <stm_store_tx+0x18b>
    5c53:	83 ee 01             	sub    $0x1,%esi
    5c56:	48 83 c1 18          	add    $0x18,%rcx
    5c5a:	48 c1 e6 04          	shl    $0x4,%rsi
    5c5e:	48 01 ce             	add    %rcx,%rsi
    5c61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5c68:	48 39 ce             	cmp    %rcx,%rsi
    5c6b:	0f 84 cf fe ff ff    	je     5b40 <stm_store_tx+0x50>
    5c71:	48 83 c1 10          	add    $0x10,%rcx
    5c75:	48 3b 69 f0          	cmp    -0x10(%rcx),%rbp
    5c79:	75 ed                	jne    5c68 <stm_store_tx+0x178>
    5c7b:	be 40 06 00 00       	mov    $0x640,%esi
    5c80:	48 83 c4 18          	add    $0x18,%rsp
    5c84:	48 89 df             	mov    %rbx,%rdi
    5c87:	5b                   	pop    %rbx
    5c88:	5d                   	pop    %rbp
    5c89:	41 5c                	pop    %r12
    5c8b:	41 5d                	pop    %r13
    5c8d:	e9 5e f0 ff ff       	jmpq   4cf0 <stm_rollback>
    5c92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5c98:	3b bb 04 01 00 00    	cmp    0x104(%rbx),%edi
    5c9e:	4c 8b 68 18          	mov    0x18(%rax),%r13
    5ca2:	74 54                	je     5cf8 <stm_store_tx+0x208>
    5ca4:	8b b3 00 01 00 00    	mov    0x100(%rbx),%esi
    5caa:	48 c1 e6 06          	shl    $0x6,%rsi
    5cae:	48 01 f1             	add    %rsi,%rcx
    5cb1:	4c 89 21             	mov    %r12,(%rcx)
    5cb4:	48 c7 41 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rcx)
    5cbb:	ff 
    5cbc:	48 89 69 20          	mov    %rbp,0x20(%rcx)
    5cc0:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    5cc4:	4c 89 69 18          	mov    %r13,0x18(%rcx)
    5cc8:	48 c7 41 28 00 00 00 	movq   $0x0,0x28(%rcx)
    5ccf:	00 
    5cd0:	48 89 48 28          	mov    %rcx,0x28(%rax)
    5cd4:	e9 b2 fe ff ff       	jmpq   5b8b <stm_store_tx+0x9b>
    5cd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5ce0:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    5ce7:	0f 85 2a fe ff ff    	jne    5b17 <stm_store_tx+0x27>
    5ced:	be 40 04 00 00       	mov    $0x440,%esi
    5cf2:	eb 8c                	jmp    5c80 <stm_store_tx+0x190>
    5cf4:	0f 1f 40 00          	nopl   0x0(%rax)
    5cf8:	be 40 0c 00 00       	mov    $0xc40,%esi
    5cfd:	48 89 df             	mov    %rbx,%rdi
    5d00:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    5d05:	48 89 04 24          	mov    %rax,(%rsp)
    5d09:	e8 e2 ef ff ff       	callq  4cf0 <stm_rollback>
    5d0e:	48 8b 8b f8 00 00 00 	mov    0xf8(%rbx),%rcx
    5d15:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    5d1a:	48 8b 04 24          	mov    (%rsp),%rax
    5d1e:	eb 84                	jmp    5ca4 <stm_store_tx+0x1b4>
    5d20:	90                   	nop
    5d21:	90                   	nop
    5d22:	90                   	nop
    5d23:	90                   	nop
    5d24:	90                   	nop
    5d25:	90                   	nop
    5d26:	90                   	nop
    5d27:	90                   	nop
    5d28:	90                   	nop
    5d29:	90                   	nop
    5d2a:	90                   	nop
    5d2b:	90                   	nop
    5d2c:	90                   	nop
    5d2d:	90                   	nop
    5d2e:	90                   	nop
    5d2f:	90                   	nop
    5d30:	90                   	nop
    5d31:	90                   	nop
    5d32:	90                   	nop
    5d33:	90                   	nop
    5d34:	90                   	nop
    5d35:	90                   	nop
    5d36:	90                   	nop
    5d37:	90                   	nop
    5d38:	90                   	nop
    5d39:	90                   	nop
    5d3a:	90                   	nop
    5d3b:	90                   	nop
    5d3c:	90                   	nop
    5d3d:	90                   	nop
    5d3e:	90                   	nop
    5d3f:	90                   	nop

0000000000005d40 <stm_store2>:
    5d40:	41 56                	push   %r14
    5d42:	41 55                	push   %r13
    5d44:	48 8d 05 35 a4 20 00 	lea    0x20a435(%rip),%rax        # 210180 <_tinystm>
    5d4b:	41 54                	push   %r12
    5d4d:	55                   	push   %rbp
    5d4e:	48 89 fd             	mov    %rdi,%rbp
    5d51:	53                   	push   %rbx
    5d52:	48 c1 ed 02          	shr    $0x2,%rbp
    5d56:	49 89 fd             	mov    %rdi,%r13
    5d59:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    5d5f:	49 89 f4             	mov    %rsi,%r12
    5d62:	48 83 ec 10          	sub    $0x10,%rsp
    5d66:	64 48 8b 1c 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rbx
    5d6d:	ff ff 
    5d6f:	48 01 c5             	add    %rax,%rbp
    5d72:	48 8b 45 00          	mov    0x0(%rbp),%rax
    5d76:	a8 01                	test   $0x1,%al
    5d78:	0f 85 ba 00 00 00    	jne    5e38 <stm_store2+0xf8>
    5d7e:	49 89 c6             	mov    %rax,%r14
    5d81:	49 c1 ee 04          	shr    $0x4,%r14
    5d85:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    5d8c:	75 0d                	jne    5d9b <stm_store2+0x5b>
    5d8e:	4c 3b b3 e0 00 00 00 	cmp    0xe0(%rbx),%r14
    5d95:	0f 87 4d 01 00 00    	ja     5ee8 <stm_store2+0x1a8>
    5d9b:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    5da1:	3b 8b 04 01 00 00    	cmp    0x104(%rbx),%ecx
    5da7:	0f 84 0b 01 00 00    	je     5eb8 <stm_store2+0x178>
    5dad:	48 c1 e1 06          	shl    $0x6,%rcx
    5db1:	48 03 8b f8 00 00 00 	add    0xf8(%rbx),%rcx
    5db8:	48 89 ce             	mov    %rcx,%rsi
    5dbb:	48 83 ce 01          	or     $0x1,%rsi
    5dbf:	f0 48 0f b1 75 00    	lock cmpxchg %rsi,0x0(%rbp)
    5dc5:	75 ab                	jne    5d72 <stm_store2+0x32>
    5dc7:	48 85 d2             	test   %rdx,%rdx
    5dca:	4c 89 29             	mov    %r13,(%rcx)
    5dcd:	48 89 51 10          	mov    %rdx,0x10(%rcx)
    5dd1:	48 89 69 20          	mov    %rbp,0x20(%rcx)
    5dd5:	74 4d                	je     5e24 <stm_store2+0xe4>
    5dd7:	31 c0                	xor    %eax,%eax
    5dd9:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
    5ddd:	74 41                	je     5e20 <stm_store2+0xe0>
    5ddf:	49 8b 75 00          	mov    0x0(%r13),%rsi
    5de3:	4c 89 71 18          	mov    %r14,0x18(%rcx)
    5de7:	48 c7 41 28 00 00 00 	movq   $0x0,0x28(%rcx)
    5dee:	00 
    5def:	49 31 f4             	xor    %rsi,%r12
    5df2:	4c 21 e2             	and    %r12,%rdx
    5df5:	48 31 f2             	xor    %rsi,%rdx
    5df8:	48 85 c0             	test   %rax,%rax
    5dfb:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    5dff:	74 04                	je     5e05 <stm_store2+0xc5>
    5e01:	48 89 48 28          	mov    %rcx,0x28(%rax)
    5e05:	83 83 00 01 00 00 01 	addl   $0x1,0x100(%rbx)
    5e0c:	83 83 08 01 00 00 01 	addl   $0x1,0x108(%rbx)
    5e13:	48 83 c4 10          	add    $0x10,%rsp
    5e17:	5b                   	pop    %rbx
    5e18:	5d                   	pop    %rbp
    5e19:	41 5c                	pop    %r12
    5e1b:	41 5d                	pop    %r13
    5e1d:	41 5e                	pop    %r14
    5e1f:	c3                   	retq   
    5e20:	4c 89 61 08          	mov    %r12,0x8(%rcx)
    5e24:	4c 89 71 18          	mov    %r14,0x18(%rcx)
    5e28:	48 c7 41 28 00 00 00 	movq   $0x0,0x28(%rcx)
    5e2f:	00 
    5e30:	eb d3                	jmp    5e05 <stm_store2+0xc5>
    5e32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5e38:	48 8b 8b f8 00 00 00 	mov    0xf8(%rbx),%rcx
    5e3f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    5e43:	48 39 c8             	cmp    %rcx,%rax
    5e46:	0f 82 44 01 00 00    	jb     5f90 <stm_store2+0x250>
    5e4c:	8b b3 00 01 00 00    	mov    0x100(%rbx),%esi
    5e52:	48 89 f7             	mov    %rsi,%rdi
    5e55:	48 c1 e6 06          	shl    $0x6,%rsi
    5e59:	48 01 ce             	add    %rcx,%rsi
    5e5c:	48 39 f0             	cmp    %rsi,%rax
    5e5f:	0f 83 2b 01 00 00    	jae    5f90 <stm_store2+0x250>
    5e65:	48 85 d2             	test   %rdx,%rdx
    5e68:	75 16                	jne    5e80 <stm_store2+0x140>
    5e6a:	eb a7                	jmp    5e13 <stm_store2+0xd3>
    5e6c:	0f 1f 40 00          	nopl   0x0(%rax)
    5e70:	48 8b 70 28          	mov    0x28(%rax),%rsi
    5e74:	48 85 f6             	test   %rsi,%rsi
    5e77:	0f 84 cb 00 00 00    	je     5f48 <stm_store2+0x208>
    5e7d:	48 89 f0             	mov    %rsi,%rax
    5e80:	4c 3b 28             	cmp    (%rax),%r13
    5e83:	75 eb                	jne    5e70 <stm_store2+0x130>
    5e85:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
    5e89:	48 8b 48 10          	mov    0x10(%rax),%rcx
    5e8d:	74 16                	je     5ea5 <stm_store2+0x165>
    5e8f:	48 85 c9             	test   %rcx,%rcx
    5e92:	0f 84 10 01 00 00    	je     5fa8 <stm_store2+0x268>
    5e98:	48 8b 70 08          	mov    0x8(%rax),%rsi
    5e9c:	49 31 f4             	xor    %rsi,%r12
    5e9f:	49 21 d4             	and    %rdx,%r12
    5ea2:	49 31 f4             	xor    %rsi,%r12
    5ea5:	48 09 ca             	or     %rcx,%rdx
    5ea8:	4c 89 60 08          	mov    %r12,0x8(%rax)
    5eac:	48 89 50 10          	mov    %rdx,0x10(%rax)
    5eb0:	e9 5e ff ff ff       	jmpq   5e13 <stm_store2+0xd3>
    5eb5:	0f 1f 00             	nopl   (%rax)
    5eb8:	be 40 0c 00 00       	mov    $0xc40,%esi
    5ebd:	48 89 df             	mov    %rbx,%rdi
    5ec0:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    5ec5:	48 89 04 24          	mov    %rax,(%rsp)
    5ec9:	e8 22 ee ff ff       	callq  4cf0 <stm_rollback>
    5ece:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    5ed4:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    5ed9:	48 8b 04 24          	mov    (%rsp),%rax
    5edd:	e9 cb fe ff ff       	jmpq   5dad <stm_store2+0x6d>
    5ee2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5ee8:	8b b3 f0 00 00 00    	mov    0xf0(%rbx),%esi
    5eee:	48 8b 8b e8 00 00 00 	mov    0xe8(%rbx),%rcx
    5ef5:	85 f6                	test   %esi,%esi
    5ef7:	0f 8e 9e fe ff ff    	jle    5d9b <stm_store2+0x5b>
    5efd:	48 3b 69 08          	cmp    0x8(%rcx),%rbp
    5f01:	74 28                	je     5f2b <stm_store2+0x1eb>
    5f03:	83 ee 01             	sub    $0x1,%esi
    5f06:	48 83 c1 18          	add    $0x18,%rcx
    5f0a:	48 c1 e6 04          	shl    $0x4,%rsi
    5f0e:	48 01 ce             	add    %rcx,%rsi
    5f11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5f18:	48 39 ce             	cmp    %rcx,%rsi
    5f1b:	0f 84 7a fe ff ff    	je     5d9b <stm_store2+0x5b>
    5f21:	48 83 c1 10          	add    $0x10,%rcx
    5f25:	48 3b 69 f0          	cmp    -0x10(%rcx),%rbp
    5f29:	75 ed                	jne    5f18 <stm_store2+0x1d8>
    5f2b:	be 40 06 00 00       	mov    $0x640,%esi
    5f30:	48 83 c4 10          	add    $0x10,%rsp
    5f34:	48 89 df             	mov    %rbx,%rdi
    5f37:	5b                   	pop    %rbx
    5f38:	5d                   	pop    %rbp
    5f39:	41 5c                	pop    %r12
    5f3b:	41 5d                	pop    %r13
    5f3d:	41 5e                	pop    %r14
    5f3f:	e9 ac ed ff ff       	jmpq   4cf0 <stm_rollback>
    5f44:	0f 1f 40 00          	nopl   0x0(%rax)
    5f48:	3b bb 04 01 00 00    	cmp    0x104(%rbx),%edi
    5f4e:	4c 8b 70 18          	mov    0x18(%rax),%r14
    5f52:	74 5d                	je     5fb1 <stm_store2+0x271>
    5f54:	8b b3 00 01 00 00    	mov    0x100(%rbx),%esi
    5f5a:	48 c1 e6 06          	shl    $0x6,%rsi
    5f5e:	48 01 f1             	add    %rsi,%rcx
    5f61:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
    5f65:	4c 89 29             	mov    %r13,(%rcx)
    5f68:	48 89 51 10          	mov    %rdx,0x10(%rcx)
    5f6c:	48 89 69 20          	mov    %rbp,0x20(%rcx)
    5f70:	0f 85 69 fe ff ff    	jne    5ddf <stm_store2+0x9f>
    5f76:	4c 89 61 08          	mov    %r12,0x8(%rcx)
    5f7a:	4c 89 71 18          	mov    %r14,0x18(%rcx)
    5f7e:	48 c7 41 28 00 00 00 	movq   $0x0,0x28(%rcx)
    5f85:	00 
    5f86:	e9 76 fe ff ff       	jmpq   5e01 <stm_store2+0xc1>
    5f8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5f90:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    5f97:	0f 85 d5 fd ff ff    	jne    5d72 <stm_store2+0x32>
    5f9d:	be 40 04 00 00       	mov    $0x440,%esi
    5fa2:	eb 8c                	jmp    5f30 <stm_store2+0x1f0>
    5fa4:	0f 1f 40 00          	nopl   0x0(%rax)
    5fa8:	49 8b 75 00          	mov    0x0(%r13),%rsi
    5fac:	e9 eb fe ff ff       	jmpq   5e9c <stm_store2+0x15c>
    5fb1:	be 40 0c 00 00       	mov    $0xc40,%esi
    5fb6:	48 89 df             	mov    %rbx,%rdi
    5fb9:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    5fbe:	48 89 04 24          	mov    %rax,(%rsp)
    5fc2:	e8 29 ed ff ff       	callq  4cf0 <stm_rollback>
    5fc7:	48 8b 8b f8 00 00 00 	mov    0xf8(%rbx),%rcx
    5fce:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    5fd3:	48 8b 04 24          	mov    (%rsp),%rax
    5fd7:	e9 78 ff ff ff       	jmpq   5f54 <stm_store2+0x214>
    5fdc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005fe0 <stm_store2_tx>:
    5fe0:	41 55                	push   %r13
    5fe2:	41 54                	push   %r12
    5fe4:	48 8d 05 95 a1 20 00 	lea    0x20a195(%rip),%rax        # 210180 <_tinystm>
    5feb:	55                   	push   %rbp
    5fec:	48 89 f5             	mov    %rsi,%rbp
    5fef:	53                   	push   %rbx
    5ff0:	48 c1 ed 02          	shr    $0x2,%rbp
    5ff4:	48 89 fb             	mov    %rdi,%rbx
    5ff7:	49 89 f4             	mov    %rsi,%r12
    5ffa:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    6000:	48 83 ec 28          	sub    $0x28,%rsp
    6004:	48 01 c5             	add    %rax,%rbp
    6007:	48 8b 45 00          	mov    0x0(%rbp),%rax
    600b:	a8 01                	test   $0x1,%al
    600d:	0f 85 bd 00 00 00    	jne    60d0 <stm_store2_tx+0xf0>
    6013:	49 89 c5             	mov    %rax,%r13
    6016:	49 c1 ed 04          	shr    $0x4,%r13
    601a:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    6021:	75 0d                	jne    6030 <stm_store2_tx+0x50>
    6023:	4c 3b ab e0 00 00 00 	cmp    0xe0(%rbx),%r13
    602a:	0f 87 60 01 00 00    	ja     6190 <stm_store2_tx+0x1b0>
    6030:	8b b3 00 01 00 00    	mov    0x100(%rbx),%esi
    6036:	3b b3 04 01 00 00    	cmp    0x104(%rbx),%esi
    603c:	0f 84 0e 01 00 00    	je     6150 <stm_store2_tx+0x170>
    6042:	48 c1 e6 06          	shl    $0x6,%rsi
    6046:	48 03 b3 f8 00 00 00 	add    0xf8(%rbx),%rsi
    604d:	48 89 f7             	mov    %rsi,%rdi
    6050:	48 83 cf 01          	or     $0x1,%rdi
    6054:	f0 48 0f b1 7d 00    	lock cmpxchg %rdi,0x0(%rbp)
    605a:	75 ab                	jne    6007 <stm_store2_tx+0x27>
    605c:	48 85 c9             	test   %rcx,%rcx
    605f:	4c 89 26             	mov    %r12,(%rsi)
    6062:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
    6066:	48 89 6e 20          	mov    %rbp,0x20(%rsi)
    606a:	74 50                	je     60bc <stm_store2_tx+0xdc>
    606c:	31 c0                	xor    %eax,%eax
    606e:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
    6072:	74 44                	je     60b8 <stm_store2_tx+0xd8>
    6074:	49 8b 3c 24          	mov    (%r12),%rdi
    6078:	4c 89 6e 18          	mov    %r13,0x18(%rsi)
    607c:	48 c7 46 28 00 00 00 	movq   $0x0,0x28(%rsi)
    6083:	00 
    6084:	48 31 fa             	xor    %rdi,%rdx
    6087:	48 21 d1             	and    %rdx,%rcx
    608a:	48 31 f9             	xor    %rdi,%rcx
    608d:	48 85 c0             	test   %rax,%rax
    6090:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    6094:	74 04                	je     609a <stm_store2_tx+0xba>
    6096:	48 89 70 28          	mov    %rsi,0x28(%rax)
    609a:	83 83 00 01 00 00 01 	addl   $0x1,0x100(%rbx)
    60a1:	83 83 08 01 00 00 01 	addl   $0x1,0x108(%rbx)
    60a8:	48 83 c4 28          	add    $0x28,%rsp
    60ac:	5b                   	pop    %rbx
    60ad:	5d                   	pop    %rbp
    60ae:	41 5c                	pop    %r12
    60b0:	41 5d                	pop    %r13
    60b2:	c3                   	retq   
    60b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    60b8:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    60bc:	4c 89 6e 18          	mov    %r13,0x18(%rsi)
    60c0:	48 c7 46 28 00 00 00 	movq   $0x0,0x28(%rsi)
    60c7:	00 
    60c8:	eb d0                	jmp    609a <stm_store2_tx+0xba>
    60ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    60d0:	48 8b b3 f8 00 00 00 	mov    0xf8(%rbx),%rsi
    60d7:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    60db:	48 39 f0             	cmp    %rsi,%rax
    60de:	0f 82 54 01 00 00    	jb     6238 <stm_store2_tx+0x258>
    60e4:	8b bb 00 01 00 00    	mov    0x100(%rbx),%edi
    60ea:	49 89 f8             	mov    %rdi,%r8
    60ed:	48 c1 e7 06          	shl    $0x6,%rdi
    60f1:	48 01 f7             	add    %rsi,%rdi
    60f4:	48 39 f8             	cmp    %rdi,%rax
    60f7:	0f 83 3b 01 00 00    	jae    6238 <stm_store2_tx+0x258>
    60fd:	48 85 c9             	test   %rcx,%rcx
    6100:	75 16                	jne    6118 <stm_store2_tx+0x138>
    6102:	eb a4                	jmp    60a8 <stm_store2_tx+0xc8>
    6104:	0f 1f 40 00          	nopl   0x0(%rax)
    6108:	48 8b 78 28          	mov    0x28(%rax),%rdi
    610c:	48 85 ff             	test   %rdi,%rdi
    610f:	0f 84 db 00 00 00    	je     61f0 <stm_store2_tx+0x210>
    6115:	48 89 f8             	mov    %rdi,%rax
    6118:	4c 3b 20             	cmp    (%rax),%r12
    611b:	75 eb                	jne    6108 <stm_store2_tx+0x128>
    611d:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
    6121:	48 8b 70 10          	mov    0x10(%rax),%rsi
    6125:	74 16                	je     613d <stm_store2_tx+0x15d>
    6127:	48 85 f6             	test   %rsi,%rsi
    612a:	0f 84 20 01 00 00    	je     6250 <stm_store2_tx+0x270>
    6130:	48 8b 78 08          	mov    0x8(%rax),%rdi
    6134:	48 31 fa             	xor    %rdi,%rdx
    6137:	48 21 ca             	and    %rcx,%rdx
    613a:	48 31 fa             	xor    %rdi,%rdx
    613d:	48 09 f1             	or     %rsi,%rcx
    6140:	48 89 50 08          	mov    %rdx,0x8(%rax)
    6144:	48 89 48 10          	mov    %rcx,0x10(%rax)
    6148:	e9 5b ff ff ff       	jmpq   60a8 <stm_store2_tx+0xc8>
    614d:	0f 1f 00             	nopl   (%rax)
    6150:	be 40 0c 00 00       	mov    $0xc40,%esi
    6155:	48 89 df             	mov    %rbx,%rdi
    6158:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    615d:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    6162:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6167:	e8 84 eb ff ff       	callq  4cf0 <stm_rollback>
    616c:	8b b3 00 01 00 00    	mov    0x100(%rbx),%esi
    6172:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    6177:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    617c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    6181:	e9 bc fe ff ff       	jmpq   6042 <stm_store2_tx+0x62>
    6186:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    618d:	00 00 00 
    6190:	8b bb f0 00 00 00    	mov    0xf0(%rbx),%edi
    6196:	48 8b b3 e8 00 00 00 	mov    0xe8(%rbx),%rsi
    619d:	85 ff                	test   %edi,%edi
    619f:	0f 8e 8b fe ff ff    	jle    6030 <stm_store2_tx+0x50>
    61a5:	48 3b 6e 08          	cmp    0x8(%rsi),%rbp
    61a9:	74 28                	je     61d3 <stm_store2_tx+0x1f3>
    61ab:	83 ef 01             	sub    $0x1,%edi
    61ae:	48 83 c6 18          	add    $0x18,%rsi
    61b2:	48 c1 e7 04          	shl    $0x4,%rdi
    61b6:	48 01 f7             	add    %rsi,%rdi
    61b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    61c0:	48 39 f7             	cmp    %rsi,%rdi
    61c3:	0f 84 67 fe ff ff    	je     6030 <stm_store2_tx+0x50>
    61c9:	48 83 c6 10          	add    $0x10,%rsi
    61cd:	48 3b 6e f0          	cmp    -0x10(%rsi),%rbp
    61d1:	75 ed                	jne    61c0 <stm_store2_tx+0x1e0>
    61d3:	be 40 06 00 00       	mov    $0x640,%esi
    61d8:	48 83 c4 28          	add    $0x28,%rsp
    61dc:	48 89 df             	mov    %rbx,%rdi
    61df:	5b                   	pop    %rbx
    61e0:	5d                   	pop    %rbp
    61e1:	41 5c                	pop    %r12
    61e3:	41 5d                	pop    %r13
    61e5:	e9 06 eb ff ff       	jmpq   4cf0 <stm_rollback>
    61ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    61f0:	44 3b 83 04 01 00 00 	cmp    0x104(%rbx),%r8d
    61f7:	4c 8b 68 18          	mov    0x18(%rax),%r13
    61fb:	74 5c                	je     6259 <stm_store2_tx+0x279>
    61fd:	8b bb 00 01 00 00    	mov    0x100(%rbx),%edi
    6203:	48 c1 e7 06          	shl    $0x6,%rdi
    6207:	48 01 fe             	add    %rdi,%rsi
    620a:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
    620e:	4c 89 26             	mov    %r12,(%rsi)
    6211:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
    6215:	48 89 6e 20          	mov    %rbp,0x20(%rsi)
    6219:	0f 85 55 fe ff ff    	jne    6074 <stm_store2_tx+0x94>
    621f:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    6223:	4c 89 6e 18          	mov    %r13,0x18(%rsi)
    6227:	48 c7 46 28 00 00 00 	movq   $0x0,0x28(%rsi)
    622e:	00 
    622f:	e9 62 fe ff ff       	jmpq   6096 <stm_store2_tx+0xb6>
    6234:	0f 1f 40 00          	nopl   0x0(%rax)
    6238:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    623f:	0f 85 c2 fd ff ff    	jne    6007 <stm_store2_tx+0x27>
    6245:	be 40 04 00 00       	mov    $0x440,%esi
    624a:	eb 8c                	jmp    61d8 <stm_store2_tx+0x1f8>
    624c:	0f 1f 40 00          	nopl   0x0(%rax)
    6250:	49 8b 3c 24          	mov    (%r12),%rdi
    6254:	e9 db fe ff ff       	jmpq   6134 <stm_store2_tx+0x154>
    6259:	be 40 0c 00 00       	mov    $0xc40,%esi
    625e:	48 89 df             	mov    %rbx,%rdi
    6261:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    6266:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    626b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6270:	e8 7b ea ff ff       	callq  4cf0 <stm_rollback>
    6275:	48 8b b3 f8 00 00 00 	mov    0xf8(%rbx),%rsi
    627c:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    6281:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    6286:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    628b:	e9 6d ff ff ff       	jmpq   61fd <stm_store2_tx+0x21d>

0000000000006290 <stm_set_irrevocable>:
    6290:	53                   	push   %rbx
    6291:	64 48 8b 1c 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rbx
    6298:	ff ff 
    629a:	48 8b 83 d0 00 00 00 	mov    0xd0(%rbx),%rax
    62a1:	a8 01                	test   $0x1,%al
    62a3:	75 09                	jne    62ae <stm_set_irrevocable+0x1e>
    62a5:	83 ff ff             	cmp    $0xffffffff,%edi
    62a8:	0f 85 02 01 00 00    	jne    63b0 <stm_set_irrevocable+0x120>
    62ae:	0f b6 93 10 01 00 00 	movzbl 0x110(%rbx),%edx
    62b5:	b8 01 00 00 00       	mov    $0x1,%eax
    62ba:	89 d6                	mov    %edx,%esi
    62bc:	89 d1                	mov    %edx,%ecx
    62be:	83 e6 07             	and    $0x7,%esi
    62c1:	83 e1 0f             	and    $0xf,%ecx
    62c4:	40 80 fe 03          	cmp    $0x3,%sil
    62c8:	0f 84 dd 00 00 00    	je     63ab <stm_set_irrevocable+0x11b>
    62ce:	84 c9                	test   %cl,%cl
    62d0:	0f 85 02 01 00 00    	jne    63d8 <stm_set_irrevocable+0x148>
    62d6:	83 ff 01             	cmp    $0x1,%edi
    62d9:	19 c0                	sbb    %eax,%eax
    62db:	83 e2 f0             	and    $0xfffffff0,%edx
    62de:	83 e0 f8             	and    $0xfffffff8,%eax
    62e1:	83 c0 09             	add    $0x9,%eax
    62e4:	83 e0 0f             	and    $0xf,%eax
    62e7:	09 c2                	or     %eax,%edx
    62e9:	88 93 10 01 00 00    	mov    %dl,0x110(%rbx)
    62ef:	48 8b 05 62 a3 a0 00 	mov    0xa0a362(%rip),%rax        # a10658 <_tinystm+0x8004d8>
    62f6:	48 83 f8 01          	cmp    $0x1,%rax
    62fa:	0f 84 d6 01 00 00    	je     64d6 <stm_set_irrevocable+0x246>
    6300:	31 c0                	xor    %eax,%eax
    6302:	ba 01 00 00 00       	mov    $0x1,%edx
    6307:	f0 48 0f b1 15 48 a3 	lock cmpxchg %rdx,0xa0a348(%rip)        # a10658 <_tinystm+0x8004d8>
    630e:	a0 00 
    6310:	0f 85 c0 01 00 00    	jne    64d6 <stm_set_irrevocable+0x246>
    6316:	0f b6 83 10 01 00 00 	movzbl 0x110(%rbx),%eax
    631d:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    6324:	8d 48 01             	lea    0x1(%rax),%ecx
    6327:	83 e0 f0             	and    $0xfffffff0,%eax
    632a:	83 e1 0f             	and    $0xf,%ecx
    632d:	09 c8                	or     %ecx,%eax
    632f:	88 83 10 01 00 00    	mov    %al,0x110(%rbx)
    6335:	8b 83 f0 00 00 00    	mov    0xf0(%rbx),%eax
    633b:	85 c0                	test   %eax,%eax
    633d:	0f 8e 7d 01 00 00    	jle    64c0 <stm_set_irrevocable+0x230>
    6343:	44 8d 48 ff          	lea    -0x1(%rax),%r9d
    6347:	49 83 c1 01          	add    $0x1,%r9
    634b:	49 c1 e1 04          	shl    $0x4,%r9
    634f:	49 01 d1             	add    %rdx,%r9
    6352:	eb 34                	jmp    6388 <stm_set_irrevocable+0xf8>
    6354:	0f 1f 40 00          	nopl   0x0(%rax)
    6358:	48 8b b3 f8 00 00 00 	mov    0xf8(%rbx),%rsi
    635f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    6363:	48 39 f0             	cmp    %rsi,%rax
    6366:	72 34                	jb     639c <stm_set_irrevocable+0x10c>
    6368:	44 8b 83 00 01 00 00 	mov    0x100(%rbx),%r8d
    636f:	49 c1 e0 06          	shl    $0x6,%r8
    6373:	4c 01 c6             	add    %r8,%rsi
    6376:	48 39 f0             	cmp    %rsi,%rax
    6379:	73 21                	jae    639c <stm_set_irrevocable+0x10c>
    637b:	48 83 c2 10          	add    $0x10,%rdx
    637f:	4c 39 ca             	cmp    %r9,%rdx
    6382:	0f 84 38 01 00 00    	je     64c0 <stm_set_irrevocable+0x230>
    6388:	48 8b 42 08          	mov    0x8(%rdx),%rax
    638c:	48 8b 00             	mov    (%rax),%rax
    638f:	a8 01                	test   $0x1,%al
    6391:	75 c5                	jne    6358 <stm_set_irrevocable+0xc8>
    6393:	48 c1 e8 04          	shr    $0x4,%rax
    6397:	48 3b 02             	cmp    (%rdx),%rax
    639a:	74 df                	je     637b <stm_set_irrevocable+0xeb>
    639c:	be 40 07 00 00       	mov    $0x740,%esi
    63a1:	48 89 df             	mov    %rbx,%rdi
    63a4:	e8 47 e9 ff ff       	callq  4cf0 <stm_rollback>
    63a9:	31 c0                	xor    %eax,%eax
    63ab:	5b                   	pop    %rbx
    63ac:	c3                   	retq   
    63ad:	0f 1f 00             	nopl   (%rax)
    63b0:	83 ff 01             	cmp    $0x1,%edi
    63b3:	0f b6 93 10 01 00 00 	movzbl 0x110(%rbx),%edx
    63ba:	19 c0                	sbb    %eax,%eax
    63bc:	83 e0 f8             	and    $0xfffffff8,%eax
    63bf:	83 c0 09             	add    $0x9,%eax
    63c2:	83 e0 0f             	and    $0xf,%eax
    63c5:	83 e2 f0             	and    $0xfffffff0,%edx
    63c8:	09 d0                	or     %edx,%eax
    63ca:	88 83 10 01 00 00    	mov    %al,0x110(%rbx)
    63d0:	31 c0                	xor    %eax,%eax
    63d2:	5b                   	pop    %rbx
    63d3:	c3                   	retq   
    63d4:	0f 1f 40 00          	nopl   0x0(%rax)
    63d8:	40 80 fe 01          	cmp    $0x1,%sil
    63dc:	0f 84 96 00 00 00    	je     6478 <stm_set_irrevocable+0x1e8>
    63e2:	f6 c1 08             	test   $0x8,%cl
    63e5:	74 6a                	je     6451 <stm_set_irrevocable+0x1c1>
    63e7:	48 8b 83 d0 00 00 00 	mov    0xd0(%rbx),%rax
    63ee:	48 8d 3d 83 a2 a0 00 	lea    0xa0a283(%rip),%rdi        # a10678 <_tinystm+0x8004f8>
    63f5:	a8 01                	test   $0x1,%al
    63f7:	0f 84 f3 00 00 00    	je     64f0 <stm_set_irrevocable+0x260>
    63fd:	e8 9e b0 ff ff       	callq  14a0 <pthread_mutex_trylock@plt>
    6402:	85 c0                	test   %eax,%eax
    6404:	0f 85 cc 00 00 00    	jne    64d6 <stm_set_irrevocable+0x246>
    640a:	48 c7 05 4b a2 a0 00 	movq   $0x2,0xa0a24b(%rip)        # a10660 <_tinystm+0x8004e0>
    6411:	02 00 00 00 
    6415:	0f ae f0             	mfence 
    6418:	48 8b 15 51 a2 a0 00 	mov    0xa0a251(%rip),%rdx        # a10670 <_tinystm+0x8004f0>
    641f:	48 85 d2             	test   %rdx,%rdx
    6422:	74 23                	je     6447 <stm_set_irrevocable+0x1b7>
    6424:	0f 1f 40 00          	nopl   0x0(%rax)
    6428:	48 39 d3             	cmp    %rdx,%rbx
    642b:	74 0e                	je     643b <stm_set_irrevocable+0x1ab>
    642d:	0f 1f 00             	nopl   (%rax)
    6430:	48 8b 82 d0 00 00 00 	mov    0xd0(%rdx),%rax
    6437:	a8 01                	test   $0x1,%al
    6439:	75 f5                	jne    6430 <stm_set_irrevocable+0x1a0>
    643b:	48 8b 92 50 01 00 00 	mov    0x150(%rdx),%rdx
    6442:	48 85 d2             	test   %rdx,%rdx
    6445:	75 e1                	jne    6428 <stm_set_irrevocable+0x198>
    6447:	0f b6 8b 10 01 00 00 	movzbl 0x110(%rbx),%ecx
    644e:	83 e1 0f             	and    $0xf,%ecx
    6451:	83 c1 01             	add    $0x1,%ecx
    6454:	89 c8                	mov    %ecx,%eax
    6456:	0f b6 8b 10 01 00 00 	movzbl 0x110(%rbx),%ecx
    645d:	83 e0 0f             	and    $0xf,%eax
    6460:	83 e1 f0             	and    $0xfffffff0,%ecx
    6463:	09 c1                	or     %eax,%ecx
    6465:	b8 01 00 00 00       	mov    $0x1,%eax
    646a:	88 8b 10 01 00 00    	mov    %cl,0x110(%rbx)
    6470:	5b                   	pop    %rbx
    6471:	c3                   	retq   
    6472:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6478:	31 c9                	xor    %ecx,%ecx
    647a:	ba 01 00 00 00       	mov    $0x1,%edx
    647f:	90                   	nop
    6480:	48 8b 05 d1 a1 a0 00 	mov    0xa0a1d1(%rip),%rax        # a10658 <_tinystm+0x8004d8>
    6487:	48 83 f8 01          	cmp    $0x1,%rax
    648b:	74 f3                	je     6480 <stm_set_irrevocable+0x1f0>
    648d:	48 89 c8             	mov    %rcx,%rax
    6490:	f0 48 0f b1 15 bf a1 	lock cmpxchg %rdx,0xa0a1bf(%rip)        # a10658 <_tinystm+0x8004d8>
    6497:	a0 00 
    6499:	75 e5                	jne    6480 <stm_set_irrevocable+0x1f0>
    649b:	0f b6 83 10 01 00 00 	movzbl 0x110(%rbx),%eax
    64a2:	8d 48 01             	lea    0x1(%rax),%ecx
    64a5:	83 e0 f0             	and    $0xfffffff0,%eax
    64a8:	83 e1 0f             	and    $0xf,%ecx
    64ab:	09 c8                	or     %ecx,%eax
    64ad:	88 83 10 01 00 00    	mov    %al,0x110(%rbx)
    64b3:	e9 2a ff ff ff       	jmpq   63e2 <stm_set_irrevocable+0x152>
    64b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    64bf:	00 
    64c0:	85 ff                	test   %edi,%edi
    64c2:	0f 84 1a ff ff ff    	je     63e2 <stm_set_irrevocable+0x152>
    64c8:	8b 83 00 01 00 00    	mov    0x100(%rbx),%eax
    64ce:	85 c0                	test   %eax,%eax
    64d0:	0f 84 0c ff ff ff    	je     63e2 <stm_set_irrevocable+0x152>
    64d6:	48 89 df             	mov    %rbx,%rdi
    64d9:	be 40 09 00 00       	mov    $0x940,%esi
    64de:	e8 0d e8 ff ff       	callq  4cf0 <stm_rollback>
    64e3:	31 c0                	xor    %eax,%eax
    64e5:	5b                   	pop    %rbx
    64e6:	c3                   	retq   
    64e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    64ee:	00 00 
    64f0:	e8 9b af ff ff       	callq  1490 <pthread_mutex_lock@plt>
    64f5:	e9 10 ff ff ff       	jmpq   640a <stm_set_irrevocable+0x17a>
    64fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006500 <stm_start>:
    6500:	41 54                	push   %r12
    6502:	55                   	push   %rbp
    6503:	53                   	push   %rbx
    6504:	64 4c 8b 24 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%r12
    650b:	ff ff 
    650d:	41 8b 84 24 14 01 00 	mov    0x114(%r12),%eax
    6514:	00 
    6515:	8d 68 01             	lea    0x1(%rax),%ebp
    6518:	85 c0                	test   %eax,%eax
    651a:	41 89 ac 24 14 01 00 	mov    %ebp,0x114(%r12)
    6521:	00 
    6522:	0f 85 60 01 00 00    	jne    6688 <stm_start+0x188>
    6528:	41 89 bc 24 c8 00 00 	mov    %edi,0xc8(%r12)
    652f:	00 
    6530:	41 c7 84 24 08 01 00 	movl   $0x0,0x108(%r12)
    6537:	00 00 00 00 00 
    653c:	41 c7 84 24 00 01 00 	movl   $0x0,0x100(%r12)
    6543:	00 00 00 00 00 
    6548:	41 c7 84 24 f0 00 00 	movl   $0x0,0xf0(%r12)
    654f:	00 00 00 00 00 
    6554:	48 8b 05 a5 9c a0 00 	mov    0xa09ca5(%rip),%rax        # a10200 <_tinystm+0x800080>
    655b:	48 ba fe df ff ff ff 	movabs $0xfffffffffffdffe,%rdx
    6562:	ff ff 0f 
    6565:	49 89 84 24 e0 00 00 	mov    %rax,0xe0(%r12)
    656c:	00 
    656d:	49 89 84 24 d8 00 00 	mov    %rax,0xd8(%r12)
    6574:	00 
    6575:	48 39 d0             	cmp    %rdx,%rax
    6578:	77 6e                	ja     65e8 <stm_start+0xe8>
    657a:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
    6581:	00 0f 
    6583:	0f 85 8f 00 00 00    	jne    6618 <stm_start+0x118>
    6589:	49 c7 84 24 d0 00 00 	movq   $0x1,0xd0(%r12)
    6590:	00 01 00 00 00 
    6595:	48 8b 05 c4 a0 a0 00 	mov    0xa0a0c4(%rip),%rax        # a10660 <_tinystm+0x8004e0>
    659c:	48 83 f8 02          	cmp    $0x2,%rax
    65a0:	0f 84 9a 00 00 00    	je     6640 <stm_start+0x140>
    65a6:	8b 05 c4 9e a0 00    	mov    0xa09ec4(%rip),%eax        # a10470 <_tinystm+0x8002f0>
    65ac:	85 c0                	test   %eax,%eax
    65ae:	74 2c                	je     65dc <stm_start+0xdc>
    65b0:	48 8d 1d c9 9b 20 00 	lea    0x209bc9(%rip),%rbx        # 210180 <_tinystm>
    65b7:	eb 0a                	jmp    65c3 <stm_start+0xc3>
    65b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    65c0:	83 c5 01             	add    $0x1,%ebp
    65c3:	48 8b bb 00 03 80 00 	mov    0x800300(%rbx),%rdi
    65ca:	ff 93 f8 02 80 00    	callq  *0x8002f8(%rbx)
    65d0:	48 83 c3 10          	add    $0x10,%rbx
    65d4:	3b 2d 96 9e a0 00    	cmp    0xa09e96(%rip),%ebp        # a10470 <_tinystm+0x8002f0>
    65da:	72 e4                	jb     65c0 <stm_start+0xc0>
    65dc:	4c 89 e0             	mov    %r12,%rax
    65df:	5b                   	pop    %rbx
    65e0:	5d                   	pop    %rbp
    65e1:	41 5c                	pop    %r12
    65e3:	c3                   	retq   
    65e4:	0f 1f 40 00          	nopl   0x0(%rax)
    65e8:	48 89 d3             	mov    %rdx,%rbx
    65eb:	e8 10 d7 ff ff       	callq  3d00 <stm_quiesce_barrier.isra.0.constprop.1>
    65f0:	48 8b 05 09 9c a0 00 	mov    0xa09c09(%rip),%rax        # a10200 <_tinystm+0x800080>
    65f7:	48 39 d8             	cmp    %rbx,%rax
    65fa:	49 89 84 24 e0 00 00 	mov    %rax,0xe0(%r12)
    6601:	00 
    6602:	49 89 84 24 d8 00 00 	mov    %rax,0xd8(%r12)
    6609:	00 
    660a:	0f 86 6a ff ff ff    	jbe    657a <stm_start+0x7a>
    6610:	eb d9                	jmp    65eb <stm_start+0xeb>
    6612:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6618:	be ff ff ff ff       	mov    $0xffffffff,%esi
    661d:	4c 89 e7             	mov    %r12,%rdi
    6620:	e8 5b e4 ff ff       	callq  4a80 <stm_set_irrevocable_tx>
    6625:	49 c7 84 24 d0 00 00 	movq   $0x9,0xd0(%r12)
    662c:	00 09 00 00 00 
    6631:	e9 5f ff ff ff       	jmpq   6595 <stm_start+0x95>
    6636:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    663d:	00 00 00 
    6640:	41 f6 84 24 10 01 00 	testb  $0x8,0x110(%r12)
    6647:	00 08 
    6649:	0f 85 57 ff ff ff    	jne    65a6 <stm_start+0xa6>
    664f:	49 8b 94 24 d0 00 00 	mov    0xd0(%r12),%rdx
    6656:	00 
    6657:	49 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%r12)
    665e:	00 00 00 00 00 
    6663:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6668:	48 8b 05 f1 9f a0 00 	mov    0xa09ff1(%rip),%rax        # a10660 <_tinystm+0x8004e0>
    666f:	48 83 f8 02          	cmp    $0x2,%rax
    6673:	74 f3                	je     6668 <stm_start+0x168>
    6675:	49 89 94 24 d0 00 00 	mov    %rdx,0xd0(%r12)
    667c:	00 
    667d:	e9 24 ff ff ff       	jmpq   65a6 <stm_start+0xa6>
    6682:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6688:	31 c0                	xor    %eax,%eax
    668a:	e9 50 ff ff ff       	jmpq   65df <stm_start+0xdf>
    668f:	90                   	nop

0000000000006690 <stm_start_tx>:
    6690:	41 54                	push   %r12
    6692:	55                   	push   %rbp
    6693:	53                   	push   %rbx
    6694:	8b 87 14 01 00 00    	mov    0x114(%rdi),%eax
    669a:	44 8d 60 01          	lea    0x1(%rax),%r12d
    669e:	85 c0                	test   %eax,%eax
    66a0:	44 89 a7 14 01 00 00 	mov    %r12d,0x114(%rdi)
    66a7:	0f 85 43 01 00 00    	jne    67f0 <stm_start_tx+0x160>
    66ad:	89 b7 c8 00 00 00    	mov    %esi,0xc8(%rdi)
    66b3:	c7 87 08 01 00 00 00 	movl   $0x0,0x108(%rdi)
    66ba:	00 00 00 
    66bd:	48 89 fd             	mov    %rdi,%rbp
    66c0:	c7 87 00 01 00 00 00 	movl   $0x0,0x100(%rdi)
    66c7:	00 00 00 
    66ca:	c7 87 f0 00 00 00 00 	movl   $0x0,0xf0(%rdi)
    66d1:	00 00 00 
    66d4:	48 8b 05 25 9b a0 00 	mov    0xa09b25(%rip),%rax        # a10200 <_tinystm+0x800080>
    66db:	48 ba fe df ff ff ff 	movabs $0xfffffffffffdffe,%rdx
    66e2:	ff ff 0f 
    66e5:	48 89 87 e0 00 00 00 	mov    %rax,0xe0(%rdi)
    66ec:	48 89 87 d8 00 00 00 	mov    %rax,0xd8(%rdi)
    66f3:	48 39 d0             	cmp    %rdx,%rax
    66f6:	77 68                	ja     6760 <stm_start_tx+0xd0>
    66f8:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    66ff:	0f 85 8b 00 00 00    	jne    6790 <stm_start_tx+0x100>
    6705:	48 c7 85 d0 00 00 00 	movq   $0x1,0xd0(%rbp)
    670c:	01 00 00 00 
    6710:	48 8b 05 49 9f a0 00 	mov    0xa09f49(%rip),%rax        # a10660 <_tinystm+0x8004e0>
    6717:	48 83 f8 02          	cmp    $0x2,%rax
    671b:	0f 84 8f 00 00 00    	je     67b0 <stm_start_tx+0x120>
    6721:	8b 05 49 9d a0 00    	mov    0xa09d49(%rip),%eax        # a10470 <_tinystm+0x8002f0>
    6727:	85 c0                	test   %eax,%eax
    6729:	74 2b                	je     6756 <stm_start_tx+0xc6>
    672b:	48 8d 1d 4e 9a 20 00 	lea    0x209a4e(%rip),%rbx        # 210180 <_tinystm>
    6732:	eb 08                	jmp    673c <stm_start_tx+0xac>
    6734:	0f 1f 40 00          	nopl   0x0(%rax)
    6738:	41 83 c4 01          	add    $0x1,%r12d
    673c:	48 8b bb 00 03 80 00 	mov    0x800300(%rbx),%rdi
    6743:	ff 93 f8 02 80 00    	callq  *0x8002f8(%rbx)
    6749:	48 83 c3 10          	add    $0x10,%rbx
    674d:	44 3b 25 1c 9d a0 00 	cmp    0xa09d1c(%rip),%r12d        # a10470 <_tinystm+0x8002f0>
    6754:	72 e2                	jb     6738 <stm_start_tx+0xa8>
    6756:	48 89 e8             	mov    %rbp,%rax
    6759:	5b                   	pop    %rbx
    675a:	5d                   	pop    %rbp
    675b:	41 5c                	pop    %r12
    675d:	c3                   	retq   
    675e:	66 90                	xchg   %ax,%ax
    6760:	48 89 d3             	mov    %rdx,%rbx
    6763:	e8 98 d5 ff ff       	callq  3d00 <stm_quiesce_barrier.isra.0.constprop.1>
    6768:	48 8b 05 91 9a a0 00 	mov    0xa09a91(%rip),%rax        # a10200 <_tinystm+0x800080>
    676f:	48 39 d8             	cmp    %rbx,%rax
    6772:	48 89 85 e0 00 00 00 	mov    %rax,0xe0(%rbp)
    6779:	48 89 85 d8 00 00 00 	mov    %rax,0xd8(%rbp)
    6780:	0f 86 72 ff ff ff    	jbe    66f8 <stm_start_tx+0x68>
    6786:	eb db                	jmp    6763 <stm_start_tx+0xd3>
    6788:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    678f:	00 
    6790:	be ff ff ff ff       	mov    $0xffffffff,%esi
    6795:	48 89 ef             	mov    %rbp,%rdi
    6798:	e8 e3 e2 ff ff       	callq  4a80 <stm_set_irrevocable_tx>
    679d:	48 c7 85 d0 00 00 00 	movq   $0x9,0xd0(%rbp)
    67a4:	09 00 00 00 
    67a8:	e9 63 ff ff ff       	jmpq   6710 <stm_start_tx+0x80>
    67ad:	0f 1f 00             	nopl   (%rax)
    67b0:	f6 85 10 01 00 00 08 	testb  $0x8,0x110(%rbp)
    67b7:	0f 85 64 ff ff ff    	jne    6721 <stm_start_tx+0x91>
    67bd:	48 8b 95 d0 00 00 00 	mov    0xd0(%rbp),%rdx
    67c4:	48 c7 85 d0 00 00 00 	movq   $0x0,0xd0(%rbp)
    67cb:	00 00 00 00 
    67cf:	90                   	nop
    67d0:	48 8b 05 89 9e a0 00 	mov    0xa09e89(%rip),%rax        # a10660 <_tinystm+0x8004e0>
    67d7:	48 83 f8 02          	cmp    $0x2,%rax
    67db:	74 f3                	je     67d0 <stm_start_tx+0x140>
    67dd:	48 89 95 d0 00 00 00 	mov    %rdx,0xd0(%rbp)
    67e4:	e9 38 ff ff ff       	jmpq   6721 <stm_start_tx+0x91>
    67e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    67f0:	31 c0                	xor    %eax,%eax
    67f2:	e9 62 ff ff ff       	jmpq   6759 <stm_start_tx+0xc9>
    67f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    67fe:	00 00 

0000000000006800 <stm_inc_clock>:
    6800:	b8 01 00 00 00       	mov    $0x1,%eax
    6805:	f0 48 0f c1 05 f2 99 	lock xadd %rax,0xa099f2(%rip)        # a10200 <_tinystm+0x800080>
    680c:	a0 00 
    680e:	c3                   	retq   
    680f:	90                   	nop

0000000000006810 <rollover_clock>:
    6810:	48 8d 3d 69 99 20 00 	lea    0x209969(%rip),%rdi        # 210180 <_tinystm>
    6817:	ba 00 00 80 00       	mov    $0x800000,%edx
    681c:	31 f6                	xor    %esi,%esi
    681e:	48 c7 05 d7 99 a0 00 	movq   $0x0,0xa099d7(%rip)        # a10200 <_tinystm+0x800080>
    6825:	00 00 00 00 
    6829:	e9 72 aa ff ff       	jmpq   12a0 <memset@plt>
    682e:	66 90                	xchg   %ax,%ax

0000000000006830 <stm_allocate_ws_entries.constprop.2>:
    6830:	53                   	push   %rbx
    6831:	8b 87 04 01 00 00    	mov    0x104(%rdi),%eax
    6837:	48 89 fb             	mov    %rdi,%rbx
    683a:	8d 34 00             	lea    (%rax,%rax,1),%esi
    683d:	89 b7 04 01 00 00    	mov    %esi,0x104(%rdi)
    6843:	48 8b bf f8 00 00 00 	mov    0xf8(%rdi),%rdi
    684a:	48 c1 e6 06          	shl    $0x6,%rsi
    684e:	e8 2d ab ff ff       	callq  1380 <realloc@plt>
    6853:	48 85 c0             	test   %rax,%rax
    6856:	74 10                	je     6868 <stm_allocate_ws_entries.constprop.2+0x38>
    6858:	48 89 83 f8 00 00 00 	mov    %rax,0xf8(%rbx)
    685f:	5b                   	pop    %rbx
    6860:	c3                   	retq   
    6861:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6868:	48 8d 3d d1 6b 00 00 	lea    0x6bd1(%rip),%rdi        # d440 <__PRETTY_FUNCTION__.3065+0x28>
    686f:	e8 7c ab ff ff       	callq  13f0 <perror@plt>
    6874:	bf 01 00 00 00       	mov    $0x1,%edi
    6879:	e8 b2 ab ff ff       	callq  1430 <exit@plt>
    687e:	66 90                	xchg   %ax,%ax

0000000000006880 <stm_allocate_rs_entries.constprop.3>:
    6880:	53                   	push   %rbx
    6881:	8b 87 f4 00 00 00    	mov    0xf4(%rdi),%eax
    6887:	48 89 fb             	mov    %rdi,%rbx
    688a:	8d 34 00             	lea    (%rax,%rax,1),%esi
    688d:	89 b7 f4 00 00 00    	mov    %esi,0xf4(%rdi)
    6893:	48 8b bf e8 00 00 00 	mov    0xe8(%rdi),%rdi
    689a:	48 c1 e6 04          	shl    $0x4,%rsi
    689e:	e8 dd aa ff ff       	callq  1380 <realloc@plt>
    68a3:	48 85 c0             	test   %rax,%rax
    68a6:	74 10                	je     68b8 <stm_allocate_rs_entries.constprop.3+0x38>
    68a8:	48 89 83 e8 00 00 00 	mov    %rax,0xe8(%rbx)
    68af:	5b                   	pop    %rbx
    68b0:	c3                   	retq   
    68b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    68b8:	48 8d 3d 81 6b 00 00 	lea    0x6b81(%rip),%rdi        # d440 <__PRETTY_FUNCTION__.3065+0x28>
    68bf:	e8 2c ab ff ff       	callq  13f0 <perror@plt>
    68c4:	bf 01 00 00 00       	mov    $0x1,%edi
    68c9:	e8 62 ab ff ff       	callq  1430 <exit@plt>
    68ce:	66 90                	xchg   %ax,%ax

00000000000068d0 <stm_rollback>:
    68d0:	41 55                	push   %r13
    68d2:	41 54                	push   %r12
    68d4:	41 89 f5             	mov    %esi,%r13d
    68d7:	55                   	push   %rbp
    68d8:	53                   	push   %rbx
    68d9:	49 89 fc             	mov    %rdi,%r12
    68dc:	48 83 ec 08          	sub    $0x8,%rsp
    68e0:	8b 97 00 01 00 00    	mov    0x100(%rdi),%edx
    68e6:	85 d2                	test   %edx,%edx
    68e8:	7e 4b                	jle    6935 <stm_rollback+0x65>
    68ea:	48 8b 8f f8 00 00 00 	mov    0xf8(%rdi),%rcx
    68f1:	83 ea 01             	sub    $0x1,%edx
    68f4:	48 c1 e2 06          	shl    $0x6,%rdx
    68f8:	48 8d 41 18          	lea    0x18(%rcx),%rax
    68fc:	48 8d 4c 11 58       	lea    0x58(%rcx,%rdx,1),%rcx
    6901:	eb 0e                	jmp    6911 <stm_rollback+0x41>
    6903:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6908:	48 83 c0 40          	add    $0x40,%rax
    690c:	48 39 c8             	cmp    %rcx,%rax
    690f:	74 21                	je     6932 <stm_rollback+0x62>
    6911:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    6916:	75 f0                	jne    6908 <stm_rollback+0x38>
    6918:	ba 04 00 00 00       	mov    $0x4,%edx
    691d:	c4 e2 e9 f7 10       	shlx   %rdx,(%rax),%rdx
    6922:	48 8b 70 08          	mov    0x8(%rax),%rsi
    6926:	48 83 c0 40          	add    $0x40,%rax
    692a:	48 39 c8             	cmp    %rcx,%rax
    692d:	48 89 16             	mov    %rdx,(%rsi)
    6930:	75 df                	jne    6911 <stm_rollback+0x41>
    6932:	0f ae f0             	mfence 
    6935:	41 81 fd 40 0c 00 00 	cmp    $0xc40,%r13d
    693c:	49 c7 84 24 d0 00 00 	movq   $0x4,0xd0(%r12)
    6943:	00 04 00 00 00 
    6948:	0f 84 02 01 00 00    	je     6a50 <stm_rollback+0x180>
    694e:	41 c7 84 24 14 01 00 	movl   $0x1,0x114(%r12)
    6955:	00 01 00 00 00 
    695a:	8b 05 78 9c a0 00    	mov    0xa09c78(%rip),%eax        # a105d8 <_tinystm+0x800458>
    6960:	85 c0                	test   %eax,%eax
    6962:	74 28                	je     698c <stm_rollback+0xbc>
    6964:	48 8d 1d 15 98 20 00 	lea    0x209815(%rip),%rbx        # 210180 <_tinystm>
    696b:	31 ed                	xor    %ebp,%ebp
    696d:	0f 1f 00             	nopl   (%rax)
    6970:	48 8b bb 68 04 80 00 	mov    0x800468(%rbx),%rdi
    6977:	83 c5 01             	add    $0x1,%ebp
    697a:	ff 93 60 04 80 00    	callq  *0x800460(%rbx)
    6980:	48 83 c3 10          	add    $0x10,%rbx
    6984:	39 2d 4e 9c a0 00    	cmp    %ebp,0xa09c4e(%rip)        # a105d8 <_tinystm+0x800458>
    698a:	77 e4                	ja     6970 <stm_rollback+0xa0>
    698c:	41 f6 84 24 ca 00 00 	testb  $0x4,0xca(%r12)
    6993:	00 04 
    6995:	0f 85 95 00 00 00    	jne    6a30 <stm_rollback+0x160>
    699b:	41 c7 84 24 08 01 00 	movl   $0x0,0x108(%r12)
    69a2:	00 00 00 00 00 
    69a7:	41 c7 84 24 00 01 00 	movl   $0x0,0x100(%r12)
    69ae:	00 00 00 00 00 
    69b3:	48 bb fe df ff ff ff 	movabs $0xfffffffffffdffe,%rbx
    69ba:	ff ff 0f 
    69bd:	41 c7 84 24 f0 00 00 	movl   $0x0,0xf0(%r12)
    69c4:	00 00 00 00 00 
    69c9:	48 8b 05 30 98 a0 00 	mov    0xa09830(%rip),%rax        # a10200 <_tinystm+0x800080>
    69d0:	48 39 d8             	cmp    %rbx,%rax
    69d3:	49 89 84 24 e0 00 00 	mov    %rax,0xe0(%r12)
    69da:	00 
    69db:	49 89 84 24 d8 00 00 	mov    %rax,0xd8(%r12)
    69e2:	00 
    69e3:	77 78                	ja     6a5d <stm_rollback+0x18d>
    69e5:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
    69ec:	00 0f 
    69ee:	75 77                	jne    6a67 <stm_rollback+0x197>
    69f0:	49 c7 84 24 d0 00 00 	movq   $0x1,0xd0(%r12)
    69f7:	00 01 00 00 00 
    69fc:	48 8b 05 5d 9c a0 00 	mov    0xa09c5d(%rip),%rax        # a10660 <_tinystm+0x8004e0>
    6a03:	48 83 f8 02          	cmp    $0x2,%rax
    6a07:	41 0f b6 84 24 10 01 	movzbl 0x110(%r12),%eax
    6a0e:	00 00 
    6a10:	74 71                	je     6a83 <stm_rollback+0x1b3>
    6a12:	83 e0 0f             	and    $0xf,%eax
    6a15:	4c 89 e7             	mov    %r12,%rdi
    6a18:	3c 0b                	cmp    $0xb,%al
    6a1a:	0f 94 c0             	sete   %al
    6a1d:	0f b6 c0             	movzbl %al,%eax
    6a20:	83 c0 01             	add    $0x1,%eax
    6a23:	44 09 e8             	or     %r13d,%eax
    6a26:	89 c6                	mov    %eax,%esi
    6a28:	e8 83 a9 ff ff       	callq  13b0 <__longjmp_chk@plt>
    6a2d:	0f 1f 00             	nopl   (%rax)
    6a30:	41 c7 84 24 14 01 00 	movl   $0x0,0x114(%r12)
    6a37:	00 00 00 00 00 
    6a3c:	48 83 c4 08          	add    $0x8,%rsp
    6a40:	5b                   	pop    %rbx
    6a41:	5d                   	pop    %rbp
    6a42:	41 5c                	pop    %r12
    6a44:	41 5d                	pop    %r13
    6a46:	c3                   	retq   
    6a47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6a4e:	00 00 
    6a50:	4c 89 e7             	mov    %r12,%rdi
    6a53:	e8 d8 fd ff ff       	callq  6830 <stm_allocate_ws_entries.constprop.2>
    6a58:	e9 f1 fe ff ff       	jmpq   694e <stm_rollback+0x7e>
    6a5d:	e8 5e aa ff ff       	callq  14c0 <stm_quiesce_barrier.isra.0.constprop.1>
    6a62:	e9 62 ff ff ff       	jmpq   69c9 <stm_rollback+0xf9>
    6a67:	83 ce ff             	or     $0xffffffff,%esi
    6a6a:	4c 89 e7             	mov    %r12,%rdi
    6a6d:	e8 0e e0 ff ff       	callq  4a80 <stm_set_irrevocable_tx>
    6a72:	49 c7 84 24 d0 00 00 	movq   $0x9,0xd0(%r12)
    6a79:	00 09 00 00 00 
    6a7e:	e9 79 ff ff ff       	jmpq   69fc <stm_rollback+0x12c>
    6a83:	a8 08                	test   $0x8,%al
    6a85:	75 8b                	jne    6a12 <stm_rollback+0x142>
    6a87:	49 8b 84 24 d0 00 00 	mov    0xd0(%r12),%rax
    6a8e:	00 
    6a8f:	49 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%r12)
    6a96:	00 00 00 00 00 
    6a9b:	48 8b 15 be 9b a0 00 	mov    0xa09bbe(%rip),%rdx        # a10660 <_tinystm+0x8004e0>
    6aa2:	48 83 fa 02          	cmp    $0x2,%rdx
    6aa6:	74 f3                	je     6a9b <stm_rollback+0x1cb>
    6aa8:	49 89 84 24 d0 00 00 	mov    %rax,0xd0(%r12)
    6aaf:	00 
    6ab0:	41 0f b6 84 24 10 01 	movzbl 0x110(%r12),%eax
    6ab7:	00 00 
    6ab9:	e9 54 ff ff ff       	jmpq   6a12 <stm_rollback+0x142>
    6abe:	66 90                	xchg   %ax,%ax

0000000000006ac0 <stm_load_u8>:
    6ac0:	41 56                	push   %r14
    6ac2:	41 55                	push   %r13
    6ac4:	48 89 fe             	mov    %rdi,%rsi
    6ac7:	41 54                	push   %r12
    6ac9:	55                   	push   %rbp
    6aca:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    6ace:	53                   	push   %rbx
    6acf:	48 89 f3             	mov    %rsi,%rbx
    6ad2:	49 89 fc             	mov    %rdi,%r12
    6ad5:	48 c1 eb 02          	shr    $0x2,%rbx
    6ad9:	48 bf fe df ff ff ff 	movabs $0xfffffffffffdffe,%rdi
    6ae0:	ff ff 0f 
    6ae3:	48 83 ec 10          	sub    $0x10,%rsp
    6ae7:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    6aee:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
    6af4:	64 48 8b 28          	mov    %fs:(%rax),%rbp
    6af8:	48 8d 05 81 96 20 00 	lea    0x209681(%rip),%rax        # 210180 <_tinystm>
    6aff:	48 01 c3             	add    %rax,%rbx
    6b02:	48 8b 03             	mov    (%rbx),%rax
    6b05:	a8 01                	test   $0x1,%al
    6b07:	0f 85 b3 00 00 00    	jne    6bc0 <stm_load_u8+0x100>
    6b0d:	4c 8b 2e             	mov    (%rsi),%r13
    6b10:	48 8b 13             	mov    (%rbx),%rdx
    6b13:	48 39 d0             	cmp    %rdx,%rax
    6b16:	0f 85 8f 00 00 00    	jne    6bab <stm_load_u8+0xeb>
    6b1c:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    6b23:	75 52                	jne    6b77 <stm_load_u8+0xb7>
    6b25:	0f b6 95 ca 00 00 00 	movzbl 0xca(%rbp),%edx
    6b2c:	49 89 c6             	mov    %rax,%r14
    6b2f:	49 c1 ee 04          	shr    $0x4,%r14
    6b33:	83 e2 01             	and    $0x1,%edx
    6b36:	4c 3b b5 e0 00 00 00 	cmp    0xe0(%rbp),%r14
    6b3d:	0f 87 d5 00 00 00    	ja     6c18 <stm_load_u8+0x158>
    6b43:	84 d2                	test   %dl,%dl
    6b45:	75 30                	jne    6b77 <stm_load_u8+0xb7>
    6b47:	8b 85 f0 00 00 00    	mov    0xf0(%rbp),%eax
    6b4d:	3b 85 f4 00 00 00    	cmp    0xf4(%rbp),%eax
    6b53:	0f 84 57 01 00 00    	je     6cb0 <stm_load_u8+0x1f0>
    6b59:	48 8b 95 e8 00 00 00 	mov    0xe8(%rbp),%rdx
    6b60:	8d 48 01             	lea    0x1(%rax),%ecx
    6b63:	48 c1 e0 04          	shl    $0x4,%rax
    6b67:	89 8d f0 00 00 00    	mov    %ecx,0xf0(%rbp)
    6b6d:	48 01 d0             	add    %rdx,%rax
    6b70:	4c 89 30             	mov    %r14,(%rax)
    6b73:	48 89 58 08          	mov    %rbx,0x8(%rax)
    6b77:	41 83 e4 07          	and    $0x7,%r12d
    6b7b:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
    6b80:	42 0f b6 44 24 08    	movzbl 0x8(%rsp,%r12,1),%eax
    6b86:	48 83 c4 10          	add    $0x10,%rsp
    6b8a:	5b                   	pop    %rbx
    6b8b:	5d                   	pop    %rbp
    6b8c:	41 5c                	pop    %r12
    6b8e:	41 5d                	pop    %r13
    6b90:	41 5e                	pop    %r14
    6b92:	c3                   	retq   
    6b93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6b98:	4c 89 95 e0 00 00 00 	mov    %r10,0xe0(%rbp)
    6b9f:	48 8b 13             	mov    (%rbx),%rdx
    6ba2:	48 39 d0             	cmp    %rdx,%rax
    6ba5:	0f 84 26 01 00 00    	je     6cd1 <stm_load_u8+0x211>
    6bab:	48 89 d0             	mov    %rdx,%rax
    6bae:	a8 01                	test   $0x1,%al
    6bb0:	0f 84 57 ff ff ff    	je     6b0d <stm_load_u8+0x4d>
    6bb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6bbd:	00 00 00 
    6bc0:	48 8b 95 f8 00 00 00 	mov    0xf8(%rbp),%rdx
    6bc7:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    6bcb:	48 39 d0             	cmp    %rdx,%rax
    6bce:	0f 82 0c 01 00 00    	jb     6ce0 <stm_load_u8+0x220>
    6bd4:	8b 8d 00 01 00 00    	mov    0x100(%rbp),%ecx
    6bda:	48 c1 e1 06          	shl    $0x6,%rcx
    6bde:	48 01 ca             	add    %rcx,%rdx
    6be1:	48 39 d0             	cmp    %rdx,%rax
    6be4:	72 13                	jb     6bf9 <stm_load_u8+0x139>
    6be6:	e9 f5 00 00 00       	jmpq   6ce0 <stm_load_u8+0x220>
    6beb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6bf0:	48 8b 40 28          	mov    0x28(%rax),%rax
    6bf4:	48 85 c0             	test   %rax,%rax
    6bf7:	74 10                	je     6c09 <stm_load_u8+0x149>
    6bf9:	48 3b 30             	cmp    (%rax),%rsi
    6bfc:	75 f2                	jne    6bf0 <stm_load_u8+0x130>
    6bfe:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    6c03:	0f 85 bf 00 00 00    	jne    6cc8 <stm_load_u8+0x208>
    6c09:	4c 8b 2e             	mov    (%rsi),%r13
    6c0c:	e9 66 ff ff ff       	jmpq   6b77 <stm_load_u8+0xb7>
    6c11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6c18:	84 d2                	test   %dl,%dl
    6c1a:	75 79                	jne    6c95 <stm_load_u8+0x1d5>
    6c1c:	4c 8b 15 dd 95 a0 00 	mov    0xa095dd(%rip),%r10        # a10200 <_tinystm+0x800080>
    6c23:	49 39 fa             	cmp    %rdi,%r10
    6c26:	77 6d                	ja     6c95 <stm_load_u8+0x1d5>
    6c28:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
    6c2e:	48 8b 8d e8 00 00 00 	mov    0xe8(%rbp),%rcx
    6c35:	85 d2                	test   %edx,%edx
    6c37:	0f 8e 5b ff ff ff    	jle    6b98 <stm_load_u8+0xd8>
    6c3d:	44 8d 4a ff          	lea    -0x1(%rdx),%r9d
    6c41:	49 83 c1 01          	add    $0x1,%r9
    6c45:	49 c1 e1 04          	shl    $0x4,%r9
    6c49:	49 01 c9             	add    %rcx,%r9
    6c4c:	eb 32                	jmp    6c80 <stm_load_u8+0x1c0>
    6c4e:	66 90                	xchg   %ax,%ax
    6c50:	4c 8b 85 f8 00 00 00 	mov    0xf8(%rbp),%r8
    6c57:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
    6c5b:	4c 39 c2             	cmp    %r8,%rdx
    6c5e:	72 35                	jb     6c95 <stm_load_u8+0x1d5>
    6c60:	44 8b 9d 00 01 00 00 	mov    0x100(%rbp),%r11d
    6c67:	49 c1 e3 06          	shl    $0x6,%r11
    6c6b:	4d 01 d8             	add    %r11,%r8
    6c6e:	4c 39 c2             	cmp    %r8,%rdx
    6c71:	73 22                	jae    6c95 <stm_load_u8+0x1d5>
    6c73:	48 83 c1 10          	add    $0x10,%rcx
    6c77:	49 39 c9             	cmp    %rcx,%r9
    6c7a:	0f 84 18 ff ff ff    	je     6b98 <stm_load_u8+0xd8>
    6c80:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    6c84:	48 8b 12             	mov    (%rdx),%rdx
    6c87:	f6 c2 01             	test   $0x1,%dl
    6c8a:	75 c4                	jne    6c50 <stm_load_u8+0x190>
    6c8c:	48 c1 ea 04          	shr    $0x4,%rdx
    6c90:	48 3b 11             	cmp    (%rcx),%rdx
    6c93:	74 de                	je     6c73 <stm_load_u8+0x1b3>
    6c95:	be 40 05 00 00       	mov    $0x540,%esi
    6c9a:	48 89 ef             	mov    %rbp,%rdi
    6c9d:	45 31 ed             	xor    %r13d,%r13d
    6ca0:	e8 2b fc ff ff       	callq  68d0 <stm_rollback>
    6ca5:	e9 cd fe ff ff       	jmpq   6b77 <stm_load_u8+0xb7>
    6caa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6cb0:	48 89 ef             	mov    %rbp,%rdi
    6cb3:	e8 c8 fb ff ff       	callq  6880 <stm_allocate_rs_entries.constprop.3>
    6cb8:	8b 85 f0 00 00 00    	mov    0xf0(%rbp),%eax
    6cbe:	e9 96 fe ff ff       	jmpq   6b59 <stm_load_u8+0x99>
    6cc3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6cc8:	4c 8b 68 08          	mov    0x8(%rax),%r13
    6ccc:	e9 a6 fe ff ff       	jmpq   6b77 <stm_load_u8+0xb7>
    6cd1:	0f b6 95 ca 00 00 00 	movzbl 0xca(%rbp),%edx
    6cd8:	83 e2 01             	and    $0x1,%edx
    6cdb:	e9 63 fe ff ff       	jmpq   6b43 <stm_load_u8+0x83>
    6ce0:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    6ce7:	0f 85 15 fe ff ff    	jne    6b02 <stm_load_u8+0x42>
    6ced:	be 40 02 00 00       	mov    $0x240,%esi
    6cf2:	48 89 ef             	mov    %rbp,%rdi
    6cf5:	45 31 ed             	xor    %r13d,%r13d
    6cf8:	e8 d3 fb ff ff       	callq  68d0 <stm_rollback>
    6cfd:	e9 75 fe ff ff       	jmpq   6b77 <stm_load_u8+0xb7>
    6d02:	0f 1f 40 00          	nopl   0x0(%rax)
    6d06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6d0d:	00 00 00 

0000000000006d10 <stm_load_char>:
    6d10:	41 56                	push   %r14
    6d12:	41 55                	push   %r13
    6d14:	48 89 fe             	mov    %rdi,%rsi
    6d17:	41 54                	push   %r12
    6d19:	55                   	push   %rbp
    6d1a:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    6d1e:	53                   	push   %rbx
    6d1f:	48 89 f3             	mov    %rsi,%rbx
    6d22:	49 89 fc             	mov    %rdi,%r12
    6d25:	48 c1 eb 02          	shr    $0x2,%rbx
    6d29:	48 bf fe df ff ff ff 	movabs $0xfffffffffffdffe,%rdi
    6d30:	ff ff 0f 
    6d33:	48 83 ec 10          	sub    $0x10,%rsp
    6d37:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    6d3e:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
    6d44:	64 48 8b 28          	mov    %fs:(%rax),%rbp
    6d48:	48 8d 05 31 94 20 00 	lea    0x209431(%rip),%rax        # 210180 <_tinystm>
    6d4f:	48 01 c3             	add    %rax,%rbx
    6d52:	48 8b 03             	mov    (%rbx),%rax
    6d55:	a8 01                	test   $0x1,%al
    6d57:	0f 85 b3 00 00 00    	jne    6e10 <stm_load_char+0x100>
    6d5d:	4c 8b 2e             	mov    (%rsi),%r13
    6d60:	48 8b 13             	mov    (%rbx),%rdx
    6d63:	48 39 d0             	cmp    %rdx,%rax
    6d66:	0f 85 8f 00 00 00    	jne    6dfb <stm_load_char+0xeb>
    6d6c:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    6d73:	75 52                	jne    6dc7 <stm_load_char+0xb7>
    6d75:	0f b6 95 ca 00 00 00 	movzbl 0xca(%rbp),%edx
    6d7c:	49 89 c6             	mov    %rax,%r14
    6d7f:	49 c1 ee 04          	shr    $0x4,%r14
    6d83:	83 e2 01             	and    $0x1,%edx
    6d86:	4c 3b b5 e0 00 00 00 	cmp    0xe0(%rbp),%r14
    6d8d:	0f 87 d5 00 00 00    	ja     6e68 <stm_load_char+0x158>
    6d93:	84 d2                	test   %dl,%dl
    6d95:	75 30                	jne    6dc7 <stm_load_char+0xb7>
    6d97:	8b 85 f0 00 00 00    	mov    0xf0(%rbp),%eax
    6d9d:	3b 85 f4 00 00 00    	cmp    0xf4(%rbp),%eax
    6da3:	0f 84 57 01 00 00    	je     6f00 <stm_load_char+0x1f0>
    6da9:	48 8b 95 e8 00 00 00 	mov    0xe8(%rbp),%rdx
    6db0:	8d 48 01             	lea    0x1(%rax),%ecx
    6db3:	48 c1 e0 04          	shl    $0x4,%rax
    6db7:	89 8d f0 00 00 00    	mov    %ecx,0xf0(%rbp)
    6dbd:	48 01 d0             	add    %rdx,%rax
    6dc0:	4c 89 30             	mov    %r14,(%rax)
    6dc3:	48 89 58 08          	mov    %rbx,0x8(%rax)
    6dc7:	41 83 e4 07          	and    $0x7,%r12d
    6dcb:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
    6dd0:	42 0f b6 44 24 08    	movzbl 0x8(%rsp,%r12,1),%eax
    6dd6:	48 83 c4 10          	add    $0x10,%rsp
    6dda:	5b                   	pop    %rbx
    6ddb:	5d                   	pop    %rbp
    6ddc:	41 5c                	pop    %r12
    6dde:	41 5d                	pop    %r13
    6de0:	41 5e                	pop    %r14
    6de2:	c3                   	retq   
    6de3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6de8:	4c 89 95 e0 00 00 00 	mov    %r10,0xe0(%rbp)
    6def:	48 8b 13             	mov    (%rbx),%rdx
    6df2:	48 39 d0             	cmp    %rdx,%rax
    6df5:	0f 84 26 01 00 00    	je     6f21 <stm_load_char+0x211>
    6dfb:	48 89 d0             	mov    %rdx,%rax
    6dfe:	a8 01                	test   $0x1,%al
    6e00:	0f 84 57 ff ff ff    	je     6d5d <stm_load_char+0x4d>
    6e06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6e0d:	00 00 00 
    6e10:	48 8b 95 f8 00 00 00 	mov    0xf8(%rbp),%rdx
    6e17:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    6e1b:	48 39 d0             	cmp    %rdx,%rax
    6e1e:	0f 82 0c 01 00 00    	jb     6f30 <stm_load_char+0x220>
    6e24:	8b 8d 00 01 00 00    	mov    0x100(%rbp),%ecx
    6e2a:	48 c1 e1 06          	shl    $0x6,%rcx
    6e2e:	48 01 ca             	add    %rcx,%rdx
    6e31:	48 39 d0             	cmp    %rdx,%rax
    6e34:	72 13                	jb     6e49 <stm_load_char+0x139>
    6e36:	e9 f5 00 00 00       	jmpq   6f30 <stm_load_char+0x220>
    6e3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6e40:	48 8b 40 28          	mov    0x28(%rax),%rax
    6e44:	48 85 c0             	test   %rax,%rax
    6e47:	74 10                	je     6e59 <stm_load_char+0x149>
    6e49:	48 3b 30             	cmp    (%rax),%rsi
    6e4c:	75 f2                	jne    6e40 <stm_load_char+0x130>
    6e4e:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    6e53:	0f 85 bf 00 00 00    	jne    6f18 <stm_load_char+0x208>
    6e59:	4c 8b 2e             	mov    (%rsi),%r13
    6e5c:	e9 66 ff ff ff       	jmpq   6dc7 <stm_load_char+0xb7>
    6e61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6e68:	84 d2                	test   %dl,%dl
    6e6a:	75 79                	jne    6ee5 <stm_load_char+0x1d5>
    6e6c:	4c 8b 15 8d 93 a0 00 	mov    0xa0938d(%rip),%r10        # a10200 <_tinystm+0x800080>
    6e73:	49 39 fa             	cmp    %rdi,%r10
    6e76:	77 6d                	ja     6ee5 <stm_load_char+0x1d5>
    6e78:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
    6e7e:	48 8b 8d e8 00 00 00 	mov    0xe8(%rbp),%rcx
    6e85:	85 d2                	test   %edx,%edx
    6e87:	0f 8e 5b ff ff ff    	jle    6de8 <stm_load_char+0xd8>
    6e8d:	44 8d 4a ff          	lea    -0x1(%rdx),%r9d
    6e91:	49 83 c1 01          	add    $0x1,%r9
    6e95:	49 c1 e1 04          	shl    $0x4,%r9
    6e99:	49 01 c9             	add    %rcx,%r9
    6e9c:	eb 32                	jmp    6ed0 <stm_load_char+0x1c0>
    6e9e:	66 90                	xchg   %ax,%ax
    6ea0:	4c 8b 85 f8 00 00 00 	mov    0xf8(%rbp),%r8
    6ea7:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
    6eab:	4c 39 c2             	cmp    %r8,%rdx
    6eae:	72 35                	jb     6ee5 <stm_load_char+0x1d5>
    6eb0:	44 8b 9d 00 01 00 00 	mov    0x100(%rbp),%r11d
    6eb7:	49 c1 e3 06          	shl    $0x6,%r11
    6ebb:	4d 01 d8             	add    %r11,%r8
    6ebe:	4c 39 c2             	cmp    %r8,%rdx
    6ec1:	73 22                	jae    6ee5 <stm_load_char+0x1d5>
    6ec3:	48 83 c1 10          	add    $0x10,%rcx
    6ec7:	49 39 c9             	cmp    %rcx,%r9
    6eca:	0f 84 18 ff ff ff    	je     6de8 <stm_load_char+0xd8>
    6ed0:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    6ed4:	48 8b 12             	mov    (%rdx),%rdx
    6ed7:	f6 c2 01             	test   $0x1,%dl
    6eda:	75 c4                	jne    6ea0 <stm_load_char+0x190>
    6edc:	48 c1 ea 04          	shr    $0x4,%rdx
    6ee0:	48 3b 11             	cmp    (%rcx),%rdx
    6ee3:	74 de                	je     6ec3 <stm_load_char+0x1b3>
    6ee5:	be 40 05 00 00       	mov    $0x540,%esi
    6eea:	48 89 ef             	mov    %rbp,%rdi
    6eed:	45 31 ed             	xor    %r13d,%r13d
    6ef0:	e8 db f9 ff ff       	callq  68d0 <stm_rollback>
    6ef5:	e9 cd fe ff ff       	jmpq   6dc7 <stm_load_char+0xb7>
    6efa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6f00:	48 89 ef             	mov    %rbp,%rdi
    6f03:	e8 78 f9 ff ff       	callq  6880 <stm_allocate_rs_entries.constprop.3>
    6f08:	8b 85 f0 00 00 00    	mov    0xf0(%rbp),%eax
    6f0e:	e9 96 fe ff ff       	jmpq   6da9 <stm_load_char+0x99>
    6f13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6f18:	4c 8b 68 08          	mov    0x8(%rax),%r13
    6f1c:	e9 a6 fe ff ff       	jmpq   6dc7 <stm_load_char+0xb7>
    6f21:	0f b6 95 ca 00 00 00 	movzbl 0xca(%rbp),%edx
    6f28:	83 e2 01             	and    $0x1,%edx
    6f2b:	e9 63 fe ff ff       	jmpq   6d93 <stm_load_char+0x83>
    6f30:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    6f37:	0f 85 15 fe ff ff    	jne    6d52 <stm_load_char+0x42>
    6f3d:	be 40 02 00 00       	mov    $0x240,%esi
    6f42:	48 89 ef             	mov    %rbp,%rdi
    6f45:	45 31 ed             	xor    %r13d,%r13d
    6f48:	e8 83 f9 ff ff       	callq  68d0 <stm_rollback>
    6f4d:	e9 75 fe ff ff       	jmpq   6dc7 <stm_load_char+0xb7>
    6f52:	0f 1f 40 00          	nopl   0x0(%rax)
    6f56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6f5d:	00 00 00 

0000000000006f60 <stm_load_uchar>:
    6f60:	e9 5b fb ff ff       	jmpq   6ac0 <stm_load_u8>
    6f65:	90                   	nop
    6f66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6f6d:	00 00 00 

0000000000006f70 <stm_load_ptr>:
    6f70:	41 55                	push   %r13
    6f72:	41 54                	push   %r12
    6f74:	49 b9 fe df ff ff ff 	movabs $0xfffffffffffdffe,%r9
    6f7b:	ff ff 0f 
    6f7e:	55                   	push   %rbp
    6f7f:	53                   	push   %rbx
    6f80:	48 89 fb             	mov    %rdi,%rbx
    6f83:	48 c1 eb 02          	shr    $0x2,%rbx
    6f87:	48 83 ec 18          	sub    $0x18,%rsp
    6f8b:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    6f92:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
    6f98:	64 48 8b 28          	mov    %fs:(%rax),%rbp
    6f9c:	48 8d 05 dd 91 20 00 	lea    0x2091dd(%rip),%rax        # 210180 <_tinystm>
    6fa3:	48 01 c3             	add    %rax,%rbx
    6fa6:	48 8b 13             	mov    (%rbx),%rdx
    6fa9:	f6 c2 01             	test   $0x1,%dl
    6fac:	0f 85 9e 00 00 00    	jne    7050 <stm_load_ptr+0xe0>
    6fb2:	48 8b 07             	mov    (%rdi),%rax
    6fb5:	48 8b 0b             	mov    (%rbx),%rcx
    6fb8:	48 39 ca             	cmp    %rcx,%rdx
    6fbb:	75 7e                	jne    703b <stm_load_ptr+0xcb>
    6fbd:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    6fc4:	75 52                	jne    7018 <stm_load_ptr+0xa8>
    6fc6:	0f b6 8d ca 00 00 00 	movzbl 0xca(%rbp),%ecx
    6fcd:	49 89 d4             	mov    %rdx,%r12
    6fd0:	49 c1 ec 04          	shr    $0x4,%r12
    6fd4:	83 e1 01             	and    $0x1,%ecx
    6fd7:	4c 3b a5 e0 00 00 00 	cmp    0xe0(%rbp),%r12
    6fde:	0f 87 c4 00 00 00    	ja     70a8 <stm_load_ptr+0x138>
    6fe4:	84 c9                	test   %cl,%cl
    6fe6:	75 30                	jne    7018 <stm_load_ptr+0xa8>
    6fe8:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
    6fee:	3b 95 f4 00 00 00    	cmp    0xf4(%rbp),%edx
    6ff4:	0f 84 46 01 00 00    	je     7140 <stm_load_ptr+0x1d0>
    6ffa:	48 8b 8d e8 00 00 00 	mov    0xe8(%rbp),%rcx
    7001:	8d 72 01             	lea    0x1(%rdx),%esi
    7004:	48 c1 e2 04          	shl    $0x4,%rdx
    7008:	89 b5 f0 00 00 00    	mov    %esi,0xf0(%rbp)
    700e:	48 01 ca             	add    %rcx,%rdx
    7011:	4c 89 22             	mov    %r12,(%rdx)
    7014:	48 89 5a 08          	mov    %rbx,0x8(%rdx)
    7018:	48 83 c4 18          	add    $0x18,%rsp
    701c:	5b                   	pop    %rbx
    701d:	5d                   	pop    %rbp
    701e:	41 5c                	pop    %r12
    7020:	41 5d                	pop    %r13
    7022:	c3                   	retq   
    7023:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7028:	4c 89 9d e0 00 00 00 	mov    %r11,0xe0(%rbp)
    702f:	48 8b 0b             	mov    (%rbx),%rcx
    7032:	48 39 ca             	cmp    %rcx,%rdx
    7035:	0f 84 2e 01 00 00    	je     7169 <stm_load_ptr+0x1f9>
    703b:	48 89 ca             	mov    %rcx,%rdx
    703e:	f6 c2 01             	test   $0x1,%dl
    7041:	0f 84 6b ff ff ff    	je     6fb2 <stm_load_ptr+0x42>
    7047:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    704e:	00 00 
    7050:	48 8b 85 f8 00 00 00 	mov    0xf8(%rbp),%rax
    7057:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
    705b:	48 39 c2             	cmp    %rax,%rdx
    705e:	0f 82 1c 01 00 00    	jb     7180 <stm_load_ptr+0x210>
    7064:	8b 8d 00 01 00 00    	mov    0x100(%rbp),%ecx
    706a:	48 c1 e1 06          	shl    $0x6,%rcx
    706e:	48 01 c8             	add    %rcx,%rax
    7071:	48 39 c2             	cmp    %rax,%rdx
    7074:	72 13                	jb     7089 <stm_load_ptr+0x119>
    7076:	e9 05 01 00 00       	jmpq   7180 <stm_load_ptr+0x210>
    707b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7080:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    7084:	48 85 d2             	test   %rdx,%rdx
    7087:	74 10                	je     7099 <stm_load_ptr+0x129>
    7089:	48 3b 3a             	cmp    (%rdx),%rdi
    708c:	75 f2                	jne    7080 <stm_load_ptr+0x110>
    708e:	48 83 7a 10 00       	cmpq   $0x0,0x10(%rdx)
    7093:	0f 85 c7 00 00 00    	jne    7160 <stm_load_ptr+0x1f0>
    7099:	48 8b 07             	mov    (%rdi),%rax
    709c:	e9 77 ff ff ff       	jmpq   7018 <stm_load_ptr+0xa8>
    70a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    70a8:	84 c9                	test   %cl,%cl
    70aa:	75 79                	jne    7125 <stm_load_ptr+0x1b5>
    70ac:	4c 8b 1d 4d 91 a0 00 	mov    0xa0914d(%rip),%r11        # a10200 <_tinystm+0x800080>
    70b3:	4d 39 cb             	cmp    %r9,%r11
    70b6:	77 6d                	ja     7125 <stm_load_ptr+0x1b5>
    70b8:	8b 8d f0 00 00 00    	mov    0xf0(%rbp),%ecx
    70be:	48 8b b5 e8 00 00 00 	mov    0xe8(%rbp),%rsi
    70c5:	85 c9                	test   %ecx,%ecx
    70c7:	0f 8e 5b ff ff ff    	jle    7028 <stm_load_ptr+0xb8>
    70cd:	44 8d 51 ff          	lea    -0x1(%rcx),%r10d
    70d1:	49 83 c2 01          	add    $0x1,%r10
    70d5:	49 c1 e2 04          	shl    $0x4,%r10
    70d9:	49 01 f2             	add    %rsi,%r10
    70dc:	eb 32                	jmp    7110 <stm_load_ptr+0x1a0>
    70de:	66 90                	xchg   %ax,%ax
    70e0:	4c 8b 85 f8 00 00 00 	mov    0xf8(%rbp),%r8
    70e7:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    70eb:	4c 39 c1             	cmp    %r8,%rcx
    70ee:	72 35                	jb     7125 <stm_load_ptr+0x1b5>
    70f0:	44 8b ad 00 01 00 00 	mov    0x100(%rbp),%r13d
    70f7:	49 c1 e5 06          	shl    $0x6,%r13
    70fb:	4d 01 e8             	add    %r13,%r8
    70fe:	4c 39 c1             	cmp    %r8,%rcx
    7101:	73 22                	jae    7125 <stm_load_ptr+0x1b5>
    7103:	48 83 c6 10          	add    $0x10,%rsi
    7107:	4c 39 d6             	cmp    %r10,%rsi
    710a:	0f 84 18 ff ff ff    	je     7028 <stm_load_ptr+0xb8>
    7110:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    7114:	48 8b 09             	mov    (%rcx),%rcx
    7117:	f6 c1 01             	test   $0x1,%cl
    711a:	75 c4                	jne    70e0 <stm_load_ptr+0x170>
    711c:	48 c1 e9 04          	shr    $0x4,%rcx
    7120:	48 3b 0e             	cmp    (%rsi),%rcx
    7123:	74 de                	je     7103 <stm_load_ptr+0x193>
    7125:	be 40 05 00 00       	mov    $0x540,%esi
    712a:	48 89 ef             	mov    %rbp,%rdi
    712d:	e8 9e f7 ff ff       	callq  68d0 <stm_rollback>
    7132:	31 c0                	xor    %eax,%eax
    7134:	e9 df fe ff ff       	jmpq   7018 <stm_load_ptr+0xa8>
    7139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7140:	48 89 ef             	mov    %rbp,%rdi
    7143:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7148:	e8 33 f7 ff ff       	callq  6880 <stm_allocate_rs_entries.constprop.3>
    714d:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
    7153:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7158:	e9 9d fe ff ff       	jmpq   6ffa <stm_load_ptr+0x8a>
    715d:	0f 1f 00             	nopl   (%rax)
    7160:	48 8b 42 08          	mov    0x8(%rdx),%rax
    7164:	e9 af fe ff ff       	jmpq   7018 <stm_load_ptr+0xa8>
    7169:	0f b6 8d ca 00 00 00 	movzbl 0xca(%rbp),%ecx
    7170:	83 e1 01             	and    $0x1,%ecx
    7173:	e9 6c fe ff ff       	jmpq   6fe4 <stm_load_ptr+0x74>
    7178:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    717f:	00 
    7180:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    7187:	0f 85 19 fe ff ff    	jne    6fa6 <stm_load_ptr+0x36>
    718d:	be 40 02 00 00       	mov    $0x240,%esi
    7192:	48 89 ef             	mov    %rbp,%rdi
    7195:	e8 36 f7 ff ff       	callq  68d0 <stm_rollback>
    719a:	31 c0                	xor    %eax,%eax
    719c:	e9 77 fe ff ff       	jmpq   7018 <stm_load_ptr+0xa8>
    71a1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    71a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    71ad:	00 00 00 

00000000000071b0 <stm_load_bytes>:
    71b0:	48 85 d2             	test   %rdx,%rdx
    71b3:	0f 84 07 02 00 00    	je     73c0 <stm_load_bytes+0x210>
    71b9:	41 57                	push   %r15
    71bb:	41 56                	push   %r14
    71bd:	49 89 fb             	mov    %rdi,%r11
    71c0:	41 55                	push   %r13
    71c2:	41 54                	push   %r12
    71c4:	49 89 f7             	mov    %rsi,%r15
    71c7:	55                   	push   %rbp
    71c8:	53                   	push   %rbx
    71c9:	89 fb                	mov    %edi,%ebx
    71cb:	49 89 d5             	mov    %rdx,%r13
    71ce:	48 83 ec 58          	sub    $0x58,%rsp
    71d2:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    71d9:	83 e3 07             	and    $0x7,%ebx
    71dc:	64 48 8b 28          	mov    %fs:(%rax),%rbp
    71e0:	0f 85 e2 01 00 00    	jne    73c8 <stm_load_bytes+0x218>
    71e6:	48 8d 05 93 8f 20 00 	lea    0x208f93(%rip),%rax        # 210180 <_tinystm>
    71ed:	48 83 fa 07          	cmp    $0x7,%rdx
    71f1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    71f6:	0f 86 fa 00 00 00    	jbe    72f6 <stm_load_bytes+0x146>
    71fc:	49 8d 45 f8          	lea    -0x8(%r13),%rax
    7200:	4d 89 fe             	mov    %r15,%r14
    7203:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
    7208:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
    720d:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
    7212:	4d 89 dc             	mov    %r11,%r12
    7215:	48 c1 e8 03          	shr    $0x3,%rax
    7219:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    721e:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    7223:	49 8d 44 c3 08       	lea    0x8(%r11,%rax,8),%rax
    7228:	49 89 c5             	mov    %rax,%r13
    722b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7230:	4c 89 e3             	mov    %r12,%rbx
    7233:	48 c1 eb 02          	shr    $0x2,%rbx
    7237:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
    723d:	4c 01 fb             	add    %r15,%rbx
    7240:	48 8b 03             	mov    (%rbx),%rax
    7243:	a8 01                	test   $0x1,%al
    7245:	0f 85 75 02 00 00    	jne    74c0 <stm_load_bytes+0x310>
    724b:	4d 8b 04 24          	mov    (%r12),%r8
    724f:	48 8b 13             	mov    (%rbx),%rdx
    7252:	48 39 d0             	cmp    %rdx,%rax
    7255:	0f 85 58 02 00 00    	jne    74b3 <stm_load_bytes+0x303>
    725b:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    7262:	75 4f                	jne    72b3 <stm_load_bytes+0x103>
    7264:	0f b6 95 ca 00 00 00 	movzbl 0xca(%rbp),%edx
    726b:	49 89 c1             	mov    %rax,%r9
    726e:	49 c1 e9 04          	shr    $0x4,%r9
    7272:	83 e2 01             	and    $0x1,%edx
    7275:	4c 3b 8d e0 00 00 00 	cmp    0xe0(%rbp),%r9
    727c:	0f 87 9e 02 00 00    	ja     7520 <stm_load_bytes+0x370>
    7282:	84 d2                	test   %dl,%dl
    7284:	75 2d                	jne    72b3 <stm_load_bytes+0x103>
    7286:	8b 85 f0 00 00 00    	mov    0xf0(%rbp),%eax
    728c:	3b 85 f4 00 00 00    	cmp    0xf4(%rbp),%eax
    7292:	0f 84 30 03 00 00    	je     75c8 <stm_load_bytes+0x418>
    7298:	8d 50 01             	lea    0x1(%rax),%edx
    729b:	48 c1 e0 04          	shl    $0x4,%rax
    729f:	48 03 85 e8 00 00 00 	add    0xe8(%rbp),%rax
    72a6:	89 95 f0 00 00 00    	mov    %edx,0xf0(%rbp)
    72ac:	4c 89 08             	mov    %r9,(%rax)
    72af:	48 89 58 08          	mov    %rbx,0x8(%rax)
    72b3:	49 83 c4 08          	add    $0x8,%r12
    72b7:	4d 89 06             	mov    %r8,(%r14)
    72ba:	49 83 c6 08          	add    $0x8,%r14
    72be:	4d 39 e5             	cmp    %r12,%r13
    72c1:	0f 85 69 ff ff ff    	jne    7230 <stm_load_bytes+0x80>
    72c7:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    72cc:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    72d1:	4c 8b 7c 24 20       	mov    0x20(%rsp),%r15
    72d6:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
    72db:	48 8d 04 c5 08 00 00 	lea    0x8(,%rax,8),%rax
    72e2:	00 
    72e3:	41 83 e5 07          	and    $0x7,%r13d
    72e7:	49 01 c3             	add    %rax,%r11
    72ea:	49 01 c7             	add    %rax,%r15
    72ed:	4d 85 ed             	test   %r13,%r13
    72f0:	0f 84 b3 00 00 00    	je     73a9 <stm_load_bytes+0x1f9>
    72f6:	4c 89 db             	mov    %r11,%rbx
    72f9:	48 bf fe df ff ff ff 	movabs $0xfffffffffffdffe,%rdi
    7300:	ff ff 0f 
    7303:	48 c1 eb 02          	shr    $0x2,%rbx
    7307:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
    730d:	48 03 5c 24 08       	add    0x8(%rsp),%rbx
    7312:	48 8b 03             	mov    (%rbx),%rax
    7315:	a8 01                	test   $0x1,%al
    7317:	0f 85 e3 03 00 00    	jne    7700 <stm_load_bytes+0x550>
    731d:	4d 8b 23             	mov    (%r11),%r12
    7320:	48 8b 13             	mov    (%rbx),%rdx
    7323:	48 39 d0             	cmp    %rdx,%rax
    7326:	0f 85 fc 02 00 00    	jne    7628 <stm_load_bytes+0x478>
    732c:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    7333:	75 52                	jne    7387 <stm_load_bytes+0x1d7>
    7335:	0f b6 95 ca 00 00 00 	movzbl 0xca(%rbp),%edx
    733c:	49 89 c6             	mov    %rax,%r14
    733f:	49 c1 ee 04          	shr    $0x4,%r14
    7343:	83 e2 01             	and    $0x1,%edx
    7346:	4c 3b b5 e0 00 00 00 	cmp    0xe0(%rbp),%r14
    734d:	0f 87 5b 04 00 00    	ja     77ae <stm_load_bytes+0x5fe>
    7353:	84 d2                	test   %dl,%dl
    7355:	75 30                	jne    7387 <stm_load_bytes+0x1d7>
    7357:	8b 85 f0 00 00 00    	mov    0xf0(%rbp),%eax
    735d:	3b 85 f4 00 00 00    	cmp    0xf4(%rbp),%eax
    7363:	0f 84 f7 04 00 00    	je     7860 <stm_load_bytes+0x6b0>
    7369:	48 8b 95 e8 00 00 00 	mov    0xe8(%rbp),%rdx
    7370:	8d 48 01             	lea    0x1(%rax),%ecx
    7373:	48 c1 e0 04          	shl    $0x4,%rax
    7377:	89 8d f0 00 00 00    	mov    %ecx,0xf0(%rbp)
    737d:	48 01 d0             	add    %rdx,%rax
    7380:	4c 89 30             	mov    %r14,(%rax)
    7383:	48 89 58 08          	mov    %rbx,0x8(%rax)
    7387:	48 8d 4c 24 48       	lea    0x48(%rsp),%rcx
    738c:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
    7391:	31 c0                	xor    %eax,%eax
    7393:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7398:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
    739c:	41 88 14 07          	mov    %dl,(%r15,%rax,1)
    73a0:	48 83 c0 01          	add    $0x1,%rax
    73a4:	49 39 c5             	cmp    %rax,%r13
    73a7:	75 ef                	jne    7398 <stm_load_bytes+0x1e8>
    73a9:	48 83 c4 58          	add    $0x58,%rsp
    73ad:	5b                   	pop    %rbx
    73ae:	5d                   	pop    %rbp
    73af:	41 5c                	pop    %r12
    73b1:	41 5d                	pop    %r13
    73b3:	41 5e                	pop    %r14
    73b5:	41 5f                	pop    %r15
    73b7:	c3                   	retq   
    73b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    73bf:	00 
    73c0:	f3 c3                	repz retq 
    73c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    73c8:	48 89 fa             	mov    %rdi,%rdx
    73cb:	48 8d 05 ae 8d 20 00 	lea    0x208dae(%rip),%rax        # 210180 <_tinystm>
    73d2:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    73d6:	49 89 d4             	mov    %rdx,%r12
    73d9:	4c 8d 5a 08          	lea    0x8(%rdx),%r11
    73dd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    73e2:	49 c1 ec 02          	shr    $0x2,%r12
    73e6:	41 81 e4 f8 ff 7f 00 	and    $0x7ffff8,%r12d
    73ed:	49 01 c4             	add    %rax,%r12
    73f0:	49 8b 04 24          	mov    (%r12),%rax
    73f4:	a8 01                	test   $0x1,%al
    73f6:	0f 85 5a 03 00 00    	jne    7756 <stm_load_bytes+0x5a6>
    73fc:	4c 8b 32             	mov    (%rdx),%r14
    73ff:	49 8b 0c 24          	mov    (%r12),%rcx
    7403:	48 39 c8             	cmp    %rcx,%rax
    7406:	0f 85 ec 02 00 00    	jne    76f8 <stm_load_bytes+0x548>
    740c:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    7413:	75 4f                	jne    7464 <stm_load_bytes+0x2b4>
    7415:	0f b6 8d ca 00 00 00 	movzbl 0xca(%rbp),%ecx
    741c:	49 89 c2             	mov    %rax,%r10
    741f:	49 c1 ea 04          	shr    $0x4,%r10
    7423:	83 e1 01             	and    $0x1,%ecx
    7426:	4c 3b 95 e0 00 00 00 	cmp    0xe0(%rbp),%r10
    742d:	0f 87 fd 01 00 00    	ja     7630 <stm_load_bytes+0x480>
    7433:	84 c9                	test   %cl,%cl
    7435:	75 2d                	jne    7464 <stm_load_bytes+0x2b4>
    7437:	8b 85 f0 00 00 00    	mov    0xf0(%rbp),%eax
    743d:	3b 85 f4 00 00 00    	cmp    0xf4(%rbp),%eax
    7443:	0f 84 57 04 00 00    	je     78a0 <stm_load_bytes+0x6f0>
    7449:	8d 50 01             	lea    0x1(%rax),%edx
    744c:	48 c1 e0 04          	shl    $0x4,%rax
    7450:	48 03 85 e8 00 00 00 	add    0xe8(%rbp),%rax
    7457:	89 95 f0 00 00 00    	mov    %edx,0xf0(%rbp)
    745d:	4c 89 10             	mov    %r10,(%rax)
    7460:	4c 89 60 08          	mov    %r12,0x8(%rax)
    7464:	4c 89 74 24 48       	mov    %r14,0x48(%rsp)
    7469:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7470:	89 d8                	mov    %ebx,%eax
    7472:	83 c3 01             	add    $0x1,%ebx
    7475:	49 83 c7 01          	add    $0x1,%r15
    7479:	0f b6 44 04 48       	movzbl 0x48(%rsp,%rax,1),%eax
    747e:	49 83 ed 01          	sub    $0x1,%r13
    7482:	83 fb 07             	cmp    $0x7,%ebx
    7485:	41 88 47 ff          	mov    %al,-0x1(%r15)
    7489:	77 05                	ja     7490 <stm_load_bytes+0x2e0>
    748b:	4d 85 ed             	test   %r13,%r13
    748e:	75 e0                	jne    7470 <stm_load_bytes+0x2c0>
    7490:	49 83 fd 07          	cmp    $0x7,%r13
    7494:	0f 87 62 fd ff ff    	ja     71fc <stm_load_bytes+0x4c>
    749a:	e9 4e fe ff ff       	jmpq   72ed <stm_load_bytes+0x13d>
    749f:	90                   	nop
    74a0:	48 89 bd e0 00 00 00 	mov    %rdi,0xe0(%rbp)
    74a7:	48 8b 13             	mov    (%rbx),%rdx
    74aa:	48 39 d0             	cmp    %rdx,%rax
    74ad:	0f 84 31 02 00 00    	je     76e4 <stm_load_bytes+0x534>
    74b3:	48 89 d0             	mov    %rdx,%rax
    74b6:	a8 01                	test   $0x1,%al
    74b8:	0f 84 8d fd ff ff    	je     724b <stm_load_bytes+0x9b>
    74be:	66 90                	xchg   %ax,%ax
    74c0:	48 8b 95 f8 00 00 00 	mov    0xf8(%rbp),%rdx
    74c7:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    74cb:	48 39 d0             	cmp    %rdx,%rax
    74ce:	0f 82 2c 01 00 00    	jb     7600 <stm_load_bytes+0x450>
    74d4:	8b 8d 00 01 00 00    	mov    0x100(%rbp),%ecx
    74da:	48 c1 e1 06          	shl    $0x6,%rcx
    74de:	48 01 ca             	add    %rcx,%rdx
    74e1:	48 39 d0             	cmp    %rdx,%rax
    74e4:	72 17                	jb     74fd <stm_load_bytes+0x34d>
    74e6:	e9 15 01 00 00       	jmpq   7600 <stm_load_bytes+0x450>
    74eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    74f0:	48 8b 40 28          	mov    0x28(%rax),%rax
    74f4:	48 85 c0             	test   %rax,%rax
    74f7:	0f 84 f3 00 00 00    	je     75f0 <stm_load_bytes+0x440>
    74fd:	4c 3b 20             	cmp    (%rax),%r12
    7500:	75 ee                	jne    74f0 <stm_load_bytes+0x340>
    7502:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    7507:	0f 84 e3 00 00 00    	je     75f0 <stm_load_bytes+0x440>
    750d:	4c 8b 40 08          	mov    0x8(%rax),%r8
    7511:	e9 9d fd ff ff       	jmpq   72b3 <stm_load_bytes+0x103>
    7516:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    751d:	00 00 00 
    7520:	84 d2                	test   %dl,%dl
    7522:	0f 85 85 00 00 00    	jne    75ad <stm_load_bytes+0x3fd>
    7528:	48 8b 3d d1 8c a0 00 	mov    0xa08cd1(%rip),%rdi        # a10200 <_tinystm+0x800080>
    752f:	48 be fe df ff ff ff 	movabs $0xfffffffffffdffe,%rsi
    7536:	ff ff 0f 
    7539:	48 39 f7             	cmp    %rsi,%rdi
    753c:	77 6f                	ja     75ad <stm_load_bytes+0x3fd>
    753e:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
    7544:	48 8b 8d e8 00 00 00 	mov    0xe8(%rbp),%rcx
    754b:	85 d2                	test   %edx,%edx
    754d:	0f 8e 4d ff ff ff    	jle    74a0 <stm_load_bytes+0x2f0>
    7553:	8d 72 ff             	lea    -0x1(%rdx),%esi
    7556:	48 83 c6 01          	add    $0x1,%rsi
    755a:	48 c1 e6 04          	shl    $0x4,%rsi
    755e:	48 01 ce             	add    %rcx,%rsi
    7561:	eb 35                	jmp    7598 <stm_load_bytes+0x3e8>
    7563:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7568:	4c 8b 95 f8 00 00 00 	mov    0xf8(%rbp),%r10
    756f:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
    7573:	4c 39 d2             	cmp    %r10,%rdx
    7576:	72 35                	jb     75ad <stm_load_bytes+0x3fd>
    7578:	44 8b 9d 00 01 00 00 	mov    0x100(%rbp),%r11d
    757f:	49 c1 e3 06          	shl    $0x6,%r11
    7583:	4d 01 da             	add    %r11,%r10
    7586:	4c 39 d2             	cmp    %r10,%rdx
    7589:	73 22                	jae    75ad <stm_load_bytes+0x3fd>
    758b:	48 83 c1 10          	add    $0x10,%rcx
    758f:	48 39 f1             	cmp    %rsi,%rcx
    7592:	0f 84 08 ff ff ff    	je     74a0 <stm_load_bytes+0x2f0>
    7598:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    759c:	48 8b 12             	mov    (%rdx),%rdx
    759f:	f6 c2 01             	test   $0x1,%dl
    75a2:	75 c4                	jne    7568 <stm_load_bytes+0x3b8>
    75a4:	48 c1 ea 04          	shr    $0x4,%rdx
    75a8:	48 3b 11             	cmp    (%rcx),%rdx
    75ab:	74 de                	je     758b <stm_load_bytes+0x3db>
    75ad:	be 40 05 00 00       	mov    $0x540,%esi
    75b2:	48 89 ef             	mov    %rbp,%rdi
    75b5:	e8 16 f3 ff ff       	callq  68d0 <stm_rollback>
    75ba:	45 31 c0             	xor    %r8d,%r8d
    75bd:	e9 f1 fc ff ff       	jmpq   72b3 <stm_load_bytes+0x103>
    75c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    75c8:	48 89 ef             	mov    %rbp,%rdi
    75cb:	4c 89 44 24 38       	mov    %r8,0x38(%rsp)
    75d0:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    75d5:	e8 a6 f2 ff ff       	callq  6880 <stm_allocate_rs_entries.constprop.3>
    75da:	8b 85 f0 00 00 00    	mov    0xf0(%rbp),%eax
    75e0:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
    75e5:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
    75ea:	e9 a9 fc ff ff       	jmpq   7298 <stm_load_bytes+0xe8>
    75ef:	90                   	nop
    75f0:	4d 8b 04 24          	mov    (%r12),%r8
    75f4:	e9 ba fc ff ff       	jmpq   72b3 <stm_load_bytes+0x103>
    75f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7600:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    7607:	0f 85 33 fc ff ff    	jne    7240 <stm_load_bytes+0x90>
    760d:	be 40 02 00 00       	mov    $0x240,%esi
    7612:	48 89 ef             	mov    %rbp,%rdi
    7615:	e8 b6 f2 ff ff       	callq  68d0 <stm_rollback>
    761a:	45 31 c0             	xor    %r8d,%r8d
    761d:	e9 91 fc ff ff       	jmpq   72b3 <stm_load_bytes+0x103>
    7622:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7628:	48 89 d0             	mov    %rdx,%rax
    762b:	e9 e5 fc ff ff       	jmpq   7315 <stm_load_bytes+0x165>
    7630:	84 c9                	test   %cl,%cl
    7632:	0f 85 8d 00 00 00    	jne    76c5 <stm_load_bytes+0x515>
    7638:	48 8b 3d c1 8b a0 00 	mov    0xa08bc1(%rip),%rdi        # a10200 <_tinystm+0x800080>
    763f:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    7644:	48 be fe df ff ff ff 	movabs $0xfffffffffffdffe,%rsi
    764b:	ff ff 0f 
    764e:	48 39 f7             	cmp    %rsi,%rdi
    7651:	77 72                	ja     76c5 <stm_load_bytes+0x515>
    7653:	8b 8d f0 00 00 00    	mov    0xf0(%rbp),%ecx
    7659:	48 8b b5 e8 00 00 00 	mov    0xe8(%rbp),%rsi
    7660:	85 c9                	test   %ecx,%ecx
    7662:	0f 8e 0b 02 00 00    	jle    7873 <stm_load_bytes+0x6c3>
    7668:	44 8d 49 ff          	lea    -0x1(%rcx),%r9d
    766c:	49 83 c1 01          	add    $0x1,%r9
    7670:	49 c1 e1 04          	shl    $0x4,%r9
    7674:	49 01 f1             	add    %rsi,%r9
    7677:	eb 37                	jmp    76b0 <stm_load_bytes+0x500>
    7679:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7680:	48 8b bd f8 00 00 00 	mov    0xf8(%rbp),%rdi
    7687:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    768b:	48 39 f9             	cmp    %rdi,%rcx
    768e:	72 35                	jb     76c5 <stm_load_bytes+0x515>
    7690:	44 8b 85 00 01 00 00 	mov    0x100(%rbp),%r8d
    7697:	49 c1 e0 06          	shl    $0x6,%r8
    769b:	4c 01 c7             	add    %r8,%rdi
    769e:	48 39 f9             	cmp    %rdi,%rcx
    76a1:	73 22                	jae    76c5 <stm_load_bytes+0x515>
    76a3:	48 83 c6 10          	add    $0x10,%rsi
    76a7:	4c 39 ce             	cmp    %r9,%rsi
    76aa:	0f 84 c3 01 00 00    	je     7873 <stm_load_bytes+0x6c3>
    76b0:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    76b4:	48 8b 09             	mov    (%rcx),%rcx
    76b7:	f6 c1 01             	test   $0x1,%cl
    76ba:	75 c4                	jne    7680 <stm_load_bytes+0x4d0>
    76bc:	48 c1 e9 04          	shr    $0x4,%rcx
    76c0:	48 3b 0e             	cmp    (%rsi),%rcx
    76c3:	74 de                	je     76a3 <stm_load_bytes+0x4f3>
    76c5:	be 40 05 00 00       	mov    $0x540,%esi
    76ca:	48 89 ef             	mov    %rbp,%rdi
    76cd:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
    76d2:	45 31 f6             	xor    %r14d,%r14d
    76d5:	e8 f6 f1 ff ff       	callq  68d0 <stm_rollback>
    76da:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
    76df:	e9 80 fd ff ff       	jmpq   7464 <stm_load_bytes+0x2b4>
    76e4:	0f b6 95 ca 00 00 00 	movzbl 0xca(%rbp),%edx
    76eb:	83 e2 01             	and    $0x1,%edx
    76ee:	e9 8f fb ff ff       	jmpq   7282 <stm_load_bytes+0xd2>
    76f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    76f8:	48 89 c8             	mov    %rcx,%rax
    76fb:	e9 f4 fc ff ff       	jmpq   73f4 <stm_load_bytes+0x244>
    7700:	48 8b 95 f8 00 00 00 	mov    0xf8(%rbp),%rdx
    7707:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    770b:	48 39 d0             	cmp    %rdx,%rax
    770e:	0f 82 c3 01 00 00    	jb     78d7 <stm_load_bytes+0x727>
    7714:	8b 8d 00 01 00 00    	mov    0x100(%rbp),%ecx
    771a:	48 c1 e1 06          	shl    $0x6,%rcx
    771e:	48 01 ca             	add    %rcx,%rdx
    7721:	48 39 d0             	cmp    %rdx,%rax
    7724:	72 17                	jb     773d <stm_load_bytes+0x58d>
    7726:	e9 ac 01 00 00       	jmpq   78d7 <stm_load_bytes+0x727>
    772b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7730:	48 8b 40 28          	mov    0x28(%rax),%rax
    7734:	48 85 c0             	test   %rax,%rax
    7737:	0f 84 8a 01 00 00    	je     78c7 <stm_load_bytes+0x717>
    773d:	4c 39 18             	cmp    %r11,(%rax)
    7740:	75 ee                	jne    7730 <stm_load_bytes+0x580>
    7742:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    7747:	0f 84 7a 01 00 00    	je     78c7 <stm_load_bytes+0x717>
    774d:	4c 8b 60 08          	mov    0x8(%rax),%r12
    7751:	e9 31 fc ff ff       	jmpq   7387 <stm_load_bytes+0x1d7>
    7756:	48 8b 8d f8 00 00 00 	mov    0xf8(%rbp),%rcx
    775d:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    7761:	48 39 c8             	cmp    %rcx,%rax
    7764:	0f 82 8f 01 00 00    	jb     78f9 <stm_load_bytes+0x749>
    776a:	8b b5 00 01 00 00    	mov    0x100(%rbp),%esi
    7770:	48 c1 e6 06          	shl    $0x6,%rsi
    7774:	48 01 f1             	add    %rsi,%rcx
    7777:	48 39 c8             	cmp    %rcx,%rax
    777a:	72 19                	jb     7795 <stm_load_bytes+0x5e5>
    777c:	e9 78 01 00 00       	jmpq   78f9 <stm_load_bytes+0x749>
    7781:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7788:	48 8b 40 28          	mov    0x28(%rax),%rax
    778c:	48 85 c0             	test   %rax,%rax
    778f:	0f 84 3a 01 00 00    	je     78cf <stm_load_bytes+0x71f>
    7795:	48 3b 10             	cmp    (%rax),%rdx
    7798:	75 ee                	jne    7788 <stm_load_bytes+0x5d8>
    779a:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    779f:	0f 84 2a 01 00 00    	je     78cf <stm_load_bytes+0x71f>
    77a5:	4c 8b 70 08          	mov    0x8(%rax),%r14
    77a9:	e9 b6 fc ff ff       	jmpq   7464 <stm_load_bytes+0x2b4>
    77ae:	84 d2                	test   %dl,%dl
    77b0:	75 6f                	jne    7821 <stm_load_bytes+0x671>
    77b2:	4c 8b 05 47 8a a0 00 	mov    0xa08a47(%rip),%r8        # a10200 <_tinystm+0x800080>
    77b9:	49 39 f8             	cmp    %rdi,%r8
    77bc:	77 63                	ja     7821 <stm_load_bytes+0x671>
    77be:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
    77c4:	48 8b 8d e8 00 00 00 	mov    0xe8(%rbp),%rcx
    77cb:	85 d2                	test   %edx,%edx
    77cd:	7e 67                	jle    7836 <stm_load_bytes+0x686>
    77cf:	8d 72 ff             	lea    -0x1(%rdx),%esi
    77d2:	48 83 c6 01          	add    $0x1,%rsi
    77d6:	48 c1 e6 04          	shl    $0x4,%rsi
    77da:	48 01 ce             	add    %rcx,%rsi
    77dd:	eb 2d                	jmp    780c <stm_load_bytes+0x65c>
    77df:	90                   	nop
    77e0:	4c 8b 8d f8 00 00 00 	mov    0xf8(%rbp),%r9
    77e7:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
    77eb:	4c 39 ca             	cmp    %r9,%rdx
    77ee:	72 31                	jb     7821 <stm_load_bytes+0x671>
    77f0:	44 8b 95 00 01 00 00 	mov    0x100(%rbp),%r10d
    77f7:	49 c1 e2 06          	shl    $0x6,%r10
    77fb:	4d 01 d1             	add    %r10,%r9
    77fe:	4c 39 ca             	cmp    %r9,%rdx
    7801:	73 1e                	jae    7821 <stm_load_bytes+0x671>
    7803:	48 83 c1 10          	add    $0x10,%rcx
    7807:	48 39 ce             	cmp    %rcx,%rsi
    780a:	74 2a                	je     7836 <stm_load_bytes+0x686>
    780c:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    7810:	48 8b 12             	mov    (%rdx),%rdx
    7813:	f6 c2 01             	test   $0x1,%dl
    7816:	75 c8                	jne    77e0 <stm_load_bytes+0x630>
    7818:	48 c1 ea 04          	shr    $0x4,%rdx
    781c:	48 3b 11             	cmp    (%rcx),%rdx
    781f:	74 e2                	je     7803 <stm_load_bytes+0x653>
    7821:	be 40 05 00 00       	mov    $0x540,%esi
    7826:	48 89 ef             	mov    %rbp,%rdi
    7829:	45 31 e4             	xor    %r12d,%r12d
    782c:	e8 9f f0 ff ff       	callq  68d0 <stm_rollback>
    7831:	e9 51 fb ff ff       	jmpq   7387 <stm_load_bytes+0x1d7>
    7836:	4c 89 85 e0 00 00 00 	mov    %r8,0xe0(%rbp)
    783d:	48 8b 13             	mov    (%rbx),%rdx
    7840:	48 39 d0             	cmp    %rdx,%rax
    7843:	0f 85 df fd ff ff    	jne    7628 <stm_load_bytes+0x478>
    7849:	0f b6 95 ca 00 00 00 	movzbl 0xca(%rbp),%edx
    7850:	83 e2 01             	and    $0x1,%edx
    7853:	e9 fb fa ff ff       	jmpq   7353 <stm_load_bytes+0x1a3>
    7858:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    785f:	00 
    7860:	48 89 ef             	mov    %rbp,%rdi
    7863:	e8 18 f0 ff ff       	callq  6880 <stm_allocate_rs_entries.constprop.3>
    7868:	8b 85 f0 00 00 00    	mov    0xf0(%rbp),%eax
    786e:	e9 f6 fa ff ff       	jmpq   7369 <stm_load_bytes+0x1b9>
    7873:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    7878:	48 89 bd e0 00 00 00 	mov    %rdi,0xe0(%rbp)
    787f:	49 8b 0c 24          	mov    (%r12),%rcx
    7883:	48 39 c8             	cmp    %rcx,%rax
    7886:	0f 85 6c fe ff ff    	jne    76f8 <stm_load_bytes+0x548>
    788c:	0f b6 8d ca 00 00 00 	movzbl 0xca(%rbp),%ecx
    7893:	83 e1 01             	and    $0x1,%ecx
    7896:	e9 98 fb ff ff       	jmpq   7433 <stm_load_bytes+0x283>
    789b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    78a0:	48 89 ef             	mov    %rbp,%rdi
    78a3:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    78a8:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    78ad:	e8 ce ef ff ff       	callq  6880 <stm_allocate_rs_entries.constprop.3>
    78b2:	8b 85 f0 00 00 00    	mov    0xf0(%rbp),%eax
    78b8:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    78bd:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    78c2:	e9 82 fb ff ff       	jmpq   7449 <stm_load_bytes+0x299>
    78c7:	4d 8b 23             	mov    (%r11),%r12
    78ca:	e9 b8 fa ff ff       	jmpq   7387 <stm_load_bytes+0x1d7>
    78cf:	4c 8b 32             	mov    (%rdx),%r14
    78d2:	e9 8d fb ff ff       	jmpq   7464 <stm_load_bytes+0x2b4>
    78d7:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    78de:	0f 85 2e fa ff ff    	jne    7312 <stm_load_bytes+0x162>
    78e4:	be 40 02 00 00       	mov    $0x240,%esi
    78e9:	48 89 ef             	mov    %rbp,%rdi
    78ec:	45 31 e4             	xor    %r12d,%r12d
    78ef:	e8 dc ef ff ff       	callq  68d0 <stm_rollback>
    78f4:	e9 8e fa ff ff       	jmpq   7387 <stm_load_bytes+0x1d7>
    78f9:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    7900:	0f 85 ea fa ff ff    	jne    73f0 <stm_load_bytes+0x240>
    7906:	be 40 02 00 00       	mov    $0x240,%esi
    790b:	48 89 ef             	mov    %rbp,%rdi
    790e:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
    7913:	45 31 f6             	xor    %r14d,%r14d
    7916:	e8 b5 ef ff ff       	callq  68d0 <stm_rollback>
    791b:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
    7920:	e9 3f fb ff ff       	jmpq   7464 <stm_load_bytes+0x2b4>
    7925:	90                   	nop
    7926:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    792d:	00 00 00 

0000000000007930 <stm_load_u16>:
    7930:	41 56                	push   %r14
    7932:	41 55                	push   %r13
    7934:	41 54                	push   %r12
    7936:	55                   	push   %rbp
    7937:	53                   	push   %rbx
    7938:	48 89 fb             	mov    %rdi,%rbx
    793b:	48 83 ec 10          	sub    $0x10,%rsp
    793f:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    7946:	83 e7 01             	and    $0x1,%edi
    7949:	64 4c 8b 20          	mov    %fs:(%rax),%r12
    794d:	0f 85 4d 01 00 00    	jne    7aa0 <stm_load_u16+0x170>
    7953:	48 89 de             	mov    %rbx,%rsi
    7956:	48 8d 05 23 88 20 00 	lea    0x208823(%rip),%rax        # 210180 <_tinystm>
    795d:	48 bf fe df ff ff ff 	movabs $0xfffffffffffdffe,%rdi
    7964:	ff ff 0f 
    7967:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    796b:	48 89 f5             	mov    %rsi,%rbp
    796e:	48 c1 ed 02          	shr    $0x2,%rbp
    7972:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    7978:	48 01 c5             	add    %rax,%rbp
    797b:	48 8b 45 00          	mov    0x0(%rbp),%rax
    797f:	a8 01                	test   $0x1,%al
    7981:	0f 85 b9 00 00 00    	jne    7a40 <stm_load_u16+0x110>
    7987:	4c 8b 2e             	mov    (%rsi),%r13
    798a:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    798e:	48 39 d0             	cmp    %rdx,%rax
    7991:	0f 85 9e 00 00 00    	jne    7a35 <stm_load_u16+0x105>
    7997:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
    799e:	00 0f 
    79a0:	75 5c                	jne    79fe <stm_load_u16+0xce>
    79a2:	41 0f b6 94 24 ca 00 	movzbl 0xca(%r12),%edx
    79a9:	00 00 
    79ab:	49 89 c6             	mov    %rax,%r14
    79ae:	49 c1 ee 04          	shr    $0x4,%r14
    79b2:	83 e2 01             	and    $0x1,%edx
    79b5:	4d 3b b4 24 e0 00 00 	cmp    0xe0(%r12),%r14
    79bc:	00 
    79bd:	0f 87 05 01 00 00    	ja     7ac8 <stm_load_u16+0x198>
    79c3:	84 d2                	test   %dl,%dl
    79c5:	75 37                	jne    79fe <stm_load_u16+0xce>
    79c7:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
    79ce:	00 
    79cf:	41 3b 84 24 f4 00 00 	cmp    0xf4(%r12),%eax
    79d6:	00 
    79d7:	0f 84 8b 01 00 00    	je     7b68 <stm_load_u16+0x238>
    79dd:	49 8b 94 24 e8 00 00 	mov    0xe8(%r12),%rdx
    79e4:	00 
    79e5:	8d 48 01             	lea    0x1(%rax),%ecx
    79e8:	48 c1 e0 04          	shl    $0x4,%rax
    79ec:	41 89 8c 24 f0 00 00 	mov    %ecx,0xf0(%r12)
    79f3:	00 
    79f4:	48 01 d0             	add    %rdx,%rax
    79f7:	4c 89 30             	mov    %r14,(%rax)
    79fa:	48 89 68 08          	mov    %rbp,0x8(%rax)
    79fe:	48 d1 eb             	shr    %rbx
    7a01:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
    7a06:	83 e3 03             	and    $0x3,%ebx
    7a09:	0f b7 44 5c 08       	movzwl 0x8(%rsp,%rbx,2),%eax
    7a0e:	48 83 c4 10          	add    $0x10,%rsp
    7a12:	5b                   	pop    %rbx
    7a13:	5d                   	pop    %rbp
    7a14:	41 5c                	pop    %r12
    7a16:	41 5d                	pop    %r13
    7a18:	41 5e                	pop    %r14
    7a1a:	c3                   	retq   
    7a1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7a20:	4d 89 94 24 e0 00 00 	mov    %r10,0xe0(%r12)
    7a27:	00 
    7a28:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    7a2c:	48 39 d0             	cmp    %rdx,%rax
    7a2f:	0f 84 53 01 00 00    	je     7b88 <stm_load_u16+0x258>
    7a35:	48 89 d0             	mov    %rdx,%rax
    7a38:	a8 01                	test   $0x1,%al
    7a3a:	0f 84 47 ff ff ff    	je     7987 <stm_load_u16+0x57>
    7a40:	49 8b 94 24 f8 00 00 	mov    0xf8(%r12),%rdx
    7a47:	00 
    7a48:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    7a4c:	48 39 d0             	cmp    %rdx,%rax
    7a4f:	0f 82 4b 01 00 00    	jb     7ba0 <stm_load_u16+0x270>
    7a55:	41 8b 8c 24 00 01 00 	mov    0x100(%r12),%ecx
    7a5c:	00 
    7a5d:	48 c1 e1 06          	shl    $0x6,%rcx
    7a61:	48 01 ca             	add    %rcx,%rdx
    7a64:	48 39 d0             	cmp    %rdx,%rax
    7a67:	72 14                	jb     7a7d <stm_load_u16+0x14d>
    7a69:	e9 32 01 00 00       	jmpq   7ba0 <stm_load_u16+0x270>
    7a6e:	66 90                	xchg   %ax,%ax
    7a70:	48 8b 40 28          	mov    0x28(%rax),%rax
    7a74:	48 85 c0             	test   %rax,%rax
    7a77:	0f 84 03 01 00 00    	je     7b80 <stm_load_u16+0x250>
    7a7d:	48 3b 30             	cmp    (%rax),%rsi
    7a80:	75 ee                	jne    7a70 <stm_load_u16+0x140>
    7a82:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    7a87:	0f 84 f3 00 00 00    	je     7b80 <stm_load_u16+0x250>
    7a8d:	4c 8b 68 08          	mov    0x8(%rax),%r13
    7a91:	e9 68 ff ff ff       	jmpq   79fe <stm_load_u16+0xce>
    7a96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7a9d:	00 00 00 
    7aa0:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    7aa5:	48 89 df             	mov    %rbx,%rdi
    7aa8:	ba 02 00 00 00       	mov    $0x2,%edx
    7aad:	e8 fe f6 ff ff       	callq  71b0 <stm_load_bytes>
    7ab2:	0f b7 44 24 08       	movzwl 0x8(%rsp),%eax
    7ab7:	48 83 c4 10          	add    $0x10,%rsp
    7abb:	5b                   	pop    %rbx
    7abc:	5d                   	pop    %rbp
    7abd:	41 5c                	pop    %r12
    7abf:	41 5d                	pop    %r13
    7ac1:	41 5e                	pop    %r14
    7ac3:	c3                   	retq   
    7ac4:	0f 1f 40 00          	nopl   0x0(%rax)
    7ac8:	84 d2                	test   %dl,%dl
    7aca:	0f 85 7f 00 00 00    	jne    7b4f <stm_load_u16+0x21f>
    7ad0:	4c 8b 15 29 87 a0 00 	mov    0xa08729(%rip),%r10        # a10200 <_tinystm+0x800080>
    7ad7:	49 39 fa             	cmp    %rdi,%r10
    7ada:	77 73                	ja     7b4f <stm_load_u16+0x21f>
    7adc:	41 8b 94 24 f0 00 00 	mov    0xf0(%r12),%edx
    7ae3:	00 
    7ae4:	49 8b 8c 24 e8 00 00 	mov    0xe8(%r12),%rcx
    7aeb:	00 
    7aec:	85 d2                	test   %edx,%edx
    7aee:	0f 8e 2c ff ff ff    	jle    7a20 <stm_load_u16+0xf0>
    7af4:	44 8d 4a ff          	lea    -0x1(%rdx),%r9d
    7af8:	49 83 c1 01          	add    $0x1,%r9
    7afc:	49 c1 e1 04          	shl    $0x4,%r9
    7b00:	49 01 c9             	add    %rcx,%r9
    7b03:	eb 35                	jmp    7b3a <stm_load_u16+0x20a>
    7b05:	0f 1f 00             	nopl   (%rax)
    7b08:	4d 8b 84 24 f8 00 00 	mov    0xf8(%r12),%r8
    7b0f:	00 
    7b10:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
    7b14:	4c 39 c2             	cmp    %r8,%rdx
    7b17:	72 36                	jb     7b4f <stm_load_u16+0x21f>
    7b19:	45 8b 9c 24 00 01 00 	mov    0x100(%r12),%r11d
    7b20:	00 
    7b21:	49 c1 e3 06          	shl    $0x6,%r11
    7b25:	4d 01 d8             	add    %r11,%r8
    7b28:	4c 39 c2             	cmp    %r8,%rdx
    7b2b:	73 22                	jae    7b4f <stm_load_u16+0x21f>
    7b2d:	48 83 c1 10          	add    $0x10,%rcx
    7b31:	49 39 c9             	cmp    %rcx,%r9
    7b34:	0f 84 e6 fe ff ff    	je     7a20 <stm_load_u16+0xf0>
    7b3a:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    7b3e:	48 8b 12             	mov    (%rdx),%rdx
    7b41:	f6 c2 01             	test   $0x1,%dl
    7b44:	75 c2                	jne    7b08 <stm_load_u16+0x1d8>
    7b46:	48 c1 ea 04          	shr    $0x4,%rdx
    7b4a:	48 3b 11             	cmp    (%rcx),%rdx
    7b4d:	74 de                	je     7b2d <stm_load_u16+0x1fd>
    7b4f:	be 40 05 00 00       	mov    $0x540,%esi
    7b54:	4c 89 e7             	mov    %r12,%rdi
    7b57:	45 31 ed             	xor    %r13d,%r13d
    7b5a:	e8 71 ed ff ff       	callq  68d0 <stm_rollback>
    7b5f:	e9 9a fe ff ff       	jmpq   79fe <stm_load_u16+0xce>
    7b64:	0f 1f 40 00          	nopl   0x0(%rax)
    7b68:	4c 89 e7             	mov    %r12,%rdi
    7b6b:	e8 10 ed ff ff       	callq  6880 <stm_allocate_rs_entries.constprop.3>
    7b70:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
    7b77:	00 
    7b78:	e9 60 fe ff ff       	jmpq   79dd <stm_load_u16+0xad>
    7b7d:	0f 1f 00             	nopl   (%rax)
    7b80:	4c 8b 2e             	mov    (%rsi),%r13
    7b83:	e9 76 fe ff ff       	jmpq   79fe <stm_load_u16+0xce>
    7b88:	41 0f b6 94 24 ca 00 	movzbl 0xca(%r12),%edx
    7b8f:	00 00 
    7b91:	83 e2 01             	and    $0x1,%edx
    7b94:	e9 2a fe ff ff       	jmpq   79c3 <stm_load_u16+0x93>
    7b99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7ba0:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
    7ba7:	00 0f 
    7ba9:	0f 85 cc fd ff ff    	jne    797b <stm_load_u16+0x4b>
    7baf:	be 40 02 00 00       	mov    $0x240,%esi
    7bb4:	4c 89 e7             	mov    %r12,%rdi
    7bb7:	45 31 ed             	xor    %r13d,%r13d
    7bba:	e8 11 ed ff ff       	callq  68d0 <stm_rollback>
    7bbf:	e9 3a fe ff ff       	jmpq   79fe <stm_load_u16+0xce>
    7bc4:	66 90                	xchg   %ax,%ax
    7bc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7bcd:	00 00 00 

0000000000007bd0 <stm_load_ushort>:
    7bd0:	e9 5b fd ff ff       	jmpq   7930 <stm_load_u16>
    7bd5:	90                   	nop
    7bd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7bdd:	00 00 00 

0000000000007be0 <stm_load_u32>:
    7be0:	41 56                	push   %r14
    7be2:	41 55                	push   %r13
    7be4:	41 54                	push   %r12
    7be6:	55                   	push   %rbp
    7be7:	53                   	push   %rbx
    7be8:	48 89 fb             	mov    %rdi,%rbx
    7beb:	48 83 ec 10          	sub    $0x10,%rsp
    7bef:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    7bf6:	83 e7 03             	and    $0x3,%edi
    7bf9:	64 4c 8b 20          	mov    %fs:(%rax),%r12
    7bfd:	0f 85 4d 01 00 00    	jne    7d50 <stm_load_u32+0x170>
    7c03:	48 89 de             	mov    %rbx,%rsi
    7c06:	48 8d 05 73 85 20 00 	lea    0x208573(%rip),%rax        # 210180 <_tinystm>
    7c0d:	48 bf fe df ff ff ff 	movabs $0xfffffffffffdffe,%rdi
    7c14:	ff ff 0f 
    7c17:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    7c1b:	48 89 f5             	mov    %rsi,%rbp
    7c1e:	48 c1 ed 02          	shr    $0x2,%rbp
    7c22:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    7c28:	48 01 c5             	add    %rax,%rbp
    7c2b:	48 8b 45 00          	mov    0x0(%rbp),%rax
    7c2f:	a8 01                	test   $0x1,%al
    7c31:	0f 85 b9 00 00 00    	jne    7cf0 <stm_load_u32+0x110>
    7c37:	4c 8b 2e             	mov    (%rsi),%r13
    7c3a:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    7c3e:	48 39 d0             	cmp    %rdx,%rax
    7c41:	0f 85 9e 00 00 00    	jne    7ce5 <stm_load_u32+0x105>
    7c47:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
    7c4e:	00 0f 
    7c50:	75 5c                	jne    7cae <stm_load_u32+0xce>
    7c52:	41 0f b6 94 24 ca 00 	movzbl 0xca(%r12),%edx
    7c59:	00 00 
    7c5b:	49 89 c6             	mov    %rax,%r14
    7c5e:	49 c1 ee 04          	shr    $0x4,%r14
    7c62:	83 e2 01             	and    $0x1,%edx
    7c65:	4d 3b b4 24 e0 00 00 	cmp    0xe0(%r12),%r14
    7c6c:	00 
    7c6d:	0f 87 05 01 00 00    	ja     7d78 <stm_load_u32+0x198>
    7c73:	84 d2                	test   %dl,%dl
    7c75:	75 37                	jne    7cae <stm_load_u32+0xce>
    7c77:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
    7c7e:	00 
    7c7f:	41 3b 84 24 f4 00 00 	cmp    0xf4(%r12),%eax
    7c86:	00 
    7c87:	0f 84 8b 01 00 00    	je     7e18 <stm_load_u32+0x238>
    7c8d:	49 8b 94 24 e8 00 00 	mov    0xe8(%r12),%rdx
    7c94:	00 
    7c95:	8d 48 01             	lea    0x1(%rax),%ecx
    7c98:	48 c1 e0 04          	shl    $0x4,%rax
    7c9c:	41 89 8c 24 f0 00 00 	mov    %ecx,0xf0(%r12)
    7ca3:	00 
    7ca4:	48 01 d0             	add    %rdx,%rax
    7ca7:	4c 89 30             	mov    %r14,(%rax)
    7caa:	48 89 68 08          	mov    %rbp,0x8(%rax)
    7cae:	48 c1 eb 02          	shr    $0x2,%rbx
    7cb2:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
    7cb7:	83 e3 01             	and    $0x1,%ebx
    7cba:	8b 44 9c 08          	mov    0x8(%rsp,%rbx,4),%eax
    7cbe:	48 83 c4 10          	add    $0x10,%rsp
    7cc2:	5b                   	pop    %rbx
    7cc3:	5d                   	pop    %rbp
    7cc4:	41 5c                	pop    %r12
    7cc6:	41 5d                	pop    %r13
    7cc8:	41 5e                	pop    %r14
    7cca:	c3                   	retq   
    7ccb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7cd0:	4d 89 94 24 e0 00 00 	mov    %r10,0xe0(%r12)
    7cd7:	00 
    7cd8:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    7cdc:	48 39 d0             	cmp    %rdx,%rax
    7cdf:	0f 84 53 01 00 00    	je     7e38 <stm_load_u32+0x258>
    7ce5:	48 89 d0             	mov    %rdx,%rax
    7ce8:	a8 01                	test   $0x1,%al
    7cea:	0f 84 47 ff ff ff    	je     7c37 <stm_load_u32+0x57>
    7cf0:	49 8b 94 24 f8 00 00 	mov    0xf8(%r12),%rdx
    7cf7:	00 
    7cf8:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    7cfc:	48 39 d0             	cmp    %rdx,%rax
    7cff:	0f 82 4b 01 00 00    	jb     7e50 <stm_load_u32+0x270>
    7d05:	41 8b 8c 24 00 01 00 	mov    0x100(%r12),%ecx
    7d0c:	00 
    7d0d:	48 c1 e1 06          	shl    $0x6,%rcx
    7d11:	48 01 ca             	add    %rcx,%rdx
    7d14:	48 39 d0             	cmp    %rdx,%rax
    7d17:	72 14                	jb     7d2d <stm_load_u32+0x14d>
    7d19:	e9 32 01 00 00       	jmpq   7e50 <stm_load_u32+0x270>
    7d1e:	66 90                	xchg   %ax,%ax
    7d20:	48 8b 40 28          	mov    0x28(%rax),%rax
    7d24:	48 85 c0             	test   %rax,%rax
    7d27:	0f 84 03 01 00 00    	je     7e30 <stm_load_u32+0x250>
    7d2d:	48 3b 30             	cmp    (%rax),%rsi
    7d30:	75 ee                	jne    7d20 <stm_load_u32+0x140>
    7d32:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    7d37:	0f 84 f3 00 00 00    	je     7e30 <stm_load_u32+0x250>
    7d3d:	4c 8b 68 08          	mov    0x8(%rax),%r13
    7d41:	e9 68 ff ff ff       	jmpq   7cae <stm_load_u32+0xce>
    7d46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7d4d:	00 00 00 
    7d50:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    7d55:	48 89 df             	mov    %rbx,%rdi
    7d58:	ba 04 00 00 00       	mov    $0x4,%edx
    7d5d:	e8 4e f4 ff ff       	callq  71b0 <stm_load_bytes>
    7d62:	8b 44 24 08          	mov    0x8(%rsp),%eax
    7d66:	48 83 c4 10          	add    $0x10,%rsp
    7d6a:	5b                   	pop    %rbx
    7d6b:	5d                   	pop    %rbp
    7d6c:	41 5c                	pop    %r12
    7d6e:	41 5d                	pop    %r13
    7d70:	41 5e                	pop    %r14
    7d72:	c3                   	retq   
    7d73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7d78:	84 d2                	test   %dl,%dl
    7d7a:	0f 85 7f 00 00 00    	jne    7dff <stm_load_u32+0x21f>
    7d80:	4c 8b 15 79 84 a0 00 	mov    0xa08479(%rip),%r10        # a10200 <_tinystm+0x800080>
    7d87:	49 39 fa             	cmp    %rdi,%r10
    7d8a:	77 73                	ja     7dff <stm_load_u32+0x21f>
    7d8c:	41 8b 94 24 f0 00 00 	mov    0xf0(%r12),%edx
    7d93:	00 
    7d94:	49 8b 8c 24 e8 00 00 	mov    0xe8(%r12),%rcx
    7d9b:	00 
    7d9c:	85 d2                	test   %edx,%edx
    7d9e:	0f 8e 2c ff ff ff    	jle    7cd0 <stm_load_u32+0xf0>
    7da4:	44 8d 4a ff          	lea    -0x1(%rdx),%r9d
    7da8:	49 83 c1 01          	add    $0x1,%r9
    7dac:	49 c1 e1 04          	shl    $0x4,%r9
    7db0:	49 01 c9             	add    %rcx,%r9
    7db3:	eb 35                	jmp    7dea <stm_load_u32+0x20a>
    7db5:	0f 1f 00             	nopl   (%rax)
    7db8:	4d 8b 84 24 f8 00 00 	mov    0xf8(%r12),%r8
    7dbf:	00 
    7dc0:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
    7dc4:	4c 39 c2             	cmp    %r8,%rdx
    7dc7:	72 36                	jb     7dff <stm_load_u32+0x21f>
    7dc9:	45 8b 9c 24 00 01 00 	mov    0x100(%r12),%r11d
    7dd0:	00 
    7dd1:	49 c1 e3 06          	shl    $0x6,%r11
    7dd5:	4d 01 d8             	add    %r11,%r8
    7dd8:	4c 39 c2             	cmp    %r8,%rdx
    7ddb:	73 22                	jae    7dff <stm_load_u32+0x21f>
    7ddd:	48 83 c1 10          	add    $0x10,%rcx
    7de1:	49 39 c9             	cmp    %rcx,%r9
    7de4:	0f 84 e6 fe ff ff    	je     7cd0 <stm_load_u32+0xf0>
    7dea:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    7dee:	48 8b 12             	mov    (%rdx),%rdx
    7df1:	f6 c2 01             	test   $0x1,%dl
    7df4:	75 c2                	jne    7db8 <stm_load_u32+0x1d8>
    7df6:	48 c1 ea 04          	shr    $0x4,%rdx
    7dfa:	48 3b 11             	cmp    (%rcx),%rdx
    7dfd:	74 de                	je     7ddd <stm_load_u32+0x1fd>
    7dff:	be 40 05 00 00       	mov    $0x540,%esi
    7e04:	4c 89 e7             	mov    %r12,%rdi
    7e07:	45 31 ed             	xor    %r13d,%r13d
    7e0a:	e8 c1 ea ff ff       	callq  68d0 <stm_rollback>
    7e0f:	e9 9a fe ff ff       	jmpq   7cae <stm_load_u32+0xce>
    7e14:	0f 1f 40 00          	nopl   0x0(%rax)
    7e18:	4c 89 e7             	mov    %r12,%rdi
    7e1b:	e8 60 ea ff ff       	callq  6880 <stm_allocate_rs_entries.constprop.3>
    7e20:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
    7e27:	00 
    7e28:	e9 60 fe ff ff       	jmpq   7c8d <stm_load_u32+0xad>
    7e2d:	0f 1f 00             	nopl   (%rax)
    7e30:	4c 8b 2e             	mov    (%rsi),%r13
    7e33:	e9 76 fe ff ff       	jmpq   7cae <stm_load_u32+0xce>
    7e38:	41 0f b6 94 24 ca 00 	movzbl 0xca(%r12),%edx
    7e3f:	00 00 
    7e41:	83 e2 01             	and    $0x1,%edx
    7e44:	e9 2a fe ff ff       	jmpq   7c73 <stm_load_u32+0x93>
    7e49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7e50:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
    7e57:	00 0f 
    7e59:	0f 85 cc fd ff ff    	jne    7c2b <stm_load_u32+0x4b>
    7e5f:	be 40 02 00 00       	mov    $0x240,%esi
    7e64:	4c 89 e7             	mov    %r12,%rdi
    7e67:	45 31 ed             	xor    %r13d,%r13d
    7e6a:	e8 61 ea ff ff       	callq  68d0 <stm_rollback>
    7e6f:	e9 3a fe ff ff       	jmpq   7cae <stm_load_u32+0xce>
    7e74:	66 90                	xchg   %ax,%ax
    7e76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7e7d:	00 00 00 

0000000000007e80 <stm_load_uint>:
    7e80:	e9 5b fd ff ff       	jmpq   7be0 <stm_load_u32>
    7e85:	90                   	nop
    7e86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7e8d:	00 00 00 

0000000000007e90 <stm_load_u64>:
    7e90:	41 55                	push   %r13
    7e92:	41 54                	push   %r12
    7e94:	55                   	push   %rbp
    7e95:	53                   	push   %rbx
    7e96:	48 83 ec 28          	sub    $0x28,%rsp
    7e9a:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    7ea1:	40 f6 c7 07          	test   $0x7,%dil
    7ea5:	64 48 8b 28          	mov    %fs:(%rax),%rbp
    7ea9:	0f 85 21 01 00 00    	jne    7fd0 <stm_load_u64+0x140>
    7eaf:	48 89 fb             	mov    %rdi,%rbx
    7eb2:	48 8d 05 c7 82 20 00 	lea    0x2082c7(%rip),%rax        # 210180 <_tinystm>
    7eb9:	49 b9 fe df ff ff ff 	movabs $0xfffffffffffdffe,%r9
    7ec0:	ff ff 0f 
    7ec3:	48 c1 eb 02          	shr    $0x2,%rbx
    7ec7:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
    7ecd:	48 01 c3             	add    %rax,%rbx
    7ed0:	48 8b 13             	mov    (%rbx),%rdx
    7ed3:	f6 c2 01             	test   $0x1,%dl
    7ed6:	0f 85 94 00 00 00    	jne    7f70 <stm_load_u64+0xe0>
    7edc:	48 8b 07             	mov    (%rdi),%rax
    7edf:	48 8b 0b             	mov    (%rbx),%rcx
    7ee2:	48 39 ca             	cmp    %rcx,%rdx
    7ee5:	75 7c                	jne    7f63 <stm_load_u64+0xd3>
    7ee7:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    7eee:	75 52                	jne    7f42 <stm_load_u64+0xb2>
    7ef0:	0f b6 8d ca 00 00 00 	movzbl 0xca(%rbp),%ecx
    7ef7:	49 89 d4             	mov    %rdx,%r12
    7efa:	49 c1 ec 04          	shr    $0x4,%r12
    7efe:	83 e1 01             	and    $0x1,%ecx
    7f01:	4c 3b a5 e0 00 00 00 	cmp    0xe0(%rbp),%r12
    7f08:	0f 87 e2 00 00 00    	ja     7ff0 <stm_load_u64+0x160>
    7f0e:	84 c9                	test   %cl,%cl
    7f10:	75 30                	jne    7f42 <stm_load_u64+0xb2>
    7f12:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
    7f18:	3b 95 f4 00 00 00    	cmp    0xf4(%rbp),%edx
    7f1e:	0f 84 6c 01 00 00    	je     8090 <stm_load_u64+0x200>
    7f24:	48 8b 8d e8 00 00 00 	mov    0xe8(%rbp),%rcx
    7f2b:	8d 72 01             	lea    0x1(%rdx),%esi
    7f2e:	48 c1 e2 04          	shl    $0x4,%rdx
    7f32:	89 b5 f0 00 00 00    	mov    %esi,0xf0(%rbp)
    7f38:	48 01 ca             	add    %rcx,%rdx
    7f3b:	4c 89 22             	mov    %r12,(%rdx)
    7f3e:	48 89 5a 08          	mov    %rbx,0x8(%rdx)
    7f42:	48 83 c4 28          	add    $0x28,%rsp
    7f46:	5b                   	pop    %rbx
    7f47:	5d                   	pop    %rbp
    7f48:	41 5c                	pop    %r12
    7f4a:	41 5d                	pop    %r13
    7f4c:	c3                   	retq   
    7f4d:	0f 1f 00             	nopl   (%rax)
    7f50:	4c 89 9d e0 00 00 00 	mov    %r11,0xe0(%rbp)
    7f57:	48 8b 0b             	mov    (%rbx),%rcx
    7f5a:	48 39 ca             	cmp    %rcx,%rdx
    7f5d:	0f 84 55 01 00 00    	je     80b8 <stm_load_u64+0x228>
    7f63:	48 89 ca             	mov    %rcx,%rdx
    7f66:	f6 c2 01             	test   $0x1,%dl
    7f69:	0f 84 6d ff ff ff    	je     7edc <stm_load_u64+0x4c>
    7f6f:	90                   	nop
    7f70:	48 8b 85 f8 00 00 00 	mov    0xf8(%rbp),%rax
    7f77:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
    7f7b:	48 39 c2             	cmp    %rax,%rdx
    7f7e:	0f 82 4c 01 00 00    	jb     80d0 <stm_load_u64+0x240>
    7f84:	8b 8d 00 01 00 00    	mov    0x100(%rbp),%ecx
    7f8a:	48 c1 e1 06          	shl    $0x6,%rcx
    7f8e:	48 01 c8             	add    %rcx,%rax
    7f91:	48 39 c2             	cmp    %rax,%rdx
    7f94:	72 17                	jb     7fad <stm_load_u64+0x11d>
    7f96:	e9 35 01 00 00       	jmpq   80d0 <stm_load_u64+0x240>
    7f9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7fa0:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    7fa4:	48 85 d2             	test   %rdx,%rdx
    7fa7:	0f 84 03 01 00 00    	je     80b0 <stm_load_u64+0x220>
    7fad:	48 3b 3a             	cmp    (%rdx),%rdi
    7fb0:	75 ee                	jne    7fa0 <stm_load_u64+0x110>
    7fb2:	48 83 7a 10 00       	cmpq   $0x0,0x10(%rdx)
    7fb7:	0f 84 f3 00 00 00    	je     80b0 <stm_load_u64+0x220>
    7fbd:	48 8b 42 08          	mov    0x8(%rdx),%rax
    7fc1:	e9 7c ff ff ff       	jmpq   7f42 <stm_load_u64+0xb2>
    7fc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7fcd:	00 00 00 
    7fd0:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    7fd5:	ba 08 00 00 00       	mov    $0x8,%edx
    7fda:	e8 d1 f1 ff ff       	callq  71b0 <stm_load_bytes>
    7fdf:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    7fe4:	48 83 c4 28          	add    $0x28,%rsp
    7fe8:	5b                   	pop    %rbx
    7fe9:	5d                   	pop    %rbp
    7fea:	41 5c                	pop    %r12
    7fec:	41 5d                	pop    %r13
    7fee:	c3                   	retq   
    7fef:	90                   	nop
    7ff0:	84 c9                	test   %cl,%cl
    7ff2:	0f 85 7d 00 00 00    	jne    8075 <stm_load_u64+0x1e5>
    7ff8:	4c 8b 1d 01 82 a0 00 	mov    0xa08201(%rip),%r11        # a10200 <_tinystm+0x800080>
    7fff:	4d 39 cb             	cmp    %r9,%r11
    8002:	77 71                	ja     8075 <stm_load_u64+0x1e5>
    8004:	8b 8d f0 00 00 00    	mov    0xf0(%rbp),%ecx
    800a:	48 8b b5 e8 00 00 00 	mov    0xe8(%rbp),%rsi
    8011:	85 c9                	test   %ecx,%ecx
    8013:	0f 8e 37 ff ff ff    	jle    7f50 <stm_load_u64+0xc0>
    8019:	44 8d 51 ff          	lea    -0x1(%rcx),%r10d
    801d:	49 83 c2 01          	add    $0x1,%r10
    8021:	49 c1 e2 04          	shl    $0x4,%r10
    8025:	49 01 f2             	add    %rsi,%r10
    8028:	eb 36                	jmp    8060 <stm_load_u64+0x1d0>
    802a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8030:	4c 8b 85 f8 00 00 00 	mov    0xf8(%rbp),%r8
    8037:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    803b:	4c 39 c1             	cmp    %r8,%rcx
    803e:	72 35                	jb     8075 <stm_load_u64+0x1e5>
    8040:	44 8b ad 00 01 00 00 	mov    0x100(%rbp),%r13d
    8047:	49 c1 e5 06          	shl    $0x6,%r13
    804b:	4d 01 e8             	add    %r13,%r8
    804e:	4c 39 c1             	cmp    %r8,%rcx
    8051:	73 22                	jae    8075 <stm_load_u64+0x1e5>
    8053:	48 83 c6 10          	add    $0x10,%rsi
    8057:	49 39 f2             	cmp    %rsi,%r10
    805a:	0f 84 f0 fe ff ff    	je     7f50 <stm_load_u64+0xc0>
    8060:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    8064:	48 8b 09             	mov    (%rcx),%rcx
    8067:	f6 c1 01             	test   $0x1,%cl
    806a:	75 c4                	jne    8030 <stm_load_u64+0x1a0>
    806c:	48 c1 e9 04          	shr    $0x4,%rcx
    8070:	48 3b 0e             	cmp    (%rsi),%rcx
    8073:	74 de                	je     8053 <stm_load_u64+0x1c3>
    8075:	be 40 05 00 00       	mov    $0x540,%esi
    807a:	48 89 ef             	mov    %rbp,%rdi
    807d:	e8 4e e8 ff ff       	callq  68d0 <stm_rollback>
    8082:	31 c0                	xor    %eax,%eax
    8084:	e9 b9 fe ff ff       	jmpq   7f42 <stm_load_u64+0xb2>
    8089:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8090:	48 89 ef             	mov    %rbp,%rdi
    8093:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8098:	e8 e3 e7 ff ff       	callq  6880 <stm_allocate_rs_entries.constprop.3>
    809d:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
    80a3:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    80a8:	e9 77 fe ff ff       	jmpq   7f24 <stm_load_u64+0x94>
    80ad:	0f 1f 00             	nopl   (%rax)
    80b0:	48 8b 07             	mov    (%rdi),%rax
    80b3:	e9 8a fe ff ff       	jmpq   7f42 <stm_load_u64+0xb2>
    80b8:	0f b6 8d ca 00 00 00 	movzbl 0xca(%rbp),%ecx
    80bf:	83 e1 01             	and    $0x1,%ecx
    80c2:	e9 47 fe ff ff       	jmpq   7f0e <stm_load_u64+0x7e>
    80c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    80ce:	00 00 
    80d0:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    80d7:	0f 85 f3 fd ff ff    	jne    7ed0 <stm_load_u64+0x40>
    80dd:	be 40 02 00 00       	mov    $0x240,%esi
    80e2:	48 89 ef             	mov    %rbp,%rdi
    80e5:	e8 e6 e7 ff ff       	callq  68d0 <stm_rollback>
    80ea:	31 c0                	xor    %eax,%eax
    80ec:	e9 51 fe ff ff       	jmpq   7f42 <stm_load_u64+0xb2>
    80f1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    80f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    80fd:	00 00 00 

0000000000008100 <stm_load_ulong>:
    8100:	e9 8b fd ff ff       	jmpq   7e90 <stm_load_u64>
    8105:	90                   	nop
    8106:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    810d:	00 00 00 

0000000000008110 <stm_load_short>:
    8110:	41 56                	push   %r14
    8112:	41 55                	push   %r13
    8114:	41 54                	push   %r12
    8116:	55                   	push   %rbp
    8117:	53                   	push   %rbx
    8118:	48 89 fb             	mov    %rdi,%rbx
    811b:	48 83 ec 10          	sub    $0x10,%rsp
    811f:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    8126:	83 e7 01             	and    $0x1,%edi
    8129:	64 4c 8b 20          	mov    %fs:(%rax),%r12
    812d:	0f 85 4d 01 00 00    	jne    8280 <stm_load_short+0x170>
    8133:	48 89 de             	mov    %rbx,%rsi
    8136:	48 8d 05 43 80 20 00 	lea    0x208043(%rip),%rax        # 210180 <_tinystm>
    813d:	48 bf fe df ff ff ff 	movabs $0xfffffffffffdffe,%rdi
    8144:	ff ff 0f 
    8147:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    814b:	48 89 f5             	mov    %rsi,%rbp
    814e:	48 c1 ed 02          	shr    $0x2,%rbp
    8152:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    8158:	48 01 c5             	add    %rax,%rbp
    815b:	48 8b 45 00          	mov    0x0(%rbp),%rax
    815f:	a8 01                	test   $0x1,%al
    8161:	0f 85 b9 00 00 00    	jne    8220 <stm_load_short+0x110>
    8167:	4c 8b 2e             	mov    (%rsi),%r13
    816a:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    816e:	48 39 d0             	cmp    %rdx,%rax
    8171:	0f 85 9e 00 00 00    	jne    8215 <stm_load_short+0x105>
    8177:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
    817e:	00 0f 
    8180:	75 5c                	jne    81de <stm_load_short+0xce>
    8182:	41 0f b6 94 24 ca 00 	movzbl 0xca(%r12),%edx
    8189:	00 00 
    818b:	49 89 c6             	mov    %rax,%r14
    818e:	49 c1 ee 04          	shr    $0x4,%r14
    8192:	83 e2 01             	and    $0x1,%edx
    8195:	4d 3b b4 24 e0 00 00 	cmp    0xe0(%r12),%r14
    819c:	00 
    819d:	0f 87 05 01 00 00    	ja     82a8 <stm_load_short+0x198>
    81a3:	84 d2                	test   %dl,%dl
    81a5:	75 37                	jne    81de <stm_load_short+0xce>
    81a7:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
    81ae:	00 
    81af:	41 3b 84 24 f4 00 00 	cmp    0xf4(%r12),%eax
    81b6:	00 
    81b7:	0f 84 8b 01 00 00    	je     8348 <stm_load_short+0x238>
    81bd:	49 8b 94 24 e8 00 00 	mov    0xe8(%r12),%rdx
    81c4:	00 
    81c5:	8d 48 01             	lea    0x1(%rax),%ecx
    81c8:	48 c1 e0 04          	shl    $0x4,%rax
    81cc:	41 89 8c 24 f0 00 00 	mov    %ecx,0xf0(%r12)
    81d3:	00 
    81d4:	48 01 d0             	add    %rdx,%rax
    81d7:	4c 89 30             	mov    %r14,(%rax)
    81da:	48 89 68 08          	mov    %rbp,0x8(%rax)
    81de:	48 d1 eb             	shr    %rbx
    81e1:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
    81e6:	83 e3 03             	and    $0x3,%ebx
    81e9:	0f b7 44 5c 08       	movzwl 0x8(%rsp,%rbx,2),%eax
    81ee:	48 83 c4 10          	add    $0x10,%rsp
    81f2:	5b                   	pop    %rbx
    81f3:	5d                   	pop    %rbp
    81f4:	41 5c                	pop    %r12
    81f6:	41 5d                	pop    %r13
    81f8:	41 5e                	pop    %r14
    81fa:	c3                   	retq   
    81fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8200:	4d 89 94 24 e0 00 00 	mov    %r10,0xe0(%r12)
    8207:	00 
    8208:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    820c:	48 39 d0             	cmp    %rdx,%rax
    820f:	0f 84 53 01 00 00    	je     8368 <stm_load_short+0x258>
    8215:	48 89 d0             	mov    %rdx,%rax
    8218:	a8 01                	test   $0x1,%al
    821a:	0f 84 47 ff ff ff    	je     8167 <stm_load_short+0x57>
    8220:	49 8b 94 24 f8 00 00 	mov    0xf8(%r12),%rdx
    8227:	00 
    8228:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    822c:	48 39 d0             	cmp    %rdx,%rax
    822f:	0f 82 4b 01 00 00    	jb     8380 <stm_load_short+0x270>
    8235:	41 8b 8c 24 00 01 00 	mov    0x100(%r12),%ecx
    823c:	00 
    823d:	48 c1 e1 06          	shl    $0x6,%rcx
    8241:	48 01 ca             	add    %rcx,%rdx
    8244:	48 39 d0             	cmp    %rdx,%rax
    8247:	72 14                	jb     825d <stm_load_short+0x14d>
    8249:	e9 32 01 00 00       	jmpq   8380 <stm_load_short+0x270>
    824e:	66 90                	xchg   %ax,%ax
    8250:	48 8b 40 28          	mov    0x28(%rax),%rax
    8254:	48 85 c0             	test   %rax,%rax
    8257:	0f 84 03 01 00 00    	je     8360 <stm_load_short+0x250>
    825d:	48 3b 30             	cmp    (%rax),%rsi
    8260:	75 ee                	jne    8250 <stm_load_short+0x140>
    8262:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    8267:	0f 84 f3 00 00 00    	je     8360 <stm_load_short+0x250>
    826d:	4c 8b 68 08          	mov    0x8(%rax),%r13
    8271:	e9 68 ff ff ff       	jmpq   81de <stm_load_short+0xce>
    8276:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    827d:	00 00 00 
    8280:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    8285:	48 89 df             	mov    %rbx,%rdi
    8288:	ba 02 00 00 00       	mov    $0x2,%edx
    828d:	e8 1e ef ff ff       	callq  71b0 <stm_load_bytes>
    8292:	0f b7 44 24 08       	movzwl 0x8(%rsp),%eax
    8297:	48 83 c4 10          	add    $0x10,%rsp
    829b:	5b                   	pop    %rbx
    829c:	5d                   	pop    %rbp
    829d:	41 5c                	pop    %r12
    829f:	41 5d                	pop    %r13
    82a1:	41 5e                	pop    %r14
    82a3:	c3                   	retq   
    82a4:	0f 1f 40 00          	nopl   0x0(%rax)
    82a8:	84 d2                	test   %dl,%dl
    82aa:	0f 85 7f 00 00 00    	jne    832f <stm_load_short+0x21f>
    82b0:	4c 8b 15 49 7f a0 00 	mov    0xa07f49(%rip),%r10        # a10200 <_tinystm+0x800080>
    82b7:	49 39 fa             	cmp    %rdi,%r10
    82ba:	77 73                	ja     832f <stm_load_short+0x21f>
    82bc:	41 8b 94 24 f0 00 00 	mov    0xf0(%r12),%edx
    82c3:	00 
    82c4:	49 8b 8c 24 e8 00 00 	mov    0xe8(%r12),%rcx
    82cb:	00 
    82cc:	85 d2                	test   %edx,%edx
    82ce:	0f 8e 2c ff ff ff    	jle    8200 <stm_load_short+0xf0>
    82d4:	44 8d 4a ff          	lea    -0x1(%rdx),%r9d
    82d8:	49 83 c1 01          	add    $0x1,%r9
    82dc:	49 c1 e1 04          	shl    $0x4,%r9
    82e0:	49 01 c9             	add    %rcx,%r9
    82e3:	eb 35                	jmp    831a <stm_load_short+0x20a>
    82e5:	0f 1f 00             	nopl   (%rax)
    82e8:	4d 8b 84 24 f8 00 00 	mov    0xf8(%r12),%r8
    82ef:	00 
    82f0:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
    82f4:	4c 39 c2             	cmp    %r8,%rdx
    82f7:	72 36                	jb     832f <stm_load_short+0x21f>
    82f9:	45 8b 9c 24 00 01 00 	mov    0x100(%r12),%r11d
    8300:	00 
    8301:	49 c1 e3 06          	shl    $0x6,%r11
    8305:	4d 01 d8             	add    %r11,%r8
    8308:	4c 39 c2             	cmp    %r8,%rdx
    830b:	73 22                	jae    832f <stm_load_short+0x21f>
    830d:	48 83 c1 10          	add    $0x10,%rcx
    8311:	49 39 c9             	cmp    %rcx,%r9
    8314:	0f 84 e6 fe ff ff    	je     8200 <stm_load_short+0xf0>
    831a:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    831e:	48 8b 12             	mov    (%rdx),%rdx
    8321:	f6 c2 01             	test   $0x1,%dl
    8324:	75 c2                	jne    82e8 <stm_load_short+0x1d8>
    8326:	48 c1 ea 04          	shr    $0x4,%rdx
    832a:	48 3b 11             	cmp    (%rcx),%rdx
    832d:	74 de                	je     830d <stm_load_short+0x1fd>
    832f:	be 40 05 00 00       	mov    $0x540,%esi
    8334:	4c 89 e7             	mov    %r12,%rdi
    8337:	45 31 ed             	xor    %r13d,%r13d
    833a:	e8 91 e5 ff ff       	callq  68d0 <stm_rollback>
    833f:	e9 9a fe ff ff       	jmpq   81de <stm_load_short+0xce>
    8344:	0f 1f 40 00          	nopl   0x0(%rax)
    8348:	4c 89 e7             	mov    %r12,%rdi
    834b:	e8 30 e5 ff ff       	callq  6880 <stm_allocate_rs_entries.constprop.3>
    8350:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
    8357:	00 
    8358:	e9 60 fe ff ff       	jmpq   81bd <stm_load_short+0xad>
    835d:	0f 1f 00             	nopl   (%rax)
    8360:	4c 8b 2e             	mov    (%rsi),%r13
    8363:	e9 76 fe ff ff       	jmpq   81de <stm_load_short+0xce>
    8368:	41 0f b6 94 24 ca 00 	movzbl 0xca(%r12),%edx
    836f:	00 00 
    8371:	83 e2 01             	and    $0x1,%edx
    8374:	e9 2a fe ff ff       	jmpq   81a3 <stm_load_short+0x93>
    8379:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8380:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
    8387:	00 0f 
    8389:	0f 85 cc fd ff ff    	jne    815b <stm_load_short+0x4b>
    838f:	be 40 02 00 00       	mov    $0x240,%esi
    8394:	4c 89 e7             	mov    %r12,%rdi
    8397:	45 31 ed             	xor    %r13d,%r13d
    839a:	e8 31 e5 ff ff       	callq  68d0 <stm_rollback>
    839f:	e9 3a fe ff ff       	jmpq   81de <stm_load_short+0xce>
    83a4:	66 90                	xchg   %ax,%ax
    83a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    83ad:	00 00 00 

00000000000083b0 <stm_load_int>:
    83b0:	41 56                	push   %r14
    83b2:	41 55                	push   %r13
    83b4:	41 54                	push   %r12
    83b6:	55                   	push   %rbp
    83b7:	53                   	push   %rbx
    83b8:	48 89 fb             	mov    %rdi,%rbx
    83bb:	48 83 ec 10          	sub    $0x10,%rsp
    83bf:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    83c6:	83 e7 03             	and    $0x3,%edi
    83c9:	64 4c 8b 20          	mov    %fs:(%rax),%r12
    83cd:	0f 85 4d 01 00 00    	jne    8520 <stm_load_int+0x170>
    83d3:	48 89 de             	mov    %rbx,%rsi
    83d6:	48 8d 05 a3 7d 20 00 	lea    0x207da3(%rip),%rax        # 210180 <_tinystm>
    83dd:	48 bf fe df ff ff ff 	movabs $0xfffffffffffdffe,%rdi
    83e4:	ff ff 0f 
    83e7:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    83eb:	48 89 f5             	mov    %rsi,%rbp
    83ee:	48 c1 ed 02          	shr    $0x2,%rbp
    83f2:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    83f8:	48 01 c5             	add    %rax,%rbp
    83fb:	48 8b 45 00          	mov    0x0(%rbp),%rax
    83ff:	a8 01                	test   $0x1,%al
    8401:	0f 85 b9 00 00 00    	jne    84c0 <stm_load_int+0x110>
    8407:	4c 8b 2e             	mov    (%rsi),%r13
    840a:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    840e:	48 39 d0             	cmp    %rdx,%rax
    8411:	0f 85 9e 00 00 00    	jne    84b5 <stm_load_int+0x105>
    8417:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
    841e:	00 0f 
    8420:	75 5c                	jne    847e <stm_load_int+0xce>
    8422:	41 0f b6 94 24 ca 00 	movzbl 0xca(%r12),%edx
    8429:	00 00 
    842b:	49 89 c6             	mov    %rax,%r14
    842e:	49 c1 ee 04          	shr    $0x4,%r14
    8432:	83 e2 01             	and    $0x1,%edx
    8435:	4d 3b b4 24 e0 00 00 	cmp    0xe0(%r12),%r14
    843c:	00 
    843d:	0f 87 05 01 00 00    	ja     8548 <stm_load_int+0x198>
    8443:	84 d2                	test   %dl,%dl
    8445:	75 37                	jne    847e <stm_load_int+0xce>
    8447:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
    844e:	00 
    844f:	41 3b 84 24 f4 00 00 	cmp    0xf4(%r12),%eax
    8456:	00 
    8457:	0f 84 8b 01 00 00    	je     85e8 <stm_load_int+0x238>
    845d:	49 8b 94 24 e8 00 00 	mov    0xe8(%r12),%rdx
    8464:	00 
    8465:	8d 48 01             	lea    0x1(%rax),%ecx
    8468:	48 c1 e0 04          	shl    $0x4,%rax
    846c:	41 89 8c 24 f0 00 00 	mov    %ecx,0xf0(%r12)
    8473:	00 
    8474:	48 01 d0             	add    %rdx,%rax
    8477:	4c 89 30             	mov    %r14,(%rax)
    847a:	48 89 68 08          	mov    %rbp,0x8(%rax)
    847e:	48 c1 eb 02          	shr    $0x2,%rbx
    8482:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
    8487:	83 e3 01             	and    $0x1,%ebx
    848a:	8b 44 9c 08          	mov    0x8(%rsp,%rbx,4),%eax
    848e:	48 83 c4 10          	add    $0x10,%rsp
    8492:	5b                   	pop    %rbx
    8493:	5d                   	pop    %rbp
    8494:	41 5c                	pop    %r12
    8496:	41 5d                	pop    %r13
    8498:	41 5e                	pop    %r14
    849a:	c3                   	retq   
    849b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    84a0:	4d 89 94 24 e0 00 00 	mov    %r10,0xe0(%r12)
    84a7:	00 
    84a8:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    84ac:	48 39 d0             	cmp    %rdx,%rax
    84af:	0f 84 53 01 00 00    	je     8608 <stm_load_int+0x258>
    84b5:	48 89 d0             	mov    %rdx,%rax
    84b8:	a8 01                	test   $0x1,%al
    84ba:	0f 84 47 ff ff ff    	je     8407 <stm_load_int+0x57>
    84c0:	49 8b 94 24 f8 00 00 	mov    0xf8(%r12),%rdx
    84c7:	00 
    84c8:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    84cc:	48 39 d0             	cmp    %rdx,%rax
    84cf:	0f 82 4b 01 00 00    	jb     8620 <stm_load_int+0x270>
    84d5:	41 8b 8c 24 00 01 00 	mov    0x100(%r12),%ecx
    84dc:	00 
    84dd:	48 c1 e1 06          	shl    $0x6,%rcx
    84e1:	48 01 ca             	add    %rcx,%rdx
    84e4:	48 39 d0             	cmp    %rdx,%rax
    84e7:	72 14                	jb     84fd <stm_load_int+0x14d>
    84e9:	e9 32 01 00 00       	jmpq   8620 <stm_load_int+0x270>
    84ee:	66 90                	xchg   %ax,%ax
    84f0:	48 8b 40 28          	mov    0x28(%rax),%rax
    84f4:	48 85 c0             	test   %rax,%rax
    84f7:	0f 84 03 01 00 00    	je     8600 <stm_load_int+0x250>
    84fd:	48 3b 30             	cmp    (%rax),%rsi
    8500:	75 ee                	jne    84f0 <stm_load_int+0x140>
    8502:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    8507:	0f 84 f3 00 00 00    	je     8600 <stm_load_int+0x250>
    850d:	4c 8b 68 08          	mov    0x8(%rax),%r13
    8511:	e9 68 ff ff ff       	jmpq   847e <stm_load_int+0xce>
    8516:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    851d:	00 00 00 
    8520:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    8525:	48 89 df             	mov    %rbx,%rdi
    8528:	ba 04 00 00 00       	mov    $0x4,%edx
    852d:	e8 7e ec ff ff       	callq  71b0 <stm_load_bytes>
    8532:	8b 44 24 08          	mov    0x8(%rsp),%eax
    8536:	48 83 c4 10          	add    $0x10,%rsp
    853a:	5b                   	pop    %rbx
    853b:	5d                   	pop    %rbp
    853c:	41 5c                	pop    %r12
    853e:	41 5d                	pop    %r13
    8540:	41 5e                	pop    %r14
    8542:	c3                   	retq   
    8543:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8548:	84 d2                	test   %dl,%dl
    854a:	0f 85 7f 00 00 00    	jne    85cf <stm_load_int+0x21f>
    8550:	4c 8b 15 a9 7c a0 00 	mov    0xa07ca9(%rip),%r10        # a10200 <_tinystm+0x800080>
    8557:	49 39 fa             	cmp    %rdi,%r10
    855a:	77 73                	ja     85cf <stm_load_int+0x21f>
    855c:	41 8b 94 24 f0 00 00 	mov    0xf0(%r12),%edx
    8563:	00 
    8564:	49 8b 8c 24 e8 00 00 	mov    0xe8(%r12),%rcx
    856b:	00 
    856c:	85 d2                	test   %edx,%edx
    856e:	0f 8e 2c ff ff ff    	jle    84a0 <stm_load_int+0xf0>
    8574:	44 8d 4a ff          	lea    -0x1(%rdx),%r9d
    8578:	49 83 c1 01          	add    $0x1,%r9
    857c:	49 c1 e1 04          	shl    $0x4,%r9
    8580:	49 01 c9             	add    %rcx,%r9
    8583:	eb 35                	jmp    85ba <stm_load_int+0x20a>
    8585:	0f 1f 00             	nopl   (%rax)
    8588:	4d 8b 84 24 f8 00 00 	mov    0xf8(%r12),%r8
    858f:	00 
    8590:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
    8594:	4c 39 c2             	cmp    %r8,%rdx
    8597:	72 36                	jb     85cf <stm_load_int+0x21f>
    8599:	45 8b 9c 24 00 01 00 	mov    0x100(%r12),%r11d
    85a0:	00 
    85a1:	49 c1 e3 06          	shl    $0x6,%r11
    85a5:	4d 01 d8             	add    %r11,%r8
    85a8:	4c 39 c2             	cmp    %r8,%rdx
    85ab:	73 22                	jae    85cf <stm_load_int+0x21f>
    85ad:	48 83 c1 10          	add    $0x10,%rcx
    85b1:	49 39 c9             	cmp    %rcx,%r9
    85b4:	0f 84 e6 fe ff ff    	je     84a0 <stm_load_int+0xf0>
    85ba:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    85be:	48 8b 12             	mov    (%rdx),%rdx
    85c1:	f6 c2 01             	test   $0x1,%dl
    85c4:	75 c2                	jne    8588 <stm_load_int+0x1d8>
    85c6:	48 c1 ea 04          	shr    $0x4,%rdx
    85ca:	48 3b 11             	cmp    (%rcx),%rdx
    85cd:	74 de                	je     85ad <stm_load_int+0x1fd>
    85cf:	be 40 05 00 00       	mov    $0x540,%esi
    85d4:	4c 89 e7             	mov    %r12,%rdi
    85d7:	45 31 ed             	xor    %r13d,%r13d
    85da:	e8 f1 e2 ff ff       	callq  68d0 <stm_rollback>
    85df:	e9 9a fe ff ff       	jmpq   847e <stm_load_int+0xce>
    85e4:	0f 1f 40 00          	nopl   0x0(%rax)
    85e8:	4c 89 e7             	mov    %r12,%rdi
    85eb:	e8 90 e2 ff ff       	callq  6880 <stm_allocate_rs_entries.constprop.3>
    85f0:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
    85f7:	00 
    85f8:	e9 60 fe ff ff       	jmpq   845d <stm_load_int+0xad>
    85fd:	0f 1f 00             	nopl   (%rax)
    8600:	4c 8b 2e             	mov    (%rsi),%r13
    8603:	e9 76 fe ff ff       	jmpq   847e <stm_load_int+0xce>
    8608:	41 0f b6 94 24 ca 00 	movzbl 0xca(%r12),%edx
    860f:	00 00 
    8611:	83 e2 01             	and    $0x1,%edx
    8614:	e9 2a fe ff ff       	jmpq   8443 <stm_load_int+0x93>
    8619:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8620:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
    8627:	00 0f 
    8629:	0f 85 cc fd ff ff    	jne    83fb <stm_load_int+0x4b>
    862f:	be 40 02 00 00       	mov    $0x240,%esi
    8634:	4c 89 e7             	mov    %r12,%rdi
    8637:	45 31 ed             	xor    %r13d,%r13d
    863a:	e8 91 e2 ff ff       	callq  68d0 <stm_rollback>
    863f:	e9 3a fe ff ff       	jmpq   847e <stm_load_int+0xce>
    8644:	66 90                	xchg   %ax,%ax
    8646:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    864d:	00 00 00 

0000000000008650 <stm_load_long>:
    8650:	41 55                	push   %r13
    8652:	41 54                	push   %r12
    8654:	55                   	push   %rbp
    8655:	53                   	push   %rbx
    8656:	48 83 ec 28          	sub    $0x28,%rsp
    865a:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    8661:	40 f6 c7 07          	test   $0x7,%dil
    8665:	64 48 8b 28          	mov    %fs:(%rax),%rbp
    8669:	0f 85 21 01 00 00    	jne    8790 <stm_load_long+0x140>
    866f:	48 89 fb             	mov    %rdi,%rbx
    8672:	48 8d 05 07 7b 20 00 	lea    0x207b07(%rip),%rax        # 210180 <_tinystm>
    8679:	49 b9 fe df ff ff ff 	movabs $0xfffffffffffdffe,%r9
    8680:	ff ff 0f 
    8683:	48 c1 eb 02          	shr    $0x2,%rbx
    8687:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
    868d:	48 01 c3             	add    %rax,%rbx
    8690:	48 8b 13             	mov    (%rbx),%rdx
    8693:	f6 c2 01             	test   $0x1,%dl
    8696:	0f 85 94 00 00 00    	jne    8730 <stm_load_long+0xe0>
    869c:	48 8b 07             	mov    (%rdi),%rax
    869f:	48 8b 0b             	mov    (%rbx),%rcx
    86a2:	48 39 ca             	cmp    %rcx,%rdx
    86a5:	75 7c                	jne    8723 <stm_load_long+0xd3>
    86a7:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    86ae:	75 52                	jne    8702 <stm_load_long+0xb2>
    86b0:	0f b6 8d ca 00 00 00 	movzbl 0xca(%rbp),%ecx
    86b7:	49 89 d4             	mov    %rdx,%r12
    86ba:	49 c1 ec 04          	shr    $0x4,%r12
    86be:	83 e1 01             	and    $0x1,%ecx
    86c1:	4c 3b a5 e0 00 00 00 	cmp    0xe0(%rbp),%r12
    86c8:	0f 87 e2 00 00 00    	ja     87b0 <stm_load_long+0x160>
    86ce:	84 c9                	test   %cl,%cl
    86d0:	75 30                	jne    8702 <stm_load_long+0xb2>
    86d2:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
    86d8:	3b 95 f4 00 00 00    	cmp    0xf4(%rbp),%edx
    86de:	0f 84 6c 01 00 00    	je     8850 <stm_load_long+0x200>
    86e4:	48 8b 8d e8 00 00 00 	mov    0xe8(%rbp),%rcx
    86eb:	8d 72 01             	lea    0x1(%rdx),%esi
    86ee:	48 c1 e2 04          	shl    $0x4,%rdx
    86f2:	89 b5 f0 00 00 00    	mov    %esi,0xf0(%rbp)
    86f8:	48 01 ca             	add    %rcx,%rdx
    86fb:	4c 89 22             	mov    %r12,(%rdx)
    86fe:	48 89 5a 08          	mov    %rbx,0x8(%rdx)
    8702:	48 83 c4 28          	add    $0x28,%rsp
    8706:	5b                   	pop    %rbx
    8707:	5d                   	pop    %rbp
    8708:	41 5c                	pop    %r12
    870a:	41 5d                	pop    %r13
    870c:	c3                   	retq   
    870d:	0f 1f 00             	nopl   (%rax)
    8710:	4c 89 9d e0 00 00 00 	mov    %r11,0xe0(%rbp)
    8717:	48 8b 0b             	mov    (%rbx),%rcx
    871a:	48 39 ca             	cmp    %rcx,%rdx
    871d:	0f 84 55 01 00 00    	je     8878 <stm_load_long+0x228>
    8723:	48 89 ca             	mov    %rcx,%rdx
    8726:	f6 c2 01             	test   $0x1,%dl
    8729:	0f 84 6d ff ff ff    	je     869c <stm_load_long+0x4c>
    872f:	90                   	nop
    8730:	48 8b 85 f8 00 00 00 	mov    0xf8(%rbp),%rax
    8737:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
    873b:	48 39 c2             	cmp    %rax,%rdx
    873e:	0f 82 4c 01 00 00    	jb     8890 <stm_load_long+0x240>
    8744:	8b 8d 00 01 00 00    	mov    0x100(%rbp),%ecx
    874a:	48 c1 e1 06          	shl    $0x6,%rcx
    874e:	48 01 c8             	add    %rcx,%rax
    8751:	48 39 c2             	cmp    %rax,%rdx
    8754:	72 17                	jb     876d <stm_load_long+0x11d>
    8756:	e9 35 01 00 00       	jmpq   8890 <stm_load_long+0x240>
    875b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8760:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    8764:	48 85 d2             	test   %rdx,%rdx
    8767:	0f 84 03 01 00 00    	je     8870 <stm_load_long+0x220>
    876d:	48 3b 3a             	cmp    (%rdx),%rdi
    8770:	75 ee                	jne    8760 <stm_load_long+0x110>
    8772:	48 83 7a 10 00       	cmpq   $0x0,0x10(%rdx)
    8777:	0f 84 f3 00 00 00    	je     8870 <stm_load_long+0x220>
    877d:	48 8b 42 08          	mov    0x8(%rdx),%rax
    8781:	e9 7c ff ff ff       	jmpq   8702 <stm_load_long+0xb2>
    8786:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    878d:	00 00 00 
    8790:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    8795:	ba 08 00 00 00       	mov    $0x8,%edx
    879a:	e8 11 ea ff ff       	callq  71b0 <stm_load_bytes>
    879f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    87a4:	48 83 c4 28          	add    $0x28,%rsp
    87a8:	5b                   	pop    %rbx
    87a9:	5d                   	pop    %rbp
    87aa:	41 5c                	pop    %r12
    87ac:	41 5d                	pop    %r13
    87ae:	c3                   	retq   
    87af:	90                   	nop
    87b0:	84 c9                	test   %cl,%cl
    87b2:	0f 85 7d 00 00 00    	jne    8835 <stm_load_long+0x1e5>
    87b8:	4c 8b 1d 41 7a a0 00 	mov    0xa07a41(%rip),%r11        # a10200 <_tinystm+0x800080>
    87bf:	4d 39 cb             	cmp    %r9,%r11
    87c2:	77 71                	ja     8835 <stm_load_long+0x1e5>
    87c4:	8b 8d f0 00 00 00    	mov    0xf0(%rbp),%ecx
    87ca:	48 8b b5 e8 00 00 00 	mov    0xe8(%rbp),%rsi
    87d1:	85 c9                	test   %ecx,%ecx
    87d3:	0f 8e 37 ff ff ff    	jle    8710 <stm_load_long+0xc0>
    87d9:	44 8d 51 ff          	lea    -0x1(%rcx),%r10d
    87dd:	49 83 c2 01          	add    $0x1,%r10
    87e1:	49 c1 e2 04          	shl    $0x4,%r10
    87e5:	49 01 f2             	add    %rsi,%r10
    87e8:	eb 36                	jmp    8820 <stm_load_long+0x1d0>
    87ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    87f0:	4c 8b 85 f8 00 00 00 	mov    0xf8(%rbp),%r8
    87f7:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    87fb:	4c 39 c1             	cmp    %r8,%rcx
    87fe:	72 35                	jb     8835 <stm_load_long+0x1e5>
    8800:	44 8b ad 00 01 00 00 	mov    0x100(%rbp),%r13d
    8807:	49 c1 e5 06          	shl    $0x6,%r13
    880b:	4d 01 e8             	add    %r13,%r8
    880e:	4c 39 c1             	cmp    %r8,%rcx
    8811:	73 22                	jae    8835 <stm_load_long+0x1e5>
    8813:	48 83 c6 10          	add    $0x10,%rsi
    8817:	49 39 f2             	cmp    %rsi,%r10
    881a:	0f 84 f0 fe ff ff    	je     8710 <stm_load_long+0xc0>
    8820:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    8824:	48 8b 09             	mov    (%rcx),%rcx
    8827:	f6 c1 01             	test   $0x1,%cl
    882a:	75 c4                	jne    87f0 <stm_load_long+0x1a0>
    882c:	48 c1 e9 04          	shr    $0x4,%rcx
    8830:	48 3b 0e             	cmp    (%rsi),%rcx
    8833:	74 de                	je     8813 <stm_load_long+0x1c3>
    8835:	be 40 05 00 00       	mov    $0x540,%esi
    883a:	48 89 ef             	mov    %rbp,%rdi
    883d:	e8 8e e0 ff ff       	callq  68d0 <stm_rollback>
    8842:	31 c0                	xor    %eax,%eax
    8844:	e9 b9 fe ff ff       	jmpq   8702 <stm_load_long+0xb2>
    8849:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8850:	48 89 ef             	mov    %rbp,%rdi
    8853:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8858:	e8 23 e0 ff ff       	callq  6880 <stm_allocate_rs_entries.constprop.3>
    885d:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
    8863:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8868:	e9 77 fe ff ff       	jmpq   86e4 <stm_load_long+0x94>
    886d:	0f 1f 00             	nopl   (%rax)
    8870:	48 8b 07             	mov    (%rdi),%rax
    8873:	e9 8a fe ff ff       	jmpq   8702 <stm_load_long+0xb2>
    8878:	0f b6 8d ca 00 00 00 	movzbl 0xca(%rbp),%ecx
    887f:	83 e1 01             	and    $0x1,%ecx
    8882:	e9 47 fe ff ff       	jmpq   86ce <stm_load_long+0x7e>
    8887:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    888e:	00 00 
    8890:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    8897:	0f 85 f3 fd ff ff    	jne    8690 <stm_load_long+0x40>
    889d:	be 40 02 00 00       	mov    $0x240,%esi
    88a2:	48 89 ef             	mov    %rbp,%rdi
    88a5:	e8 26 e0 ff ff       	callq  68d0 <stm_rollback>
    88aa:	31 c0                	xor    %eax,%eax
    88ac:	e9 51 fe ff ff       	jmpq   8702 <stm_load_long+0xb2>
    88b1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    88b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    88bd:	00 00 00 

00000000000088c0 <stm_load_float>:
    88c0:	41 56                	push   %r14
    88c2:	41 55                	push   %r13
    88c4:	41 54                	push   %r12
    88c6:	55                   	push   %rbp
    88c7:	53                   	push   %rbx
    88c8:	48 89 fb             	mov    %rdi,%rbx
    88cb:	48 83 ec 20          	sub    $0x20,%rsp
    88cf:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    88d6:	83 e7 03             	and    $0x3,%edi
    88d9:	64 4c 8b 20          	mov    %fs:(%rax),%r12
    88dd:	0f 85 5d 01 00 00    	jne    8a40 <stm_load_float+0x180>
    88e3:	48 89 de             	mov    %rbx,%rsi
    88e6:	48 8d 05 93 78 20 00 	lea    0x207893(%rip),%rax        # 210180 <_tinystm>
    88ed:	48 bf fe df ff ff ff 	movabs $0xfffffffffffdffe,%rdi
    88f4:	ff ff 0f 
    88f7:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    88fb:	48 89 f5             	mov    %rsi,%rbp
    88fe:	48 c1 ed 02          	shr    $0x2,%rbp
    8902:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    8908:	48 01 c5             	add    %rax,%rbp
    890b:	48 8b 45 00          	mov    0x0(%rbp),%rax
    890f:	a8 01                	test   $0x1,%al
    8911:	0f 85 c9 00 00 00    	jne    89e0 <stm_load_float+0x120>
    8917:	4c 8b 2e             	mov    (%rsi),%r13
    891a:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    891e:	48 39 d0             	cmp    %rdx,%rax
    8921:	0f 85 a6 00 00 00    	jne    89cd <stm_load_float+0x10d>
    8927:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
    892e:	00 0f 
    8930:	75 5c                	jne    898e <stm_load_float+0xce>
    8932:	41 0f b6 94 24 ca 00 	movzbl 0xca(%r12),%edx
    8939:	00 00 
    893b:	49 89 c6             	mov    %rax,%r14
    893e:	49 c1 ee 04          	shr    $0x4,%r14
    8942:	83 e2 01             	and    $0x1,%edx
    8945:	4d 3b b4 24 e0 00 00 	cmp    0xe0(%r12),%r14
    894c:	00 
    894d:	0f 87 0d 01 00 00    	ja     8a60 <stm_load_float+0x1a0>
    8953:	84 d2                	test   %dl,%dl
    8955:	75 37                	jne    898e <stm_load_float+0xce>
    8957:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
    895e:	00 
    895f:	41 3b 84 24 f4 00 00 	cmp    0xf4(%r12),%eax
    8966:	00 
    8967:	0f 84 93 01 00 00    	je     8b00 <stm_load_float+0x240>
    896d:	49 8b 94 24 e8 00 00 	mov    0xe8(%r12),%rdx
    8974:	00 
    8975:	8d 48 01             	lea    0x1(%rax),%ecx
    8978:	48 c1 e0 04          	shl    $0x4,%rax
    897c:	41 89 8c 24 f0 00 00 	mov    %ecx,0xf0(%r12)
    8983:	00 
    8984:	48 01 d0             	add    %rdx,%rax
    8987:	4c 89 30             	mov    %r14,(%rax)
    898a:	48 89 68 08          	mov    %rbp,0x8(%rax)
    898e:	48 c1 eb 02          	shr    $0x2,%rbx
    8992:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
    8997:	83 e3 01             	and    $0x1,%ebx
    899a:	8b 44 9c 18          	mov    0x18(%rsp,%rbx,4),%eax
    899e:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    89a2:	c5 fa 10 44 24 0c    	vmovss 0xc(%rsp),%xmm0
    89a8:	48 83 c4 20          	add    $0x20,%rsp
    89ac:	5b                   	pop    %rbx
    89ad:	5d                   	pop    %rbp
    89ae:	41 5c                	pop    %r12
    89b0:	41 5d                	pop    %r13
    89b2:	41 5e                	pop    %r14
    89b4:	c3                   	retq   
    89b5:	0f 1f 00             	nopl   (%rax)
    89b8:	4d 89 94 24 e0 00 00 	mov    %r10,0xe0(%r12)
    89bf:	00 
    89c0:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    89c4:	48 39 d0             	cmp    %rdx,%rax
    89c7:	0f 84 53 01 00 00    	je     8b20 <stm_load_float+0x260>
    89cd:	48 89 d0             	mov    %rdx,%rax
    89d0:	a8 01                	test   $0x1,%al
    89d2:	0f 84 3f ff ff ff    	je     8917 <stm_load_float+0x57>
    89d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    89df:	00 
    89e0:	49 8b 94 24 f8 00 00 	mov    0xf8(%r12),%rdx
    89e7:	00 
    89e8:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    89ec:	48 39 d0             	cmp    %rdx,%rax
    89ef:	0f 82 43 01 00 00    	jb     8b38 <stm_load_float+0x278>
    89f5:	41 8b 8c 24 00 01 00 	mov    0x100(%r12),%ecx
    89fc:	00 
    89fd:	48 c1 e1 06          	shl    $0x6,%rcx
    8a01:	48 01 ca             	add    %rcx,%rdx
    8a04:	48 39 d0             	cmp    %rdx,%rax
    8a07:	72 14                	jb     8a1d <stm_load_float+0x15d>
    8a09:	e9 2a 01 00 00       	jmpq   8b38 <stm_load_float+0x278>
    8a0e:	66 90                	xchg   %ax,%ax
    8a10:	48 8b 40 28          	mov    0x28(%rax),%rax
    8a14:	48 85 c0             	test   %rax,%rax
    8a17:	0f 84 fb 00 00 00    	je     8b18 <stm_load_float+0x258>
    8a1d:	48 3b 30             	cmp    (%rax),%rsi
    8a20:	75 ee                	jne    8a10 <stm_load_float+0x150>
    8a22:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    8a27:	0f 84 eb 00 00 00    	je     8b18 <stm_load_float+0x258>
    8a2d:	4c 8b 68 08          	mov    0x8(%rax),%r13
    8a31:	e9 58 ff ff ff       	jmpq   898e <stm_load_float+0xce>
    8a36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8a3d:	00 00 00 
    8a40:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    8a45:	ba 04 00 00 00       	mov    $0x4,%edx
    8a4a:	48 89 df             	mov    %rbx,%rdi
    8a4d:	e8 5e e7 ff ff       	callq  71b0 <stm_load_bytes>
    8a52:	8b 44 24 18          	mov    0x18(%rsp),%eax
    8a56:	e9 43 ff ff ff       	jmpq   899e <stm_load_float+0xde>
    8a5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8a60:	84 d2                	test   %dl,%dl
    8a62:	0f 85 7f 00 00 00    	jne    8ae7 <stm_load_float+0x227>
    8a68:	4c 8b 15 91 77 a0 00 	mov    0xa07791(%rip),%r10        # a10200 <_tinystm+0x800080>
    8a6f:	49 39 fa             	cmp    %rdi,%r10
    8a72:	77 73                	ja     8ae7 <stm_load_float+0x227>
    8a74:	41 8b 94 24 f0 00 00 	mov    0xf0(%r12),%edx
    8a7b:	00 
    8a7c:	49 8b 8c 24 e8 00 00 	mov    0xe8(%r12),%rcx
    8a83:	00 
    8a84:	85 d2                	test   %edx,%edx
    8a86:	0f 8e 2c ff ff ff    	jle    89b8 <stm_load_float+0xf8>
    8a8c:	44 8d 4a ff          	lea    -0x1(%rdx),%r9d
    8a90:	49 83 c1 01          	add    $0x1,%r9
    8a94:	49 c1 e1 04          	shl    $0x4,%r9
    8a98:	49 01 c9             	add    %rcx,%r9
    8a9b:	eb 35                	jmp    8ad2 <stm_load_float+0x212>
    8a9d:	0f 1f 00             	nopl   (%rax)
    8aa0:	4d 8b 84 24 f8 00 00 	mov    0xf8(%r12),%r8
    8aa7:	00 
    8aa8:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
    8aac:	4c 39 c2             	cmp    %r8,%rdx
    8aaf:	72 36                	jb     8ae7 <stm_load_float+0x227>
    8ab1:	45 8b 9c 24 00 01 00 	mov    0x100(%r12),%r11d
    8ab8:	00 
    8ab9:	49 c1 e3 06          	shl    $0x6,%r11
    8abd:	4d 01 d8             	add    %r11,%r8
    8ac0:	4c 39 c2             	cmp    %r8,%rdx
    8ac3:	73 22                	jae    8ae7 <stm_load_float+0x227>
    8ac5:	48 83 c1 10          	add    $0x10,%rcx
    8ac9:	49 39 c9             	cmp    %rcx,%r9
    8acc:	0f 84 e6 fe ff ff    	je     89b8 <stm_load_float+0xf8>
    8ad2:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    8ad6:	48 8b 12             	mov    (%rdx),%rdx
    8ad9:	f6 c2 01             	test   $0x1,%dl
    8adc:	75 c2                	jne    8aa0 <stm_load_float+0x1e0>
    8ade:	48 c1 ea 04          	shr    $0x4,%rdx
    8ae2:	48 3b 11             	cmp    (%rcx),%rdx
    8ae5:	74 de                	je     8ac5 <stm_load_float+0x205>
    8ae7:	be 40 05 00 00       	mov    $0x540,%esi
    8aec:	4c 89 e7             	mov    %r12,%rdi
    8aef:	45 31 ed             	xor    %r13d,%r13d
    8af2:	e8 d9 dd ff ff       	callq  68d0 <stm_rollback>
    8af7:	e9 92 fe ff ff       	jmpq   898e <stm_load_float+0xce>
    8afc:	0f 1f 40 00          	nopl   0x0(%rax)
    8b00:	4c 89 e7             	mov    %r12,%rdi
    8b03:	e8 78 dd ff ff       	callq  6880 <stm_allocate_rs_entries.constprop.3>
    8b08:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
    8b0f:	00 
    8b10:	e9 58 fe ff ff       	jmpq   896d <stm_load_float+0xad>
    8b15:	0f 1f 00             	nopl   (%rax)
    8b18:	4c 8b 2e             	mov    (%rsi),%r13
    8b1b:	e9 6e fe ff ff       	jmpq   898e <stm_load_float+0xce>
    8b20:	41 0f b6 94 24 ca 00 	movzbl 0xca(%r12),%edx
    8b27:	00 00 
    8b29:	83 e2 01             	and    $0x1,%edx
    8b2c:	e9 22 fe ff ff       	jmpq   8953 <stm_load_float+0x93>
    8b31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8b38:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
    8b3f:	00 0f 
    8b41:	0f 85 c4 fd ff ff    	jne    890b <stm_load_float+0x4b>
    8b47:	be 40 02 00 00       	mov    $0x240,%esi
    8b4c:	4c 89 e7             	mov    %r12,%rdi
    8b4f:	45 31 ed             	xor    %r13d,%r13d
    8b52:	e8 79 dd ff ff       	callq  68d0 <stm_rollback>
    8b57:	e9 32 fe ff ff       	jmpq   898e <stm_load_float+0xce>
    8b5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008b60 <stm_load_double>:
    8b60:	41 55                	push   %r13
    8b62:	41 54                	push   %r12
    8b64:	55                   	push   %rbp
    8b65:	53                   	push   %rbx
    8b66:	48 83 ec 28          	sub    $0x28,%rsp
    8b6a:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    8b71:	40 f6 c7 07          	test   $0x7,%dil
    8b75:	64 48 8b 28          	mov    %fs:(%rax),%rbp
    8b79:	0f 85 31 01 00 00    	jne    8cb0 <stm_load_double+0x150>
    8b7f:	48 89 fb             	mov    %rdi,%rbx
    8b82:	48 8d 05 f7 75 20 00 	lea    0x2075f7(%rip),%rax        # 210180 <_tinystm>
    8b89:	49 b9 fe df ff ff ff 	movabs $0xfffffffffffdffe,%r9
    8b90:	ff ff 0f 
    8b93:	48 c1 eb 02          	shr    $0x2,%rbx
    8b97:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
    8b9d:	48 01 c3             	add    %rax,%rbx
    8ba0:	48 8b 03             	mov    (%rbx),%rax
    8ba3:	a8 01                	test   $0x1,%al
    8ba5:	0f 85 a5 00 00 00    	jne    8c50 <stm_load_double+0xf0>
    8bab:	48 8b 0f             	mov    (%rdi),%rcx
    8bae:	48 8b 13             	mov    (%rbx),%rdx
    8bb1:	48 39 d0             	cmp    %rdx,%rax
    8bb4:	0f 85 89 00 00 00    	jne    8c43 <stm_load_double+0xe3>
    8bba:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    8bc1:	0f 85 09 01 00 00    	jne    8cd0 <stm_load_double+0x170>
    8bc7:	0f b6 95 ca 00 00 00 	movzbl 0xca(%rbp),%edx
    8bce:	49 89 c4             	mov    %rax,%r12
    8bd1:	49 c1 ec 04          	shr    $0x4,%r12
    8bd5:	83 e2 01             	and    $0x1,%edx
    8bd8:	4c 3b a5 e0 00 00 00 	cmp    0xe0(%rbp),%r12
    8bdf:	0f 87 fb 00 00 00    	ja     8ce0 <stm_load_double+0x180>
    8be5:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    8bea:	84 d2                	test   %dl,%dl
    8bec:	c5 fb 10 44 24 08    	vmovsd 0x8(%rsp),%xmm0
    8bf2:	75 30                	jne    8c24 <stm_load_double+0xc4>
    8bf4:	8b 85 f0 00 00 00    	mov    0xf0(%rbp),%eax
    8bfa:	3b 85 f4 00 00 00    	cmp    0xf4(%rbp),%eax
    8c00:	0f 84 7a 01 00 00    	je     8d80 <stm_load_double+0x220>
    8c06:	48 8b 95 e8 00 00 00 	mov    0xe8(%rbp),%rdx
    8c0d:	8d 48 01             	lea    0x1(%rax),%ecx
    8c10:	48 c1 e0 04          	shl    $0x4,%rax
    8c14:	89 8d f0 00 00 00    	mov    %ecx,0xf0(%rbp)
    8c1a:	48 01 d0             	add    %rdx,%rax
    8c1d:	4c 89 20             	mov    %r12,(%rax)
    8c20:	48 89 58 08          	mov    %rbx,0x8(%rax)
    8c24:	48 83 c4 28          	add    $0x28,%rsp
    8c28:	5b                   	pop    %rbx
    8c29:	5d                   	pop    %rbp
    8c2a:	41 5c                	pop    %r12
    8c2c:	41 5d                	pop    %r13
    8c2e:	c3                   	retq   
    8c2f:	90                   	nop
    8c30:	4c 89 9d e0 00 00 00 	mov    %r11,0xe0(%rbp)
    8c37:	48 8b 13             	mov    (%rbx),%rdx
    8c3a:	48 39 d0             	cmp    %rdx,%rax
    8c3d:	0f 84 70 01 00 00    	je     8db3 <stm_load_double+0x253>
    8c43:	48 89 d0             	mov    %rdx,%rax
    8c46:	a8 01                	test   $0x1,%al
    8c48:	0f 84 5d ff ff ff    	je     8bab <stm_load_double+0x4b>
    8c4e:	66 90                	xchg   %ax,%ax
    8c50:	48 8b 95 f8 00 00 00 	mov    0xf8(%rbp),%rdx
    8c57:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    8c5b:	48 39 d0             	cmp    %rdx,%rax
    8c5e:	0f 82 64 01 00 00    	jb     8dc8 <stm_load_double+0x268>
    8c64:	8b 8d 00 01 00 00    	mov    0x100(%rbp),%ecx
    8c6a:	48 c1 e1 06          	shl    $0x6,%rcx
    8c6e:	48 01 ca             	add    %rcx,%rdx
    8c71:	48 39 d0             	cmp    %rdx,%rax
    8c74:	72 17                	jb     8c8d <stm_load_double+0x12d>
    8c76:	e9 4d 01 00 00       	jmpq   8dc8 <stm_load_double+0x268>
    8c7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8c80:	48 8b 40 28          	mov    0x28(%rax),%rax
    8c84:	48 85 c0             	test   %rax,%rax
    8c87:	0f 84 13 01 00 00    	je     8da0 <stm_load_double+0x240>
    8c8d:	48 3b 38             	cmp    (%rax),%rdi
    8c90:	75 ee                	jne    8c80 <stm_load_double+0x120>
    8c92:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    8c97:	0f 84 03 01 00 00    	je     8da0 <stm_load_double+0x240>
    8c9d:	c5 fb 10 40 08       	vmovsd 0x8(%rax),%xmm0
    8ca2:	e9 7d ff ff ff       	jmpq   8c24 <stm_load_double+0xc4>
    8ca7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8cae:	00 00 
    8cb0:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    8cb5:	ba 08 00 00 00       	mov    $0x8,%edx
    8cba:	e8 f1 e4 ff ff       	callq  71b0 <stm_load_bytes>
    8cbf:	c5 fb 10 44 24 18    	vmovsd 0x18(%rsp),%xmm0
    8cc5:	48 83 c4 28          	add    $0x28,%rsp
    8cc9:	5b                   	pop    %rbx
    8cca:	5d                   	pop    %rbp
    8ccb:	41 5c                	pop    %r12
    8ccd:	41 5d                	pop    %r13
    8ccf:	c3                   	retq   
    8cd0:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    8cd5:	c5 fb 10 44 24 08    	vmovsd 0x8(%rsp),%xmm0
    8cdb:	e9 44 ff ff ff       	jmpq   8c24 <stm_load_double+0xc4>
    8ce0:	84 d2                	test   %dl,%dl
    8ce2:	0f 85 7d 00 00 00    	jne    8d65 <stm_load_double+0x205>
    8ce8:	4c 8b 1d 11 75 a0 00 	mov    0xa07511(%rip),%r11        # a10200 <_tinystm+0x800080>
    8cef:	4d 39 cb             	cmp    %r9,%r11
    8cf2:	77 71                	ja     8d65 <stm_load_double+0x205>
    8cf4:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
    8cfa:	48 8b b5 e8 00 00 00 	mov    0xe8(%rbp),%rsi
    8d01:	85 d2                	test   %edx,%edx
    8d03:	0f 8e 27 ff ff ff    	jle    8c30 <stm_load_double+0xd0>
    8d09:	44 8d 52 ff          	lea    -0x1(%rdx),%r10d
    8d0d:	49 83 c2 01          	add    $0x1,%r10
    8d11:	49 c1 e2 04          	shl    $0x4,%r10
    8d15:	49 01 f2             	add    %rsi,%r10
    8d18:	eb 36                	jmp    8d50 <stm_load_double+0x1f0>
    8d1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8d20:	4c 8b 85 f8 00 00 00 	mov    0xf8(%rbp),%r8
    8d27:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
    8d2b:	4c 39 c2             	cmp    %r8,%rdx
    8d2e:	72 35                	jb     8d65 <stm_load_double+0x205>
    8d30:	44 8b ad 00 01 00 00 	mov    0x100(%rbp),%r13d
    8d37:	49 c1 e5 06          	shl    $0x6,%r13
    8d3b:	4d 01 e8             	add    %r13,%r8
    8d3e:	4c 39 c2             	cmp    %r8,%rdx
    8d41:	73 22                	jae    8d65 <stm_load_double+0x205>
    8d43:	48 83 c6 10          	add    $0x10,%rsi
    8d47:	4c 39 d6             	cmp    %r10,%rsi
    8d4a:	0f 84 e0 fe ff ff    	je     8c30 <stm_load_double+0xd0>
    8d50:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    8d54:	48 8b 12             	mov    (%rdx),%rdx
    8d57:	f6 c2 01             	test   $0x1,%dl
    8d5a:	75 c4                	jne    8d20 <stm_load_double+0x1c0>
    8d5c:	48 c1 ea 04          	shr    $0x4,%rdx
    8d60:	48 3b 16             	cmp    (%rsi),%rdx
    8d63:	74 de                	je     8d43 <stm_load_double+0x1e3>
    8d65:	be 40 05 00 00       	mov    $0x540,%esi
    8d6a:	48 89 ef             	mov    %rbp,%rdi
    8d6d:	e8 5e db ff ff       	callq  68d0 <stm_rollback>
    8d72:	c5 f9 57 c0          	vxorpd %xmm0,%xmm0,%xmm0
    8d76:	e9 a9 fe ff ff       	jmpq   8c24 <stm_load_double+0xc4>
    8d7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8d80:	48 89 ef             	mov    %rbp,%rdi
    8d83:	e8 f8 da ff ff       	callq  6880 <stm_allocate_rs_entries.constprop.3>
    8d88:	8b 85 f0 00 00 00    	mov    0xf0(%rbp),%eax
    8d8e:	c5 fb 10 44 24 08    	vmovsd 0x8(%rsp),%xmm0
    8d94:	e9 6d fe ff ff       	jmpq   8c06 <stm_load_double+0xa6>
    8d99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8da0:	48 8b 07             	mov    (%rdi),%rax
    8da3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8da8:	c5 fb 10 44 24 08    	vmovsd 0x8(%rsp),%xmm0
    8dae:	e9 71 fe ff ff       	jmpq   8c24 <stm_load_double+0xc4>
    8db3:	0f b6 95 ca 00 00 00 	movzbl 0xca(%rbp),%edx
    8dba:	83 e2 01             	and    $0x1,%edx
    8dbd:	e9 23 fe ff ff       	jmpq   8be5 <stm_load_double+0x85>
    8dc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8dc8:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    8dcf:	0f 85 cb fd ff ff    	jne    8ba0 <stm_load_double+0x40>
    8dd5:	be 40 02 00 00       	mov    $0x240,%esi
    8dda:	48 89 ef             	mov    %rbp,%rdi
    8ddd:	e8 ee da ff ff       	callq  68d0 <stm_rollback>
    8de2:	c5 f9 57 c0          	vxorpd %xmm0,%xmm0,%xmm0
    8de6:	e9 39 fe ff ff       	jmpq   8c24 <stm_load_double+0xc4>
    8deb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008df0 <stm_store_u8>:
    8df0:	41 57                	push   %r15
    8df2:	41 56                	push   %r14
    8df4:	41 55                	push   %r13
    8df6:	41 54                	push   %r12
    8df8:	55                   	push   %rbp
    8df9:	53                   	push   %rbx
    8dfa:	48 83 ec 28          	sub    $0x28,%rsp
    8dfe:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    8e05:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    8e0c:	00 00 
    8e0e:	64 48 8b 18          	mov    %fs:(%rax),%rbx
    8e12:	48 89 f8             	mov    %rdi,%rax
    8e15:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    8e19:	83 e0 07             	and    $0x7,%eax
    8e1c:	48 89 fd             	mov    %rdi,%rbp
    8e1f:	49 89 fc             	mov    %rdi,%r12
    8e22:	40 88 74 04 10       	mov    %sil,0x10(%rsp,%rax,1)
    8e27:	c6 44 04 18 ff       	movb   $0xff,0x18(%rsp,%rax,1)
    8e2c:	48 c1 ed 02          	shr    $0x2,%rbp
    8e30:	48 8d 05 49 73 20 00 	lea    0x207349(%rip),%rax        # 210180 <_tinystm>
    8e37:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
    8e3c:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    8e41:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    8e47:	48 01 c5             	add    %rax,%rbp
    8e4a:	48 8b 45 00          	mov    0x0(%rbp),%rax
    8e4e:	a8 01                	test   $0x1,%al
    8e50:	0f 85 c2 00 00 00    	jne    8f18 <stm_store_u8+0x128>
    8e56:	49 89 c7             	mov    %rax,%r15
    8e59:	49 c1 ef 04          	shr    $0x4,%r15
    8e5d:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    8e64:	75 0d                	jne    8e73 <stm_store_u8+0x83>
    8e66:	4c 3b bb e0 00 00 00 	cmp    0xe0(%rbx),%r15
    8e6d:	0f 87 4d 01 00 00    	ja     8fc0 <stm_store_u8+0x1d0>
    8e73:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    8e79:	3b 93 04 01 00 00    	cmp    0x104(%rbx),%edx
    8e7f:	0f 84 13 01 00 00    	je     8f98 <stm_store_u8+0x1a8>
    8e85:	48 c1 e2 06          	shl    $0x6,%rdx
    8e89:	48 03 93 f8 00 00 00 	add    0xf8(%rbx),%rdx
    8e90:	48 89 d1             	mov    %rdx,%rcx
    8e93:	48 83 c9 01          	or     $0x1,%rcx
    8e97:	f0 48 0f b1 4d 00    	lock cmpxchg %rcx,0x0(%rbp)
    8e9d:	75 ab                	jne    8e4a <stm_store_u8+0x5a>
    8e9f:	4d 85 f6             	test   %r14,%r14
    8ea2:	4c 89 22             	mov    %r12,(%rdx)
    8ea5:	4c 89 72 10          	mov    %r14,0x10(%rdx)
    8ea9:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    8ead:	74 55                	je     8f04 <stm_store_u8+0x114>
    8eaf:	31 c0                	xor    %eax,%eax
    8eb1:	49 83 fe ff          	cmp    $0xffffffffffffffff,%r14
    8eb5:	74 49                	je     8f00 <stm_store_u8+0x110>
    8eb7:	49 8b 0c 24          	mov    (%r12),%rcx
    8ebb:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    8ebf:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    8ec6:	00 
    8ec7:	49 31 cd             	xor    %rcx,%r13
    8eca:	4d 21 ee             	and    %r13,%r14
    8ecd:	49 31 ce             	xor    %rcx,%r14
    8ed0:	48 85 c0             	test   %rax,%rax
    8ed3:	4c 89 72 08          	mov    %r14,0x8(%rdx)
    8ed7:	74 04                	je     8edd <stm_store_u8+0xed>
    8ed9:	48 89 50 28          	mov    %rdx,0x28(%rax)
    8edd:	83 83 00 01 00 00 01 	addl   $0x1,0x100(%rbx)
    8ee4:	83 83 08 01 00 00 01 	addl   $0x1,0x108(%rbx)
    8eeb:	48 83 c4 28          	add    $0x28,%rsp
    8eef:	5b                   	pop    %rbx
    8ef0:	5d                   	pop    %rbp
    8ef1:	41 5c                	pop    %r12
    8ef3:	41 5d                	pop    %r13
    8ef5:	41 5e                	pop    %r14
    8ef7:	41 5f                	pop    %r15
    8ef9:	c3                   	retq   
    8efa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8f00:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    8f04:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    8f08:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    8f0f:	00 
    8f10:	eb cb                	jmp    8edd <stm_store_u8+0xed>
    8f12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8f18:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    8f1f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    8f23:	48 39 d0             	cmp    %rdx,%rax
    8f26:	0f 82 3c 01 00 00    	jb     9068 <stm_store_u8+0x278>
    8f2c:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    8f32:	48 89 ce             	mov    %rcx,%rsi
    8f35:	48 c1 e1 06          	shl    $0x6,%rcx
    8f39:	48 01 d1             	add    %rdx,%rcx
    8f3c:	48 39 c8             	cmp    %rcx,%rax
    8f3f:	0f 83 23 01 00 00    	jae    9068 <stm_store_u8+0x278>
    8f45:	4d 85 f6             	test   %r14,%r14
    8f48:	75 16                	jne    8f60 <stm_store_u8+0x170>
    8f4a:	eb 9f                	jmp    8eeb <stm_store_u8+0xfb>
    8f4c:	0f 1f 40 00          	nopl   0x0(%rax)
    8f50:	48 8b 48 28          	mov    0x28(%rax),%rcx
    8f54:	48 85 c9             	test   %rcx,%rcx
    8f57:	0f 84 c3 00 00 00    	je     9020 <stm_store_u8+0x230>
    8f5d:	48 89 c8             	mov    %rcx,%rax
    8f60:	4c 3b 20             	cmp    (%rax),%r12
    8f63:	75 eb                	jne    8f50 <stm_store_u8+0x160>
    8f65:	49 83 fe ff          	cmp    $0xffffffffffffffff,%r14
    8f69:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8f6d:	74 16                	je     8f85 <stm_store_u8+0x195>
    8f6f:	48 85 d2             	test   %rdx,%rdx
    8f72:	0f 84 08 01 00 00    	je     9080 <stm_store_u8+0x290>
    8f78:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8f7c:	49 31 cd             	xor    %rcx,%r13
    8f7f:	4d 21 f5             	and    %r14,%r13
    8f82:	49 31 cd             	xor    %rcx,%r13
    8f85:	49 09 d6             	or     %rdx,%r14
    8f88:	4c 89 68 08          	mov    %r13,0x8(%rax)
    8f8c:	4c 89 70 10          	mov    %r14,0x10(%rax)
    8f90:	e9 56 ff ff ff       	jmpq   8eeb <stm_store_u8+0xfb>
    8f95:	0f 1f 00             	nopl   (%rax)
    8f98:	be 40 0c 00 00       	mov    $0xc40,%esi
    8f9d:	48 89 df             	mov    %rbx,%rdi
    8fa0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8fa5:	e8 26 d9 ff ff       	callq  68d0 <stm_rollback>
    8faa:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    8fb0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8fb5:	e9 cb fe ff ff       	jmpq   8e85 <stm_store_u8+0x95>
    8fba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8fc0:	8b 8b f0 00 00 00    	mov    0xf0(%rbx),%ecx
    8fc6:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    8fcd:	85 c9                	test   %ecx,%ecx
    8fcf:	0f 8e 9e fe ff ff    	jle    8e73 <stm_store_u8+0x83>
    8fd5:	48 3b 6a 08          	cmp    0x8(%rdx),%rbp
    8fd9:	74 28                	je     9003 <stm_store_u8+0x213>
    8fdb:	83 e9 01             	sub    $0x1,%ecx
    8fde:	48 83 c2 18          	add    $0x18,%rdx
    8fe2:	48 c1 e1 04          	shl    $0x4,%rcx
    8fe6:	48 01 d1             	add    %rdx,%rcx
    8fe9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8ff0:	48 39 d1             	cmp    %rdx,%rcx
    8ff3:	0f 84 7a fe ff ff    	je     8e73 <stm_store_u8+0x83>
    8ff9:	48 83 c2 10          	add    $0x10,%rdx
    8ffd:	48 3b 6a f0          	cmp    -0x10(%rdx),%rbp
    9001:	75 ed                	jne    8ff0 <stm_store_u8+0x200>
    9003:	be 40 06 00 00       	mov    $0x640,%esi
    9008:	48 83 c4 28          	add    $0x28,%rsp
    900c:	48 89 df             	mov    %rbx,%rdi
    900f:	5b                   	pop    %rbx
    9010:	5d                   	pop    %rbp
    9011:	41 5c                	pop    %r12
    9013:	41 5d                	pop    %r13
    9015:	41 5e                	pop    %r14
    9017:	41 5f                	pop    %r15
    9019:	e9 b2 d8 ff ff       	jmpq   68d0 <stm_rollback>
    901e:	66 90                	xchg   %ax,%ax
    9020:	3b b3 04 01 00 00    	cmp    0x104(%rbx),%esi
    9026:	4c 8b 78 18          	mov    0x18(%rax),%r15
    902a:	74 5d                	je     9089 <stm_store_u8+0x299>
    902c:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    9032:	48 c1 e1 06          	shl    $0x6,%rcx
    9036:	48 01 ca             	add    %rcx,%rdx
    9039:	49 83 fe ff          	cmp    $0xffffffffffffffff,%r14
    903d:	4c 89 22             	mov    %r12,(%rdx)
    9040:	4c 89 72 10          	mov    %r14,0x10(%rdx)
    9044:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    9048:	0f 85 69 fe ff ff    	jne    8eb7 <stm_store_u8+0xc7>
    904e:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    9052:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    9056:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    905d:	00 
    905e:	e9 76 fe ff ff       	jmpq   8ed9 <stm_store_u8+0xe9>
    9063:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9068:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    906f:	0f 85 d5 fd ff ff    	jne    8e4a <stm_store_u8+0x5a>
    9075:	be 40 04 00 00       	mov    $0x440,%esi
    907a:	eb 8c                	jmp    9008 <stm_store_u8+0x218>
    907c:	0f 1f 40 00          	nopl   0x0(%rax)
    9080:	49 8b 0c 24          	mov    (%r12),%rcx
    9084:	e9 f3 fe ff ff       	jmpq   8f7c <stm_store_u8+0x18c>
    9089:	be 40 0c 00 00       	mov    $0xc40,%esi
    908e:	48 89 df             	mov    %rbx,%rdi
    9091:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9096:	e8 35 d8 ff ff       	callq  68d0 <stm_rollback>
    909b:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    90a2:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    90a7:	eb 83                	jmp    902c <stm_store_u8+0x23c>
    90a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000090b0 <stm_store_char>:
    90b0:	41 57                	push   %r15
    90b2:	41 56                	push   %r14
    90b4:	41 55                	push   %r13
    90b6:	41 54                	push   %r12
    90b8:	55                   	push   %rbp
    90b9:	53                   	push   %rbx
    90ba:	48 83 ec 28          	sub    $0x28,%rsp
    90be:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    90c5:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    90cc:	00 00 
    90ce:	64 48 8b 18          	mov    %fs:(%rax),%rbx
    90d2:	48 89 f8             	mov    %rdi,%rax
    90d5:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    90d9:	83 e0 07             	and    $0x7,%eax
    90dc:	48 89 fd             	mov    %rdi,%rbp
    90df:	49 89 fc             	mov    %rdi,%r12
    90e2:	40 88 74 04 10       	mov    %sil,0x10(%rsp,%rax,1)
    90e7:	c6 44 04 18 ff       	movb   $0xff,0x18(%rsp,%rax,1)
    90ec:	48 c1 ed 02          	shr    $0x2,%rbp
    90f0:	48 8d 05 89 70 20 00 	lea    0x207089(%rip),%rax        # 210180 <_tinystm>
    90f7:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
    90fc:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    9101:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    9107:	48 01 c5             	add    %rax,%rbp
    910a:	48 8b 45 00          	mov    0x0(%rbp),%rax
    910e:	a8 01                	test   $0x1,%al
    9110:	0f 85 c2 00 00 00    	jne    91d8 <stm_store_char+0x128>
    9116:	49 89 c7             	mov    %rax,%r15
    9119:	49 c1 ef 04          	shr    $0x4,%r15
    911d:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    9124:	75 0d                	jne    9133 <stm_store_char+0x83>
    9126:	4c 3b bb e0 00 00 00 	cmp    0xe0(%rbx),%r15
    912d:	0f 87 4d 01 00 00    	ja     9280 <stm_store_char+0x1d0>
    9133:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    9139:	3b 93 04 01 00 00    	cmp    0x104(%rbx),%edx
    913f:	0f 84 13 01 00 00    	je     9258 <stm_store_char+0x1a8>
    9145:	48 c1 e2 06          	shl    $0x6,%rdx
    9149:	48 03 93 f8 00 00 00 	add    0xf8(%rbx),%rdx
    9150:	48 89 d1             	mov    %rdx,%rcx
    9153:	48 83 c9 01          	or     $0x1,%rcx
    9157:	f0 48 0f b1 4d 00    	lock cmpxchg %rcx,0x0(%rbp)
    915d:	75 ab                	jne    910a <stm_store_char+0x5a>
    915f:	4d 85 f6             	test   %r14,%r14
    9162:	4c 89 22             	mov    %r12,(%rdx)
    9165:	4c 89 72 10          	mov    %r14,0x10(%rdx)
    9169:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    916d:	74 55                	je     91c4 <stm_store_char+0x114>
    916f:	31 c0                	xor    %eax,%eax
    9171:	49 83 fe ff          	cmp    $0xffffffffffffffff,%r14
    9175:	74 49                	je     91c0 <stm_store_char+0x110>
    9177:	49 8b 0c 24          	mov    (%r12),%rcx
    917b:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    917f:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    9186:	00 
    9187:	49 31 cd             	xor    %rcx,%r13
    918a:	4d 21 ee             	and    %r13,%r14
    918d:	49 31 ce             	xor    %rcx,%r14
    9190:	48 85 c0             	test   %rax,%rax
    9193:	4c 89 72 08          	mov    %r14,0x8(%rdx)
    9197:	74 04                	je     919d <stm_store_char+0xed>
    9199:	48 89 50 28          	mov    %rdx,0x28(%rax)
    919d:	83 83 00 01 00 00 01 	addl   $0x1,0x100(%rbx)
    91a4:	83 83 08 01 00 00 01 	addl   $0x1,0x108(%rbx)
    91ab:	48 83 c4 28          	add    $0x28,%rsp
    91af:	5b                   	pop    %rbx
    91b0:	5d                   	pop    %rbp
    91b1:	41 5c                	pop    %r12
    91b3:	41 5d                	pop    %r13
    91b5:	41 5e                	pop    %r14
    91b7:	41 5f                	pop    %r15
    91b9:	c3                   	retq   
    91ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    91c0:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    91c4:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    91c8:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    91cf:	00 
    91d0:	eb cb                	jmp    919d <stm_store_char+0xed>
    91d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    91d8:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    91df:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    91e3:	48 39 d0             	cmp    %rdx,%rax
    91e6:	0f 82 3c 01 00 00    	jb     9328 <stm_store_char+0x278>
    91ec:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    91f2:	48 89 ce             	mov    %rcx,%rsi
    91f5:	48 c1 e1 06          	shl    $0x6,%rcx
    91f9:	48 01 d1             	add    %rdx,%rcx
    91fc:	48 39 c8             	cmp    %rcx,%rax
    91ff:	0f 83 23 01 00 00    	jae    9328 <stm_store_char+0x278>
    9205:	4d 85 f6             	test   %r14,%r14
    9208:	75 16                	jne    9220 <stm_store_char+0x170>
    920a:	eb 9f                	jmp    91ab <stm_store_char+0xfb>
    920c:	0f 1f 40 00          	nopl   0x0(%rax)
    9210:	48 8b 48 28          	mov    0x28(%rax),%rcx
    9214:	48 85 c9             	test   %rcx,%rcx
    9217:	0f 84 c3 00 00 00    	je     92e0 <stm_store_char+0x230>
    921d:	48 89 c8             	mov    %rcx,%rax
    9220:	4c 3b 20             	cmp    (%rax),%r12
    9223:	75 eb                	jne    9210 <stm_store_char+0x160>
    9225:	49 83 fe ff          	cmp    $0xffffffffffffffff,%r14
    9229:	48 8b 50 10          	mov    0x10(%rax),%rdx
    922d:	74 16                	je     9245 <stm_store_char+0x195>
    922f:	48 85 d2             	test   %rdx,%rdx
    9232:	0f 84 08 01 00 00    	je     9340 <stm_store_char+0x290>
    9238:	48 8b 48 08          	mov    0x8(%rax),%rcx
    923c:	49 31 cd             	xor    %rcx,%r13
    923f:	4d 21 f5             	and    %r14,%r13
    9242:	49 31 cd             	xor    %rcx,%r13
    9245:	49 09 d6             	or     %rdx,%r14
    9248:	4c 89 68 08          	mov    %r13,0x8(%rax)
    924c:	4c 89 70 10          	mov    %r14,0x10(%rax)
    9250:	e9 56 ff ff ff       	jmpq   91ab <stm_store_char+0xfb>
    9255:	0f 1f 00             	nopl   (%rax)
    9258:	be 40 0c 00 00       	mov    $0xc40,%esi
    925d:	48 89 df             	mov    %rbx,%rdi
    9260:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9265:	e8 66 d6 ff ff       	callq  68d0 <stm_rollback>
    926a:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    9270:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    9275:	e9 cb fe ff ff       	jmpq   9145 <stm_store_char+0x95>
    927a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9280:	8b 8b f0 00 00 00    	mov    0xf0(%rbx),%ecx
    9286:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    928d:	85 c9                	test   %ecx,%ecx
    928f:	0f 8e 9e fe ff ff    	jle    9133 <stm_store_char+0x83>
    9295:	48 3b 6a 08          	cmp    0x8(%rdx),%rbp
    9299:	74 28                	je     92c3 <stm_store_char+0x213>
    929b:	83 e9 01             	sub    $0x1,%ecx
    929e:	48 83 c2 18          	add    $0x18,%rdx
    92a2:	48 c1 e1 04          	shl    $0x4,%rcx
    92a6:	48 01 d1             	add    %rdx,%rcx
    92a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    92b0:	48 39 d1             	cmp    %rdx,%rcx
    92b3:	0f 84 7a fe ff ff    	je     9133 <stm_store_char+0x83>
    92b9:	48 83 c2 10          	add    $0x10,%rdx
    92bd:	48 3b 6a f0          	cmp    -0x10(%rdx),%rbp
    92c1:	75 ed                	jne    92b0 <stm_store_char+0x200>
    92c3:	be 40 06 00 00       	mov    $0x640,%esi
    92c8:	48 83 c4 28          	add    $0x28,%rsp
    92cc:	48 89 df             	mov    %rbx,%rdi
    92cf:	5b                   	pop    %rbx
    92d0:	5d                   	pop    %rbp
    92d1:	41 5c                	pop    %r12
    92d3:	41 5d                	pop    %r13
    92d5:	41 5e                	pop    %r14
    92d7:	41 5f                	pop    %r15
    92d9:	e9 f2 d5 ff ff       	jmpq   68d0 <stm_rollback>
    92de:	66 90                	xchg   %ax,%ax
    92e0:	3b b3 04 01 00 00    	cmp    0x104(%rbx),%esi
    92e6:	4c 8b 78 18          	mov    0x18(%rax),%r15
    92ea:	74 5d                	je     9349 <stm_store_char+0x299>
    92ec:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    92f2:	48 c1 e1 06          	shl    $0x6,%rcx
    92f6:	48 01 ca             	add    %rcx,%rdx
    92f9:	49 83 fe ff          	cmp    $0xffffffffffffffff,%r14
    92fd:	4c 89 22             	mov    %r12,(%rdx)
    9300:	4c 89 72 10          	mov    %r14,0x10(%rdx)
    9304:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    9308:	0f 85 69 fe ff ff    	jne    9177 <stm_store_char+0xc7>
    930e:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    9312:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    9316:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    931d:	00 
    931e:	e9 76 fe ff ff       	jmpq   9199 <stm_store_char+0xe9>
    9323:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9328:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    932f:	0f 85 d5 fd ff ff    	jne    910a <stm_store_char+0x5a>
    9335:	be 40 04 00 00       	mov    $0x440,%esi
    933a:	eb 8c                	jmp    92c8 <stm_store_char+0x218>
    933c:	0f 1f 40 00          	nopl   0x0(%rax)
    9340:	49 8b 0c 24          	mov    (%r12),%rcx
    9344:	e9 f3 fe ff ff       	jmpq   923c <stm_store_char+0x18c>
    9349:	be 40 0c 00 00       	mov    $0xc40,%esi
    934e:	48 89 df             	mov    %rbx,%rdi
    9351:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9356:	e8 75 d5 ff ff       	callq  68d0 <stm_rollback>
    935b:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    9362:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    9367:	eb 83                	jmp    92ec <stm_store_char+0x23c>
    9369:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000009370 <stm_store_uchar>:
    9370:	e9 7b fa ff ff       	jmpq   8df0 <stm_store_u8>
    9375:	90                   	nop
    9376:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    937d:	00 00 00 

0000000000009380 <stm_store_ptr>:
    9380:	41 56                	push   %r14
    9382:	41 55                	push   %r13
    9384:	49 89 f5             	mov    %rsi,%r13
    9387:	41 54                	push   %r12
    9389:	55                   	push   %rbp
    938a:	48 89 fd             	mov    %rdi,%rbp
    938d:	53                   	push   %rbx
    938e:	48 c1 ed 02          	shr    $0x2,%rbp
    9392:	49 89 fc             	mov    %rdi,%r12
    9395:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    939b:	48 83 ec 10          	sub    $0x10,%rsp
    939f:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    93a6:	64 48 8b 18          	mov    %fs:(%rax),%rbx
    93aa:	48 8d 05 cf 6d 20 00 	lea    0x206dcf(%rip),%rax        # 210180 <_tinystm>
    93b1:	48 01 c5             	add    %rax,%rbp
    93b4:	48 8b 45 00          	mov    0x0(%rbp),%rax
    93b8:	a8 01                	test   $0x1,%al
    93ba:	0f 85 88 00 00 00    	jne    9448 <stm_store_ptr+0xc8>
    93c0:	49 89 c6             	mov    %rax,%r14
    93c3:	49 c1 ee 04          	shr    $0x4,%r14
    93c7:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    93ce:	75 0d                	jne    93dd <stm_store_ptr+0x5d>
    93d0:	4c 3b b3 e0 00 00 00 	cmp    0xe0(%rbx),%r14
    93d7:	0f 87 f3 00 00 00    	ja     94d0 <stm_store_ptr+0x150>
    93dd:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    93e3:	3b 93 04 01 00 00    	cmp    0x104(%rbx),%edx
    93e9:	0f 84 b9 00 00 00    	je     94a8 <stm_store_ptr+0x128>
    93ef:	48 c1 e2 06          	shl    $0x6,%rdx
    93f3:	48 03 93 f8 00 00 00 	add    0xf8(%rbx),%rdx
    93fa:	48 89 d1             	mov    %rdx,%rcx
    93fd:	48 83 c9 01          	or     $0x1,%rcx
    9401:	f0 48 0f b1 4d 00    	lock cmpxchg %rcx,0x0(%rbp)
    9407:	75 ab                	jne    93b4 <stm_store_ptr+0x34>
    9409:	4c 89 22             	mov    %r12,(%rdx)
    940c:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
    9413:	ff 
    9414:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    9418:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    941c:	4c 89 72 18          	mov    %r14,0x18(%rdx)
    9420:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    9427:	00 
    9428:	83 83 00 01 00 00 01 	addl   $0x1,0x100(%rbx)
    942f:	83 83 08 01 00 00 01 	addl   $0x1,0x108(%rbx)
    9436:	48 83 c4 10          	add    $0x10,%rsp
    943a:	5b                   	pop    %rbx
    943b:	5d                   	pop    %rbp
    943c:	41 5c                	pop    %r12
    943e:	41 5d                	pop    %r13
    9440:	41 5e                	pop    %r14
    9442:	c3                   	retq   
    9443:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9448:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    944f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    9453:	48 39 d0             	cmp    %rdx,%rax
    9456:	0f 82 1c 01 00 00    	jb     9578 <stm_store_ptr+0x1f8>
    945c:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    9462:	48 89 ce             	mov    %rcx,%rsi
    9465:	48 c1 e1 06          	shl    $0x6,%rcx
    9469:	48 01 d1             	add    %rdx,%rcx
    946c:	48 39 c8             	cmp    %rcx,%rax
    946f:	72 1f                	jb     9490 <stm_store_ptr+0x110>
    9471:	e9 02 01 00 00       	jmpq   9578 <stm_store_ptr+0x1f8>
    9476:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    947d:	00 00 00 
    9480:	48 8b 48 28          	mov    0x28(%rax),%rcx
    9484:	48 85 c9             	test   %rcx,%rcx
    9487:	0f 84 a3 00 00 00    	je     9530 <stm_store_ptr+0x1b0>
    948d:	48 89 c8             	mov    %rcx,%rax
    9490:	4c 3b 20             	cmp    (%rax),%r12
    9493:	75 eb                	jne    9480 <stm_store_ptr+0x100>
    9495:	4c 89 68 08          	mov    %r13,0x8(%rax)
    9499:	48 c7 40 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rax)
    94a0:	ff 
    94a1:	eb 93                	jmp    9436 <stm_store_ptr+0xb6>
    94a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    94a8:	be 40 0c 00 00       	mov    $0xc40,%esi
    94ad:	48 89 df             	mov    %rbx,%rdi
    94b0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    94b5:	e8 16 d4 ff ff       	callq  68d0 <stm_rollback>
    94ba:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    94c0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    94c5:	e9 25 ff ff ff       	jmpq   93ef <stm_store_ptr+0x6f>
    94ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    94d0:	8b 8b f0 00 00 00    	mov    0xf0(%rbx),%ecx
    94d6:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    94dd:	85 c9                	test   %ecx,%ecx
    94df:	0f 8e f8 fe ff ff    	jle    93dd <stm_store_ptr+0x5d>
    94e5:	48 3b 6a 08          	cmp    0x8(%rdx),%rbp
    94e9:	74 28                	je     9513 <stm_store_ptr+0x193>
    94eb:	83 e9 01             	sub    $0x1,%ecx
    94ee:	48 83 c2 18          	add    $0x18,%rdx
    94f2:	48 c1 e1 04          	shl    $0x4,%rcx
    94f6:	48 01 d1             	add    %rdx,%rcx
    94f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9500:	48 39 d1             	cmp    %rdx,%rcx
    9503:	0f 84 d4 fe ff ff    	je     93dd <stm_store_ptr+0x5d>
    9509:	48 83 c2 10          	add    $0x10,%rdx
    950d:	48 3b 6a f0          	cmp    -0x10(%rdx),%rbp
    9511:	75 ed                	jne    9500 <stm_store_ptr+0x180>
    9513:	be 40 06 00 00       	mov    $0x640,%esi
    9518:	48 83 c4 10          	add    $0x10,%rsp
    951c:	48 89 df             	mov    %rbx,%rdi
    951f:	5b                   	pop    %rbx
    9520:	5d                   	pop    %rbp
    9521:	41 5c                	pop    %r12
    9523:	41 5d                	pop    %r13
    9525:	41 5e                	pop    %r14
    9527:	e9 a4 d3 ff ff       	jmpq   68d0 <stm_rollback>
    952c:	0f 1f 40 00          	nopl   0x0(%rax)
    9530:	3b b3 04 01 00 00    	cmp    0x104(%rbx),%esi
    9536:	4c 8b 70 18          	mov    0x18(%rax),%r14
    953a:	74 54                	je     9590 <stm_store_ptr+0x210>
    953c:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    9542:	48 c1 e1 06          	shl    $0x6,%rcx
    9546:	48 01 ca             	add    %rcx,%rdx
    9549:	4c 89 22             	mov    %r12,(%rdx)
    954c:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
    9553:	ff 
    9554:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    9558:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    955c:	4c 89 72 18          	mov    %r14,0x18(%rdx)
    9560:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    9567:	00 
    9568:	48 89 50 28          	mov    %rdx,0x28(%rax)
    956c:	e9 b7 fe ff ff       	jmpq   9428 <stm_store_ptr+0xa8>
    9571:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9578:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    957f:	0f 85 2f fe ff ff    	jne    93b4 <stm_store_ptr+0x34>
    9585:	be 40 04 00 00       	mov    $0x440,%esi
    958a:	eb 8c                	jmp    9518 <stm_store_ptr+0x198>
    958c:	0f 1f 40 00          	nopl   0x0(%rax)
    9590:	be 40 0c 00 00       	mov    $0xc40,%esi
    9595:	48 89 df             	mov    %rbx,%rdi
    9598:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    959d:	e8 2e d3 ff ff       	callq  68d0 <stm_rollback>
    95a2:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    95a9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    95ae:	eb 8c                	jmp    953c <stm_store_ptr+0x1bc>

00000000000095b0 <stm_store_bytes>:
    95b0:	48 85 d2             	test   %rdx,%rdx
    95b3:	0f 84 77 03 00 00    	je     9930 <stm_store_bytes+0x380>
    95b9:	41 57                	push   %r15
    95bb:	41 56                	push   %r14
    95bd:	48 89 f9             	mov    %rdi,%rcx
    95c0:	41 55                	push   %r13
    95c2:	41 54                	push   %r12
    95c4:	49 89 f7             	mov    %rsi,%r15
    95c7:	55                   	push   %rbp
    95c8:	53                   	push   %rbx
    95c9:	49 89 d5             	mov    %rdx,%r13
    95cc:	48 83 ec 58          	sub    $0x58,%rsp
    95d0:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    95d7:	64 48 8b 18          	mov    %fs:(%rax),%rbx
    95db:	89 f8                	mov    %edi,%eax
    95dd:	83 e0 07             	and    $0x7,%eax
    95e0:	0f 85 22 02 00 00    	jne    9808 <stm_store_bytes+0x258>
    95e6:	48 83 fa 07          	cmp    $0x7,%rdx
    95ea:	4c 8d 0d 8f 6b 20 00 	lea    0x206b8f(%rip),%r9        # 210180 <_tinystm>
    95f1:	0f 86 ff 00 00 00    	jbe    96f6 <stm_store_bytes+0x146>
    95f7:	49 8d 45 f8          	lea    -0x8(%r13),%rax
    95fb:	49 89 cc             	mov    %rcx,%r12
    95fe:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    9603:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
    9608:	4d 89 fe             	mov    %r15,%r14
    960b:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
    9612:	48 c1 e8 03          	shr    $0x3,%rax
    9616:	4d 89 cd             	mov    %r9,%r13
    9619:	4c 8d 54 c1 08       	lea    0x8(%rcx,%rax,8),%r10
    961e:	48 89 04 24          	mov    %rax,(%rsp)
    9622:	4c 89 d1             	mov    %r10,%rcx
    9625:	0f 1f 00             	nopl   (%rax)
    9628:	4c 89 e5             	mov    %r12,%rbp
    962b:	4d 8b 1e             	mov    (%r14),%r11
    962e:	48 c1 ed 02          	shr    $0x2,%rbp
    9632:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    9638:	4c 01 ed             	add    %r13,%rbp
    963b:	48 8b 45 00          	mov    0x0(%rbp),%rax
    963f:	a8 01                	test   $0x1,%al
    9641:	0f 85 f1 02 00 00    	jne    9938 <stm_store_bytes+0x388>
    9647:	48 89 c2             	mov    %rax,%rdx
    964a:	48 c1 ea 04          	shr    $0x4,%rdx
    964e:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    9655:	75 0d                	jne    9664 <stm_store_bytes+0xb4>
    9657:	48 3b 93 e0 00 00 00 	cmp    0xe0(%rbx),%rdx
    965e:	0f 87 84 03 00 00    	ja     99e8 <stm_store_bytes+0x438>
    9664:	8b b3 00 01 00 00    	mov    0x100(%rbx),%esi
    966a:	3b b3 04 01 00 00    	cmp    0x104(%rbx),%esi
    9670:	0f 84 22 03 00 00    	je     9998 <stm_store_bytes+0x3e8>
    9676:	48 c1 e6 06          	shl    $0x6,%rsi
    967a:	48 03 b3 f8 00 00 00 	add    0xf8(%rbx),%rsi
    9681:	48 89 f7             	mov    %rsi,%rdi
    9684:	48 83 cf 01          	or     $0x1,%rdi
    9688:	f0 48 0f b1 7d 00    	lock cmpxchg %rdi,0x0(%rbp)
    968e:	75 ab                	jne    963b <stm_store_bytes+0x8b>
    9690:	4c 89 26             	mov    %r12,(%rsi)
    9693:	4c 89 46 10          	mov    %r8,0x10(%rsi)
    9697:	48 89 6e 20          	mov    %rbp,0x20(%rsi)
    969b:	4c 89 5e 08          	mov    %r11,0x8(%rsi)
    969f:	48 89 56 18          	mov    %rdx,0x18(%rsi)
    96a3:	48 c7 46 28 00 00 00 	movq   $0x0,0x28(%rsi)
    96aa:	00 
    96ab:	83 83 00 01 00 00 01 	addl   $0x1,0x100(%rbx)
    96b2:	83 83 08 01 00 00 01 	addl   $0x1,0x108(%rbx)
    96b9:	49 83 c4 08          	add    $0x8,%r12
    96bd:	49 83 c6 08          	add    $0x8,%r14
    96c1:	4c 39 e1             	cmp    %r12,%rcx
    96c4:	0f 85 5e ff ff ff    	jne    9628 <stm_store_bytes+0x78>
    96ca:	4d 89 e9             	mov    %r13,%r9
    96cd:	48 8b 04 24          	mov    (%rsp),%rax
    96d1:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    96d6:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    96db:	48 8d 04 c5 08 00 00 	lea    0x8(,%rax,8),%rax
    96e2:	00 
    96e3:	41 83 e5 07          	and    $0x7,%r13d
    96e7:	48 01 c1             	add    %rax,%rcx
    96ea:	49 01 c7             	add    %rax,%r15
    96ed:	4d 85 ed             	test   %r13,%r13
    96f0:	0f 84 ff 00 00 00    	je     97f5 <stm_store_bytes+0x245>
    96f6:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
    96fb:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
    9700:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    9707:	00 00 
    9709:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    9710:	00 00 
    9712:	31 c0                	xor    %eax,%eax
    9714:	0f 1f 40 00          	nopl   0x0(%rax)
    9718:	41 0f b6 14 07       	movzbl (%r15,%rax,1),%edx
    971d:	c6 04 07 ff          	movb   $0xff,(%rdi,%rax,1)
    9721:	88 14 06             	mov    %dl,(%rsi,%rax,1)
    9724:	48 83 c0 01          	add    $0x1,%rax
    9728:	49 39 c5             	cmp    %rax,%r13
    972b:	75 eb                	jne    9718 <stm_store_bytes+0x168>
    972d:	48 89 cd             	mov    %rcx,%rbp
    9730:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
    9735:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
    973a:	48 c1 ed 02          	shr    $0x2,%rbp
    973e:	49 89 cf             	mov    %rcx,%r15
    9741:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    9747:	4c 01 cd             	add    %r9,%rbp
    974a:	48 8b 45 00          	mov    0x0(%rbp),%rax
    974e:	a8 01                	test   $0x1,%al
    9750:	0f 85 a2 03 00 00    	jne    9af8 <stm_store_bytes+0x548>
    9756:	49 89 c6             	mov    %rax,%r14
    9759:	49 c1 ee 04          	shr    $0x4,%r14
    975d:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    9764:	75 0d                	jne    9773 <stm_store_bytes+0x1c3>
    9766:	4c 3b b3 e0 00 00 00 	cmp    0xe0(%rbx),%r14
    976d:	0f 87 47 05 00 00    	ja     9cba <stm_store_bytes+0x70a>
    9773:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    9779:	3b 93 04 01 00 00    	cmp    0x104(%rbx),%edx
    977f:	0f 84 78 04 00 00    	je     9bfd <stm_store_bytes+0x64d>
    9785:	48 c1 e2 06          	shl    $0x6,%rdx
    9789:	48 03 93 f8 00 00 00 	add    0xf8(%rbx),%rdx
    9790:	48 89 d6             	mov    %rdx,%rsi
    9793:	48 83 ce 01          	or     $0x1,%rsi
    9797:	f0 48 0f b1 75 00    	lock cmpxchg %rsi,0x0(%rbp)
    979d:	75 ab                	jne    974a <stm_store_bytes+0x19a>
    979f:	4d 85 ed             	test   %r13,%r13
    97a2:	4c 89 f9             	mov    %r15,%rcx
    97a5:	4c 89 3a             	mov    %r15,(%rdx)
    97a8:	4c 89 6a 10          	mov    %r13,0x10(%rdx)
    97ac:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    97b0:	0f 84 a6 02 00 00    	je     9a5c <stm_store_bytes+0x4ac>
    97b6:	31 c0                	xor    %eax,%eax
    97b8:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
    97bc:	0f 84 96 02 00 00    	je     9a58 <stm_store_bytes+0x4a8>
    97c2:	48 8b 09             	mov    (%rcx),%rcx
    97c5:	4c 89 72 18          	mov    %r14,0x18(%rdx)
    97c9:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    97d0:	00 
    97d1:	49 31 cc             	xor    %rcx,%r12
    97d4:	4d 21 e5             	and    %r12,%r13
    97d7:	49 31 cd             	xor    %rcx,%r13
    97da:	48 85 c0             	test   %rax,%rax
    97dd:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    97e1:	74 04                	je     97e7 <stm_store_bytes+0x237>
    97e3:	48 89 50 28          	mov    %rdx,0x28(%rax)
    97e7:	83 83 00 01 00 00 01 	addl   $0x1,0x100(%rbx)
    97ee:	83 83 08 01 00 00 01 	addl   $0x1,0x108(%rbx)
    97f5:	48 83 c4 58          	add    $0x58,%rsp
    97f9:	5b                   	pop    %rbx
    97fa:	5d                   	pop    %rbp
    97fb:	41 5c                	pop    %r12
    97fd:	41 5d                	pop    %r13
    97ff:	41 5e                	pop    %r14
    9801:	41 5f                	pop    %r15
    9803:	c3                   	retq   
    9804:	0f 1f 40 00          	nopl   0x0(%rax)
    9808:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    980c:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    9813:	00 00 
    9815:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    981c:	00 00 
    981e:	49 89 cc             	mov    %rcx,%r12
    9821:	eb 0a                	jmp    982d <stm_store_bytes+0x27d>
    9823:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9828:	4d 85 ed             	test   %r13,%r13
    982b:	74 20                	je     984d <stm_store_bytes+0x29d>
    982d:	49 83 c7 01          	add    $0x1,%r15
    9831:	41 0f b6 4f ff       	movzbl -0x1(%r15),%ecx
    9836:	89 c2                	mov    %eax,%edx
    9838:	83 c0 01             	add    $0x1,%eax
    983b:	49 83 ed 01          	sub    $0x1,%r13
    983f:	c6 44 14 48 ff       	movb   $0xff,0x48(%rsp,%rdx,1)
    9844:	83 f8 07             	cmp    $0x7,%eax
    9847:	88 4c 14 40          	mov    %cl,0x40(%rsp,%rdx,1)
    984b:	76 db                	jbe    9828 <stm_store_bytes+0x278>
    984d:	4c 89 e5             	mov    %r12,%rbp
    9850:	4c 8d 0d 29 69 20 00 	lea    0x206929(%rip),%r9        # 210180 <_tinystm>
    9857:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
    985c:	48 c1 ed 02          	shr    $0x2,%rbp
    9860:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
    9865:	49 8d 4c 24 08       	lea    0x8(%r12),%rcx
    986a:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    9870:	4c 01 cd             	add    %r9,%rbp
    9873:	48 8b 45 00          	mov    0x0(%rbp),%rax
    9877:	a8 01                	test   $0x1,%al
    9879:	0f 85 fe 02 00 00    	jne    9b7d <stm_store_bytes+0x5cd>
    987f:	49 89 c2             	mov    %rax,%r10
    9882:	49 c1 ea 04          	shr    $0x4,%r10
    9886:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    988d:	75 0d                	jne    989c <stm_store_bytes+0x2ec>
    988f:	4c 3b 93 e0 00 00 00 	cmp    0xe0(%rbx),%r10
    9896:	0f 87 7a 04 00 00    	ja     9d16 <stm_store_bytes+0x766>
    989c:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    98a2:	3b 93 04 01 00 00    	cmp    0x104(%rbx),%edx
    98a8:	0f 84 6f 03 00 00    	je     9c1d <stm_store_bytes+0x66d>
    98ae:	48 c1 e2 06          	shl    $0x6,%rdx
    98b2:	48 03 93 f8 00 00 00 	add    0xf8(%rbx),%rdx
    98b9:	48 89 d6             	mov    %rdx,%rsi
    98bc:	48 83 ce 01          	or     $0x1,%rsi
    98c0:	f0 48 0f b1 75 00    	lock cmpxchg %rsi,0x0(%rbp)
    98c6:	75 ab                	jne    9873 <stm_store_bytes+0x2c3>
    98c8:	4d 85 c0             	test   %r8,%r8
    98cb:	4c 89 22             	mov    %r12,(%rdx)
    98ce:	4c 89 42 10          	mov    %r8,0x10(%rdx)
    98d2:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    98d6:	0f 84 d0 01 00 00    	je     9aac <stm_store_bytes+0x4fc>
    98dc:	31 c0                	xor    %eax,%eax
    98de:	49 83 f8 ff          	cmp    $0xffffffffffffffff,%r8
    98e2:	0f 84 c0 01 00 00    	je     9aa8 <stm_store_bytes+0x4f8>
    98e8:	49 8b 34 24          	mov    (%r12),%rsi
    98ec:	4c 89 52 18          	mov    %r10,0x18(%rdx)
    98f0:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    98f7:	00 
    98f8:	49 31 f6             	xor    %rsi,%r14
    98fb:	4d 21 f0             	and    %r14,%r8
    98fe:	49 31 f0             	xor    %rsi,%r8
    9901:	48 85 c0             	test   %rax,%rax
    9904:	4c 89 42 08          	mov    %r8,0x8(%rdx)
    9908:	74 04                	je     990e <stm_store_bytes+0x35e>
    990a:	48 89 50 28          	mov    %rdx,0x28(%rax)
    990e:	83 83 00 01 00 00 01 	addl   $0x1,0x100(%rbx)
    9915:	83 83 08 01 00 00 01 	addl   $0x1,0x108(%rbx)
    991c:	49 83 fd 07          	cmp    $0x7,%r13
    9920:	0f 87 d1 fc ff ff    	ja     95f7 <stm_store_bytes+0x47>
    9926:	e9 c2 fd ff ff       	jmpq   96ed <stm_store_bytes+0x13d>
    992b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9930:	f3 c3                	repz retq 
    9932:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9938:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    993f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    9943:	48 39 d0             	cmp    %rdx,%rax
    9946:	0f 82 74 01 00 00    	jb     9ac0 <stm_store_bytes+0x510>
    994c:	8b b3 00 01 00 00    	mov    0x100(%rbx),%esi
    9952:	48 89 f7             	mov    %rsi,%rdi
    9955:	48 c1 e6 06          	shl    $0x6,%rsi
    9959:	48 01 d6             	add    %rdx,%rsi
    995c:	48 39 f0             	cmp    %rsi,%rax
    995f:	72 1f                	jb     9980 <stm_store_bytes+0x3d0>
    9961:	e9 5a 01 00 00       	jmpq   9ac0 <stm_store_bytes+0x510>
    9966:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    996d:	00 00 00 
    9970:	48 8b 50 28          	mov    0x28(%rax),%rdx
    9974:	48 85 d2             	test   %rdx,%rdx
    9977:	0f 84 f3 00 00 00    	je     9a70 <stm_store_bytes+0x4c0>
    997d:	48 89 d0             	mov    %rdx,%rax
    9980:	4c 3b 20             	cmp    (%rax),%r12
    9983:	75 eb                	jne    9970 <stm_store_bytes+0x3c0>
    9985:	4c 89 58 08          	mov    %r11,0x8(%rax)
    9989:	4c 89 40 10          	mov    %r8,0x10(%rax)
    998d:	e9 27 fd ff ff       	jmpq   96b9 <stm_store_bytes+0x109>
    9992:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9998:	be 40 0c 00 00       	mov    $0xc40,%esi
    999d:	48 89 df             	mov    %rbx,%rdi
    99a0:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
    99a5:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
    99aa:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
    99af:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    99b4:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    99b9:	e8 12 cf ff ff       	callq  68d0 <stm_rollback>
    99be:	8b b3 00 01 00 00    	mov    0x100(%rbx),%esi
    99c4:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    99c9:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    99ce:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
    99d3:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    99d8:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    99dd:	e9 94 fc ff ff       	jmpq   9676 <stm_store_bytes+0xc6>
    99e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    99e8:	8b bb f0 00 00 00    	mov    0xf0(%rbx),%edi
    99ee:	48 8b b3 e8 00 00 00 	mov    0xe8(%rbx),%rsi
    99f5:	85 ff                	test   %edi,%edi
    99f7:	0f 8e 67 fc ff ff    	jle    9664 <stm_store_bytes+0xb4>
    99fd:	48 39 6e 08          	cmp    %rbp,0x8(%rsi)
    9a01:	74 28                	je     9a2b <stm_store_bytes+0x47b>
    9a03:	83 ef 01             	sub    $0x1,%edi
    9a06:	48 83 c6 18          	add    $0x18,%rsi
    9a0a:	48 c1 e7 04          	shl    $0x4,%rdi
    9a0e:	48 01 f7             	add    %rsi,%rdi
    9a11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9a18:	48 39 f7             	cmp    %rsi,%rdi
    9a1b:	0f 84 43 fc ff ff    	je     9664 <stm_store_bytes+0xb4>
    9a21:	48 83 c6 10          	add    $0x10,%rsi
    9a25:	48 3b 6e f0          	cmp    -0x10(%rsi),%rbp
    9a29:	75 ed                	jne    9a18 <stm_store_bytes+0x468>
    9a2b:	be 40 06 00 00       	mov    $0x640,%esi
    9a30:	48 89 df             	mov    %rbx,%rdi
    9a33:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    9a38:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    9a3d:	e8 8e ce ff ff       	callq  68d0 <stm_rollback>
    9a42:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    9a47:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    9a4c:	e9 68 fc ff ff       	jmpq   96b9 <stm_store_bytes+0x109>
    9a51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9a58:	4c 89 62 08          	mov    %r12,0x8(%rdx)
    9a5c:	4c 89 72 18          	mov    %r14,0x18(%rdx)
    9a60:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    9a67:	00 
    9a68:	e9 7a fd ff ff       	jmpq   97e7 <stm_store_bytes+0x237>
    9a6d:	0f 1f 00             	nopl   (%rax)
    9a70:	3b bb 04 01 00 00    	cmp    0x104(%rbx),%edi
    9a76:	48 8b 50 18          	mov    0x18(%rax),%rdx
    9a7a:	0f 84 e5 01 00 00    	je     9c65 <stm_store_bytes+0x6b5>
    9a80:	4c 89 26             	mov    %r12,(%rsi)
    9a83:	4c 89 46 10          	mov    %r8,0x10(%rsi)
    9a87:	48 89 6e 20          	mov    %rbp,0x20(%rsi)
    9a8b:	4c 89 5e 08          	mov    %r11,0x8(%rsi)
    9a8f:	48 89 56 18          	mov    %rdx,0x18(%rsi)
    9a93:	48 c7 46 28 00 00 00 	movq   $0x0,0x28(%rsi)
    9a9a:	00 
    9a9b:	48 89 70 28          	mov    %rsi,0x28(%rax)
    9a9f:	e9 07 fc ff ff       	jmpq   96ab <stm_store_bytes+0xfb>
    9aa4:	0f 1f 40 00          	nopl   0x0(%rax)
    9aa8:	4c 89 72 08          	mov    %r14,0x8(%rdx)
    9aac:	4c 89 52 18          	mov    %r10,0x18(%rdx)
    9ab0:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    9ab7:	00 
    9ab8:	e9 51 fe ff ff       	jmpq   990e <stm_store_bytes+0x35e>
    9abd:	0f 1f 00             	nopl   (%rax)
    9ac0:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    9ac7:	0f 85 6e fb ff ff    	jne    963b <stm_store_bytes+0x8b>
    9acd:	be 40 04 00 00       	mov    $0x440,%esi
    9ad2:	48 89 df             	mov    %rbx,%rdi
    9ad5:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    9ada:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    9adf:	e8 ec cd ff ff       	callq  68d0 <stm_rollback>
    9ae4:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    9ae9:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    9aee:	e9 c6 fb ff ff       	jmpq   96b9 <stm_store_bytes+0x109>
    9af3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9af8:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    9aff:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    9b03:	48 39 d0             	cmp    %rdx,%rax
    9b06:	0f 82 b2 02 00 00    	jb     9dbe <stm_store_bytes+0x80e>
    9b0c:	8b b3 00 01 00 00    	mov    0x100(%rbx),%esi
    9b12:	48 89 f7             	mov    %rsi,%rdi
    9b15:	48 c1 e6 06          	shl    $0x6,%rsi
    9b19:	48 01 d6             	add    %rdx,%rsi
    9b1c:	48 39 f0             	cmp    %rsi,%rax
    9b1f:	0f 83 99 02 00 00    	jae    9dbe <stm_store_bytes+0x80e>
    9b25:	4d 85 ed             	test   %r13,%r13
    9b28:	4c 89 f9             	mov    %r15,%rcx
    9b2b:	75 1b                	jne    9b48 <stm_store_bytes+0x598>
    9b2d:	e9 c3 fc ff ff       	jmpq   97f5 <stm_store_bytes+0x245>
    9b32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9b38:	48 8b 70 28          	mov    0x28(%rax),%rsi
    9b3c:	48 85 f6             	test   %rsi,%rsi
    9b3f:	0f 84 32 02 00 00    	je     9d77 <stm_store_bytes+0x7c7>
    9b45:	48 89 f0             	mov    %rsi,%rax
    9b48:	48 3b 08             	cmp    (%rax),%rcx
    9b4b:	75 eb                	jne    9b38 <stm_store_bytes+0x588>
    9b4d:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
    9b51:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9b55:	74 16                	je     9b6d <stm_store_bytes+0x5bd>
    9b57:	48 85 d2             	test   %rdx,%rdx
    9b5a:	0f 84 f3 02 00 00    	je     9e53 <stm_store_bytes+0x8a3>
    9b60:	48 8b 48 08          	mov    0x8(%rax),%rcx
    9b64:	49 31 cc             	xor    %rcx,%r12
    9b67:	4d 21 ec             	and    %r13,%r12
    9b6a:	49 31 cc             	xor    %rcx,%r12
    9b6d:	49 09 d5             	or     %rdx,%r13
    9b70:	4c 89 60 08          	mov    %r12,0x8(%rax)
    9b74:	4c 89 68 10          	mov    %r13,0x10(%rax)
    9b78:	e9 78 fc ff ff       	jmpq   97f5 <stm_store_bytes+0x245>
    9b7d:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    9b84:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    9b88:	48 39 d0             	cmp    %rdx,%rax
    9b8b:	0f 82 47 02 00 00    	jb     9dd8 <stm_store_bytes+0x828>
    9b91:	8b b3 00 01 00 00    	mov    0x100(%rbx),%esi
    9b97:	48 89 f7             	mov    %rsi,%rdi
    9b9a:	48 c1 e6 06          	shl    $0x6,%rsi
    9b9e:	48 01 d6             	add    %rdx,%rsi
    9ba1:	48 39 f0             	cmp    %rsi,%rax
    9ba4:	0f 83 2e 02 00 00    	jae    9dd8 <stm_store_bytes+0x828>
    9baa:	4d 85 c0             	test   %r8,%r8
    9bad:	0f 84 69 fd ff ff    	je     991c <stm_store_bytes+0x36c>
    9bb3:	eb 13                	jmp    9bc8 <stm_store_bytes+0x618>
    9bb5:	0f 1f 00             	nopl   (%rax)
    9bb8:	48 8b 70 28          	mov    0x28(%rax),%rsi
    9bbc:	48 85 f6             	test   %rsi,%rsi
    9bbf:	0f 84 4b 02 00 00    	je     9e10 <stm_store_bytes+0x860>
    9bc5:	48 89 f0             	mov    %rsi,%rax
    9bc8:	4c 3b 20             	cmp    (%rax),%r12
    9bcb:	75 eb                	jne    9bb8 <stm_store_bytes+0x608>
    9bcd:	49 83 f8 ff          	cmp    $0xffffffffffffffff,%r8
    9bd1:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9bd5:	74 16                	je     9bed <stm_store_bytes+0x63d>
    9bd7:	48 85 d2             	test   %rdx,%rdx
    9bda:	0f 84 7b 02 00 00    	je     9e5b <stm_store_bytes+0x8ab>
    9be0:	48 8b 70 08          	mov    0x8(%rax),%rsi
    9be4:	49 31 f6             	xor    %rsi,%r14
    9be7:	4d 21 c6             	and    %r8,%r14
    9bea:	49 31 f6             	xor    %rsi,%r14
    9bed:	4c 09 c2             	or     %r8,%rdx
    9bf0:	4c 89 70 08          	mov    %r14,0x8(%rax)
    9bf4:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9bf8:	e9 1f fd ff ff       	jmpq   991c <stm_store_bytes+0x36c>
    9bfd:	be 40 0c 00 00       	mov    $0xc40,%esi
    9c02:	48 89 df             	mov    %rbx,%rdi
    9c05:	48 89 04 24          	mov    %rax,(%rsp)
    9c09:	e8 c2 cc ff ff       	callq  68d0 <stm_rollback>
    9c0e:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    9c14:	48 8b 04 24          	mov    (%rsp),%rax
    9c18:	e9 68 fb ff ff       	jmpq   9785 <stm_store_bytes+0x1d5>
    9c1d:	be 40 0c 00 00       	mov    $0xc40,%esi
    9c22:	48 89 df             	mov    %rbx,%rdi
    9c25:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
    9c2a:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    9c2f:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    9c34:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    9c39:	48 89 04 24          	mov    %rax,(%rsp)
    9c3d:	e8 8e cc ff ff       	callq  68d0 <stm_rollback>
    9c42:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    9c48:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
    9c4d:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    9c52:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    9c57:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    9c5c:	48 8b 04 24          	mov    (%rsp),%rax
    9c60:	e9 49 fc ff ff       	jmpq   98ae <stm_store_bytes+0x2fe>
    9c65:	be 40 0c 00 00       	mov    $0xc40,%esi
    9c6a:	48 89 df             	mov    %rbx,%rdi
    9c6d:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    9c72:	4c 89 44 24 30       	mov    %r8,0x30(%rsp)
    9c77:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    9c7c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    9c81:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    9c86:	e8 45 cc ff ff       	callq  68d0 <stm_rollback>
    9c8b:	8b b3 00 01 00 00    	mov    0x100(%rbx),%esi
    9c91:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    9c96:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    9c9b:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    9ca0:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    9ca5:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
    9caa:	48 c1 e6 06          	shl    $0x6,%rsi
    9cae:	48 03 b3 f8 00 00 00 	add    0xf8(%rbx),%rsi
    9cb5:	e9 c6 fd ff ff       	jmpq   9a80 <stm_store_bytes+0x4d0>
    9cba:	8b b3 f0 00 00 00    	mov    0xf0(%rbx),%esi
    9cc0:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    9cc7:	85 f6                	test   %esi,%esi
    9cc9:	0f 8e a4 fa ff ff    	jle    9773 <stm_store_bytes+0x1c3>
    9ccf:	48 3b 6a 08          	cmp    0x8(%rdx),%rbp
    9cd3:	74 26                	je     9cfb <stm_store_bytes+0x74b>
    9cd5:	83 ee 01             	sub    $0x1,%esi
    9cd8:	48 83 c2 18          	add    $0x18,%rdx
    9cdc:	48 c1 e6 04          	shl    $0x4,%rsi
    9ce0:	48 01 d6             	add    %rdx,%rsi
    9ce3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9ce8:	48 39 d6             	cmp    %rdx,%rsi
    9ceb:	0f 84 82 fa ff ff    	je     9773 <stm_store_bytes+0x1c3>
    9cf1:	48 83 c2 10          	add    $0x10,%rdx
    9cf5:	48 3b 6a f0          	cmp    -0x10(%rdx),%rbp
    9cf9:	75 ed                	jne    9ce8 <stm_store_bytes+0x738>
    9cfb:	be 40 06 00 00       	mov    $0x640,%esi
    9d00:	48 83 c4 58          	add    $0x58,%rsp
    9d04:	48 89 df             	mov    %rbx,%rdi
    9d07:	5b                   	pop    %rbx
    9d08:	5d                   	pop    %rbp
    9d09:	41 5c                	pop    %r12
    9d0b:	41 5d                	pop    %r13
    9d0d:	41 5e                	pop    %r14
    9d0f:	41 5f                	pop    %r15
    9d11:	e9 ba cb ff ff       	jmpq   68d0 <stm_rollback>
    9d16:	8b b3 f0 00 00 00    	mov    0xf0(%rbx),%esi
    9d1c:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    9d23:	85 f6                	test   %esi,%esi
    9d25:	0f 8e 71 fb ff ff    	jle    989c <stm_store_bytes+0x2ec>
    9d2b:	48 3b 6a 08          	cmp    0x8(%rdx),%rbp
    9d2f:	74 22                	je     9d53 <stm_store_bytes+0x7a3>
    9d31:	83 ee 01             	sub    $0x1,%esi
    9d34:	48 83 c2 18          	add    $0x18,%rdx
    9d38:	48 c1 e6 04          	shl    $0x4,%rsi
    9d3c:	48 01 d6             	add    %rdx,%rsi
    9d3f:	90                   	nop
    9d40:	48 39 d6             	cmp    %rdx,%rsi
    9d43:	0f 84 53 fb ff ff    	je     989c <stm_store_bytes+0x2ec>
    9d49:	48 83 c2 10          	add    $0x10,%rdx
    9d4d:	48 3b 6a f0          	cmp    -0x10(%rdx),%rbp
    9d51:	75 ed                	jne    9d40 <stm_store_bytes+0x790>
    9d53:	be 40 06 00 00       	mov    $0x640,%esi
    9d58:	48 89 df             	mov    %rbx,%rdi
    9d5b:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    9d60:	4c 89 0c 24          	mov    %r9,(%rsp)
    9d64:	e8 67 cb ff ff       	callq  68d0 <stm_rollback>
    9d69:	4c 8b 0c 24          	mov    (%rsp),%r9
    9d6d:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    9d72:	e9 a5 fb ff ff       	jmpq   991c <stm_store_bytes+0x36c>
    9d77:	3b bb 04 01 00 00    	cmp    0x104(%rbx),%edi
    9d7d:	4c 8b 70 18          	mov    0x18(%rax),%r14
    9d81:	0f 84 dd 00 00 00    	je     9e64 <stm_store_bytes+0x8b4>
    9d87:	8b b3 00 01 00 00    	mov    0x100(%rbx),%esi
    9d8d:	48 c1 e6 06          	shl    $0x6,%rsi
    9d91:	48 01 f2             	add    %rsi,%rdx
    9d94:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
    9d98:	48 89 0a             	mov    %rcx,(%rdx)
    9d9b:	4c 89 6a 10          	mov    %r13,0x10(%rdx)
    9d9f:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    9da3:	0f 85 19 fa ff ff    	jne    97c2 <stm_store_bytes+0x212>
    9da9:	4c 89 62 08          	mov    %r12,0x8(%rdx)
    9dad:	4c 89 72 18          	mov    %r14,0x18(%rdx)
    9db1:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    9db8:	00 
    9db9:	e9 25 fa ff ff       	jmpq   97e3 <stm_store_bytes+0x233>
    9dbe:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    9dc5:	0f 85 7f f9 ff ff    	jne    974a <stm_store_bytes+0x19a>
    9dcb:	be 40 04 00 00       	mov    $0x440,%esi
    9dd0:	e9 2b ff ff ff       	jmpq   9d00 <stm_store_bytes+0x750>
    9dd5:	0f 1f 00             	nopl   (%rax)
    9dd8:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    9ddf:	0f 85 8e fa ff ff    	jne    9873 <stm_store_bytes+0x2c3>
    9de5:	be 40 04 00 00       	mov    $0x440,%esi
    9dea:	48 89 df             	mov    %rbx,%rdi
    9ded:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    9df2:	4c 89 0c 24          	mov    %r9,(%rsp)
    9df6:	e8 d5 ca ff ff       	callq  68d0 <stm_rollback>
    9dfb:	4c 8b 0c 24          	mov    (%rsp),%r9
    9dff:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    9e04:	e9 13 fb ff ff       	jmpq   991c <stm_store_bytes+0x36c>
    9e09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9e10:	3b bb 04 01 00 00    	cmp    0x104(%rbx),%edi
    9e16:	4c 8b 50 18          	mov    0x18(%rax),%r10
    9e1a:	74 73                	je     9e8f <stm_store_bytes+0x8df>
    9e1c:	8b b3 00 01 00 00    	mov    0x100(%rbx),%esi
    9e22:	48 c1 e6 06          	shl    $0x6,%rsi
    9e26:	48 01 f2             	add    %rsi,%rdx
    9e29:	49 83 f8 ff          	cmp    $0xffffffffffffffff,%r8
    9e2d:	4c 89 22             	mov    %r12,(%rdx)
    9e30:	4c 89 42 10          	mov    %r8,0x10(%rdx)
    9e34:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    9e38:	0f 85 aa fa ff ff    	jne    98e8 <stm_store_bytes+0x338>
    9e3e:	4c 89 72 08          	mov    %r14,0x8(%rdx)
    9e42:	4c 89 52 18          	mov    %r10,0x18(%rdx)
    9e46:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    9e4d:	00 
    9e4e:	e9 b7 fa ff ff       	jmpq   990a <stm_store_bytes+0x35a>
    9e53:	48 8b 09             	mov    (%rcx),%rcx
    9e56:	e9 09 fd ff ff       	jmpq   9b64 <stm_store_bytes+0x5b4>
    9e5b:	49 8b 34 24          	mov    (%r12),%rsi
    9e5f:	e9 80 fd ff ff       	jmpq   9be4 <stm_store_bytes+0x634>
    9e64:	be 40 0c 00 00       	mov    $0xc40,%esi
    9e69:	48 89 df             	mov    %rbx,%rdi
    9e6c:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    9e71:	48 89 04 24          	mov    %rax,(%rsp)
    9e75:	e8 56 ca ff ff       	callq  68d0 <stm_rollback>
    9e7a:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    9e81:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    9e86:	48 8b 04 24          	mov    (%rsp),%rax
    9e8a:	e9 f8 fe ff ff       	jmpq   9d87 <stm_store_bytes+0x7d7>
    9e8f:	be 40 0c 00 00       	mov    $0xc40,%esi
    9e94:	48 89 df             	mov    %rbx,%rdi
    9e97:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
    9e9c:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    9ea1:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    9ea6:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    9eab:	48 89 04 24          	mov    %rax,(%rsp)
    9eaf:	e8 1c ca ff ff       	callq  68d0 <stm_rollback>
    9eb4:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    9ebb:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    9ec0:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    9ec5:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    9eca:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    9ecf:	48 8b 04 24          	mov    (%rsp),%rax
    9ed3:	e9 44 ff ff ff       	jmpq   9e1c <stm_store_bytes+0x86c>
    9ed8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9edf:	00 

0000000000009ee0 <stm_store_u16>:
    9ee0:	41 57                	push   %r15
    9ee2:	41 56                	push   %r14
    9ee4:	41 55                	push   %r13
    9ee6:	41 54                	push   %r12
    9ee8:	55                   	push   %rbp
    9ee9:	53                   	push   %rbx
    9eea:	48 83 ec 38          	sub    $0x38,%rsp
    9eee:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    9ef5:	40 f6 c7 01          	test   $0x1,%dil
    9ef9:	66 89 74 24 1e       	mov    %si,0x1e(%rsp)
    9efe:	64 48 8b 18          	mov    %fs:(%rax),%rbx
    9f02:	0f 85 90 01 00 00    	jne    a098 <stm_store_u16+0x1b8>
    9f08:	48 89 f8             	mov    %rdi,%rax
    9f0b:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    9f0f:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    9f14:	48 d1 e8             	shr    %rax
    9f17:	48 89 fd             	mov    %rdi,%rbp
    9f1a:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    9f21:	00 00 
    9f23:	83 e0 03             	and    $0x3,%eax
    9f26:	48 c1 ed 02          	shr    $0x2,%rbp
    9f2a:	49 89 fe             	mov    %rdi,%r14
    9f2d:	66 89 74 44 20       	mov    %si,0x20(%rsp,%rax,2)
    9f32:	66 89 54 44 28       	mov    %dx,0x28(%rsp,%rax,2)
    9f37:	48 8d 05 42 62 20 00 	lea    0x206242(%rip),%rax        # 210180 <_tinystm>
    9f3e:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
    9f43:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
    9f48:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    9f4e:	48 01 c5             	add    %rax,%rbp
    9f51:	48 8b 45 00          	mov    0x0(%rbp),%rax
    9f55:	a8 01                	test   $0x1,%al
    9f57:	0f 85 bb 00 00 00    	jne    a018 <stm_store_u16+0x138>
    9f5d:	49 89 c7             	mov    %rax,%r15
    9f60:	49 c1 ef 04          	shr    $0x4,%r15
    9f64:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    9f6b:	75 0d                	jne    9f7a <stm_store_u16+0x9a>
    9f6d:	4c 3b bb e0 00 00 00 	cmp    0xe0(%rbx),%r15
    9f74:	0f 87 6e 01 00 00    	ja     a0e8 <stm_store_u16+0x208>
    9f7a:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    9f80:	3b 93 04 01 00 00    	cmp    0x104(%rbx),%edx
    9f86:	0f 84 34 01 00 00    	je     a0c0 <stm_store_u16+0x1e0>
    9f8c:	48 c1 e2 06          	shl    $0x6,%rdx
    9f90:	48 03 93 f8 00 00 00 	add    0xf8(%rbx),%rdx
    9f97:	48 89 d1             	mov    %rdx,%rcx
    9f9a:	48 83 c9 01          	or     $0x1,%rcx
    9f9e:	f0 48 0f b1 4d 00    	lock cmpxchg %rcx,0x0(%rbp)
    9fa4:	75 ab                	jne    9f51 <stm_store_u16+0x71>
    9fa6:	4d 85 ed             	test   %r13,%r13
    9fa9:	4c 89 32             	mov    %r14,(%rdx)
    9fac:	4c 89 6a 10          	mov    %r13,0x10(%rdx)
    9fb0:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    9fb4:	74 4e                	je     a004 <stm_store_u16+0x124>
    9fb6:	31 c0                	xor    %eax,%eax
    9fb8:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
    9fbc:	74 42                	je     a000 <stm_store_u16+0x120>
    9fbe:	49 8b 0e             	mov    (%r14),%rcx
    9fc1:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    9fc5:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    9fcc:	00 
    9fcd:	49 31 cc             	xor    %rcx,%r12
    9fd0:	4d 21 e5             	and    %r12,%r13
    9fd3:	49 31 cd             	xor    %rcx,%r13
    9fd6:	48 85 c0             	test   %rax,%rax
    9fd9:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    9fdd:	74 04                	je     9fe3 <stm_store_u16+0x103>
    9fdf:	48 89 50 28          	mov    %rdx,0x28(%rax)
    9fe3:	83 83 00 01 00 00 01 	addl   $0x1,0x100(%rbx)
    9fea:	83 83 08 01 00 00 01 	addl   $0x1,0x108(%rbx)
    9ff1:	48 83 c4 38          	add    $0x38,%rsp
    9ff5:	5b                   	pop    %rbx
    9ff6:	5d                   	pop    %rbp
    9ff7:	41 5c                	pop    %r12
    9ff9:	41 5d                	pop    %r13
    9ffb:	41 5e                	pop    %r14
    9ffd:	41 5f                	pop    %r15
    9fff:	c3                   	retq   
    a000:	4c 89 62 08          	mov    %r12,0x8(%rdx)
    a004:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    a008:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    a00f:	00 
    a010:	eb d1                	jmp    9fe3 <stm_store_u16+0x103>
    a012:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a018:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    a01f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    a023:	48 39 d0             	cmp    %rdx,%rax
    a026:	0f 82 5c 01 00 00    	jb     a188 <stm_store_u16+0x2a8>
    a02c:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    a032:	48 89 ce             	mov    %rcx,%rsi
    a035:	48 c1 e1 06          	shl    $0x6,%rcx
    a039:	48 01 d1             	add    %rdx,%rcx
    a03c:	48 39 c8             	cmp    %rcx,%rax
    a03f:	0f 83 43 01 00 00    	jae    a188 <stm_store_u16+0x2a8>
    a045:	4d 85 ed             	test   %r13,%r13
    a048:	74 a7                	je     9ff1 <stm_store_u16+0x111>
    a04a:	eb 14                	jmp    a060 <stm_store_u16+0x180>
    a04c:	0f 1f 40 00          	nopl   0x0(%rax)
    a050:	48 8b 48 28          	mov    0x28(%rax),%rcx
    a054:	48 85 c9             	test   %rcx,%rcx
    a057:	0f 84 e3 00 00 00    	je     a140 <stm_store_u16+0x260>
    a05d:	48 89 c8             	mov    %rcx,%rax
    a060:	4c 3b 30             	cmp    (%rax),%r14
    a063:	75 eb                	jne    a050 <stm_store_u16+0x170>
    a065:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
    a069:	48 8b 50 10          	mov    0x10(%rax),%rdx
    a06d:	74 16                	je     a085 <stm_store_u16+0x1a5>
    a06f:	48 85 d2             	test   %rdx,%rdx
    a072:	0f 84 2f 01 00 00    	je     a1a7 <stm_store_u16+0x2c7>
    a078:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a07c:	49 31 cc             	xor    %rcx,%r12
    a07f:	4d 21 ec             	and    %r13,%r12
    a082:	49 31 cc             	xor    %rcx,%r12
    a085:	49 09 d5             	or     %rdx,%r13
    a088:	4c 89 60 08          	mov    %r12,0x8(%rax)
    a08c:	4c 89 68 10          	mov    %r13,0x10(%rax)
    a090:	e9 5c ff ff ff       	jmpq   9ff1 <stm_store_u16+0x111>
    a095:	0f 1f 00             	nopl   (%rax)
    a098:	48 8d 74 24 1e       	lea    0x1e(%rsp),%rsi
    a09d:	ba 02 00 00 00       	mov    $0x2,%edx
    a0a2:	e8 09 f5 ff ff       	callq  95b0 <stm_store_bytes>
    a0a7:	48 83 c4 38          	add    $0x38,%rsp
    a0ab:	5b                   	pop    %rbx
    a0ac:	5d                   	pop    %rbp
    a0ad:	41 5c                	pop    %r12
    a0af:	41 5d                	pop    %r13
    a0b1:	41 5e                	pop    %r14
    a0b3:	41 5f                	pop    %r15
    a0b5:	c3                   	retq   
    a0b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a0bd:	00 00 00 
    a0c0:	be 40 0c 00 00       	mov    $0xc40,%esi
    a0c5:	48 89 df             	mov    %rbx,%rdi
    a0c8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a0cd:	e8 fe c7 ff ff       	callq  68d0 <stm_rollback>
    a0d2:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    a0d8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    a0dd:	e9 aa fe ff ff       	jmpq   9f8c <stm_store_u16+0xac>
    a0e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a0e8:	8b 8b f0 00 00 00    	mov    0xf0(%rbx),%ecx
    a0ee:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    a0f5:	85 c9                	test   %ecx,%ecx
    a0f7:	0f 8e 7d fe ff ff    	jle    9f7a <stm_store_u16+0x9a>
    a0fd:	48 3b 6a 08          	cmp    0x8(%rdx),%rbp
    a101:	74 28                	je     a12b <stm_store_u16+0x24b>
    a103:	83 e9 01             	sub    $0x1,%ecx
    a106:	48 83 c2 18          	add    $0x18,%rdx
    a10a:	48 c1 e1 04          	shl    $0x4,%rcx
    a10e:	48 01 d1             	add    %rdx,%rcx
    a111:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a118:	48 39 d1             	cmp    %rdx,%rcx
    a11b:	0f 84 59 fe ff ff    	je     9f7a <stm_store_u16+0x9a>
    a121:	48 83 c2 10          	add    $0x10,%rdx
    a125:	48 3b 6a f0          	cmp    -0x10(%rdx),%rbp
    a129:	75 ed                	jne    a118 <stm_store_u16+0x238>
    a12b:	be 40 06 00 00       	mov    $0x640,%esi
    a130:	48 89 df             	mov    %rbx,%rdi
    a133:	e8 98 c7 ff ff       	callq  68d0 <stm_rollback>
    a138:	e9 b4 fe ff ff       	jmpq   9ff1 <stm_store_u16+0x111>
    a13d:	0f 1f 00             	nopl   (%rax)
    a140:	3b b3 04 01 00 00    	cmp    0x104(%rbx),%esi
    a146:	4c 8b 78 18          	mov    0x18(%rax),%r15
    a14a:	74 63                	je     a1af <stm_store_u16+0x2cf>
    a14c:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    a152:	48 c1 e1 06          	shl    $0x6,%rcx
    a156:	48 01 ca             	add    %rcx,%rdx
    a159:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
    a15d:	4c 89 32             	mov    %r14,(%rdx)
    a160:	4c 89 6a 10          	mov    %r13,0x10(%rdx)
    a164:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    a168:	0f 85 50 fe ff ff    	jne    9fbe <stm_store_u16+0xde>
    a16e:	4c 89 62 08          	mov    %r12,0x8(%rdx)
    a172:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    a176:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    a17d:	00 
    a17e:	e9 5c fe ff ff       	jmpq   9fdf <stm_store_u16+0xff>
    a183:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a188:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    a18f:	0f 85 bc fd ff ff    	jne    9f51 <stm_store_u16+0x71>
    a195:	be 40 04 00 00       	mov    $0x440,%esi
    a19a:	48 89 df             	mov    %rbx,%rdi
    a19d:	e8 2e c7 ff ff       	callq  68d0 <stm_rollback>
    a1a2:	e9 4a fe ff ff       	jmpq   9ff1 <stm_store_u16+0x111>
    a1a7:	49 8b 0e             	mov    (%r14),%rcx
    a1aa:	e9 cd fe ff ff       	jmpq   a07c <stm_store_u16+0x19c>
    a1af:	be 40 0c 00 00       	mov    $0xc40,%esi
    a1b4:	48 89 df             	mov    %rbx,%rdi
    a1b7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a1bc:	e8 0f c7 ff ff       	callq  68d0 <stm_rollback>
    a1c1:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    a1c8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    a1cd:	e9 7a ff ff ff       	jmpq   a14c <stm_store_u16+0x26c>
    a1d2:	0f 1f 40 00          	nopl   0x0(%rax)
    a1d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a1dd:	00 00 00 

000000000000a1e0 <stm_store_ushort>:
    a1e0:	e9 fb fc ff ff       	jmpq   9ee0 <stm_store_u16>
    a1e5:	90                   	nop
    a1e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a1ed:	00 00 00 

000000000000a1f0 <stm_store_u32>:
    a1f0:	41 57                	push   %r15
    a1f2:	41 56                	push   %r14
    a1f4:	41 55                	push   %r13
    a1f6:	41 54                	push   %r12
    a1f8:	55                   	push   %rbp
    a1f9:	53                   	push   %rbx
    a1fa:	48 83 ec 38          	sub    $0x38,%rsp
    a1fe:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    a205:	40 f6 c7 03          	test   $0x3,%dil
    a209:	89 74 24 1c          	mov    %esi,0x1c(%rsp)
    a20d:	64 48 8b 18          	mov    %fs:(%rax),%rbx
    a211:	0f 85 91 01 00 00    	jne    a3a8 <stm_store_u32+0x1b8>
    a217:	48 89 f8             	mov    %rdi,%rax
    a21a:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    a21e:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    a225:	00 00 
    a227:	48 c1 e8 02          	shr    $0x2,%rax
    a22b:	48 89 fd             	mov    %rdi,%rbp
    a22e:	49 89 fe             	mov    %rdi,%r14
    a231:	83 e0 01             	and    $0x1,%eax
    a234:	48 c1 ed 02          	shr    $0x2,%rbp
    a238:	89 74 84 20          	mov    %esi,0x20(%rsp,%rax,4)
    a23c:	c7 44 84 28 ff ff ff 	movl   $0xffffffff,0x28(%rsp,%rax,4)
    a243:	ff 
    a244:	48 8d 05 35 5f 20 00 	lea    0x205f35(%rip),%rax        # 210180 <_tinystm>
    a24b:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
    a250:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
    a255:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    a25b:	48 01 c5             	add    %rax,%rbp
    a25e:	48 8b 45 00          	mov    0x0(%rbp),%rax
    a262:	a8 01                	test   $0x1,%al
    a264:	0f 85 be 00 00 00    	jne    a328 <stm_store_u32+0x138>
    a26a:	49 89 c7             	mov    %rax,%r15
    a26d:	49 c1 ef 04          	shr    $0x4,%r15
    a271:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    a278:	75 0d                	jne    a287 <stm_store_u32+0x97>
    a27a:	4c 3b bb e0 00 00 00 	cmp    0xe0(%rbx),%r15
    a281:	0f 87 71 01 00 00    	ja     a3f8 <stm_store_u32+0x208>
    a287:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    a28d:	3b 93 04 01 00 00    	cmp    0x104(%rbx),%edx
    a293:	0f 84 37 01 00 00    	je     a3d0 <stm_store_u32+0x1e0>
    a299:	48 c1 e2 06          	shl    $0x6,%rdx
    a29d:	48 03 93 f8 00 00 00 	add    0xf8(%rbx),%rdx
    a2a4:	48 89 d1             	mov    %rdx,%rcx
    a2a7:	48 83 c9 01          	or     $0x1,%rcx
    a2ab:	f0 48 0f b1 4d 00    	lock cmpxchg %rcx,0x0(%rbp)
    a2b1:	75 ab                	jne    a25e <stm_store_u32+0x6e>
    a2b3:	4d 85 ed             	test   %r13,%r13
    a2b6:	4c 89 32             	mov    %r14,(%rdx)
    a2b9:	4c 89 6a 10          	mov    %r13,0x10(%rdx)
    a2bd:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    a2c1:	74 51                	je     a314 <stm_store_u32+0x124>
    a2c3:	31 c0                	xor    %eax,%eax
    a2c5:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
    a2c9:	74 45                	je     a310 <stm_store_u32+0x120>
    a2cb:	49 8b 0e             	mov    (%r14),%rcx
    a2ce:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    a2d2:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    a2d9:	00 
    a2da:	49 31 cc             	xor    %rcx,%r12
    a2dd:	4d 21 e5             	and    %r12,%r13
    a2e0:	49 31 cd             	xor    %rcx,%r13
    a2e3:	48 85 c0             	test   %rax,%rax
    a2e6:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    a2ea:	74 04                	je     a2f0 <stm_store_u32+0x100>
    a2ec:	48 89 50 28          	mov    %rdx,0x28(%rax)
    a2f0:	83 83 00 01 00 00 01 	addl   $0x1,0x100(%rbx)
    a2f7:	83 83 08 01 00 00 01 	addl   $0x1,0x108(%rbx)
    a2fe:	48 83 c4 38          	add    $0x38,%rsp
    a302:	5b                   	pop    %rbx
    a303:	5d                   	pop    %rbp
    a304:	41 5c                	pop    %r12
    a306:	41 5d                	pop    %r13
    a308:	41 5e                	pop    %r14
    a30a:	41 5f                	pop    %r15
    a30c:	c3                   	retq   
    a30d:	0f 1f 00             	nopl   (%rax)
    a310:	4c 89 62 08          	mov    %r12,0x8(%rdx)
    a314:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    a318:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    a31f:	00 
    a320:	eb ce                	jmp    a2f0 <stm_store_u32+0x100>
    a322:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a328:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    a32f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    a333:	48 39 d0             	cmp    %rdx,%rax
    a336:	0f 82 5c 01 00 00    	jb     a498 <stm_store_u32+0x2a8>
    a33c:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    a342:	48 89 ce             	mov    %rcx,%rsi
    a345:	48 c1 e1 06          	shl    $0x6,%rcx
    a349:	48 01 d1             	add    %rdx,%rcx
    a34c:	48 39 c8             	cmp    %rcx,%rax
    a34f:	0f 83 43 01 00 00    	jae    a498 <stm_store_u32+0x2a8>
    a355:	4d 85 ed             	test   %r13,%r13
    a358:	74 a4                	je     a2fe <stm_store_u32+0x10e>
    a35a:	eb 14                	jmp    a370 <stm_store_u32+0x180>
    a35c:	0f 1f 40 00          	nopl   0x0(%rax)
    a360:	48 8b 48 28          	mov    0x28(%rax),%rcx
    a364:	48 85 c9             	test   %rcx,%rcx
    a367:	0f 84 e3 00 00 00    	je     a450 <stm_store_u32+0x260>
    a36d:	48 89 c8             	mov    %rcx,%rax
    a370:	4c 3b 30             	cmp    (%rax),%r14
    a373:	75 eb                	jne    a360 <stm_store_u32+0x170>
    a375:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
    a379:	48 8b 50 10          	mov    0x10(%rax),%rdx
    a37d:	74 16                	je     a395 <stm_store_u32+0x1a5>
    a37f:	48 85 d2             	test   %rdx,%rdx
    a382:	0f 84 2f 01 00 00    	je     a4b7 <stm_store_u32+0x2c7>
    a388:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a38c:	49 31 cc             	xor    %rcx,%r12
    a38f:	4d 21 ec             	and    %r13,%r12
    a392:	49 31 cc             	xor    %rcx,%r12
    a395:	49 09 d5             	or     %rdx,%r13
    a398:	4c 89 60 08          	mov    %r12,0x8(%rax)
    a39c:	4c 89 68 10          	mov    %r13,0x10(%rax)
    a3a0:	e9 59 ff ff ff       	jmpq   a2fe <stm_store_u32+0x10e>
    a3a5:	0f 1f 00             	nopl   (%rax)
    a3a8:	48 8d 74 24 1c       	lea    0x1c(%rsp),%rsi
    a3ad:	ba 04 00 00 00       	mov    $0x4,%edx
    a3b2:	e8 f9 f1 ff ff       	callq  95b0 <stm_store_bytes>
    a3b7:	48 83 c4 38          	add    $0x38,%rsp
    a3bb:	5b                   	pop    %rbx
    a3bc:	5d                   	pop    %rbp
    a3bd:	41 5c                	pop    %r12
    a3bf:	41 5d                	pop    %r13
    a3c1:	41 5e                	pop    %r14
    a3c3:	41 5f                	pop    %r15
    a3c5:	c3                   	retq   
    a3c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a3cd:	00 00 00 
    a3d0:	be 40 0c 00 00       	mov    $0xc40,%esi
    a3d5:	48 89 df             	mov    %rbx,%rdi
    a3d8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a3dd:	e8 ee c4 ff ff       	callq  68d0 <stm_rollback>
    a3e2:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    a3e8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    a3ed:	e9 a7 fe ff ff       	jmpq   a299 <stm_store_u32+0xa9>
    a3f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a3f8:	8b 8b f0 00 00 00    	mov    0xf0(%rbx),%ecx
    a3fe:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    a405:	85 c9                	test   %ecx,%ecx
    a407:	0f 8e 7a fe ff ff    	jle    a287 <stm_store_u32+0x97>
    a40d:	48 3b 6a 08          	cmp    0x8(%rdx),%rbp
    a411:	74 28                	je     a43b <stm_store_u32+0x24b>
    a413:	83 e9 01             	sub    $0x1,%ecx
    a416:	48 83 c2 18          	add    $0x18,%rdx
    a41a:	48 c1 e1 04          	shl    $0x4,%rcx
    a41e:	48 01 d1             	add    %rdx,%rcx
    a421:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a428:	48 39 d1             	cmp    %rdx,%rcx
    a42b:	0f 84 56 fe ff ff    	je     a287 <stm_store_u32+0x97>
    a431:	48 83 c2 10          	add    $0x10,%rdx
    a435:	48 3b 6a f0          	cmp    -0x10(%rdx),%rbp
    a439:	75 ed                	jne    a428 <stm_store_u32+0x238>
    a43b:	be 40 06 00 00       	mov    $0x640,%esi
    a440:	48 89 df             	mov    %rbx,%rdi
    a443:	e8 88 c4 ff ff       	callq  68d0 <stm_rollback>
    a448:	e9 b1 fe ff ff       	jmpq   a2fe <stm_store_u32+0x10e>
    a44d:	0f 1f 00             	nopl   (%rax)
    a450:	3b b3 04 01 00 00    	cmp    0x104(%rbx),%esi
    a456:	4c 8b 78 18          	mov    0x18(%rax),%r15
    a45a:	74 63                	je     a4bf <stm_store_u32+0x2cf>
    a45c:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    a462:	48 c1 e1 06          	shl    $0x6,%rcx
    a466:	48 01 ca             	add    %rcx,%rdx
    a469:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
    a46d:	4c 89 32             	mov    %r14,(%rdx)
    a470:	4c 89 6a 10          	mov    %r13,0x10(%rdx)
    a474:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    a478:	0f 85 4d fe ff ff    	jne    a2cb <stm_store_u32+0xdb>
    a47e:	4c 89 62 08          	mov    %r12,0x8(%rdx)
    a482:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    a486:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    a48d:	00 
    a48e:	e9 59 fe ff ff       	jmpq   a2ec <stm_store_u32+0xfc>
    a493:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a498:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    a49f:	0f 85 b9 fd ff ff    	jne    a25e <stm_store_u32+0x6e>
    a4a5:	be 40 04 00 00       	mov    $0x440,%esi
    a4aa:	48 89 df             	mov    %rbx,%rdi
    a4ad:	e8 1e c4 ff ff       	callq  68d0 <stm_rollback>
    a4b2:	e9 47 fe ff ff       	jmpq   a2fe <stm_store_u32+0x10e>
    a4b7:	49 8b 0e             	mov    (%r14),%rcx
    a4ba:	e9 cd fe ff ff       	jmpq   a38c <stm_store_u32+0x19c>
    a4bf:	be 40 0c 00 00       	mov    $0xc40,%esi
    a4c4:	48 89 df             	mov    %rbx,%rdi
    a4c7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a4cc:	e8 ff c3 ff ff       	callq  68d0 <stm_rollback>
    a4d1:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    a4d8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    a4dd:	e9 7a ff ff ff       	jmpq   a45c <stm_store_u32+0x26c>
    a4e2:	0f 1f 40 00          	nopl   0x0(%rax)
    a4e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a4ed:	00 00 00 

000000000000a4f0 <stm_store_uint>:
    a4f0:	e9 fb fc ff ff       	jmpq   a1f0 <stm_store_u32>
    a4f5:	90                   	nop
    a4f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a4fd:	00 00 00 

000000000000a500 <stm_store_u64>:
    a500:	41 56                	push   %r14
    a502:	41 55                	push   %r13
    a504:	41 54                	push   %r12
    a506:	55                   	push   %rbp
    a507:	49 89 fc             	mov    %rdi,%r12
    a50a:	53                   	push   %rbx
    a50b:	48 83 ec 20          	sub    $0x20,%rsp
    a50f:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    a516:	83 e7 07             	and    $0x7,%edi
    a519:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    a51e:	64 48 8b 18          	mov    %fs:(%rax),%rbx
    a522:	0f 85 10 01 00 00    	jne    a638 <stm_store_u64+0x138>
    a528:	4c 89 e5             	mov    %r12,%rbp
    a52b:	48 8d 05 4e 5c 20 00 	lea    0x205c4e(%rip),%rax        # 210180 <_tinystm>
    a532:	49 89 f5             	mov    %rsi,%r13
    a535:	48 c1 ed 02          	shr    $0x2,%rbp
    a539:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    a53f:	48 01 c5             	add    %rax,%rbp
    a542:	48 8b 45 00          	mov    0x0(%rbp),%rax
    a546:	a8 01                	test   $0x1,%al
    a548:	0f 85 8a 00 00 00    	jne    a5d8 <stm_store_u64+0xd8>
    a54e:	49 89 c6             	mov    %rax,%r14
    a551:	49 c1 ee 04          	shr    $0x4,%r14
    a555:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    a55c:	75 0d                	jne    a56b <stm_store_u64+0x6b>
    a55e:	4c 3b b3 e0 00 00 00 	cmp    0xe0(%rbx),%r14
    a565:	0f 87 1d 01 00 00    	ja     a688 <stm_store_u64+0x188>
    a56b:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    a571:	3b 93 04 01 00 00    	cmp    0x104(%rbx),%edx
    a577:	0f 84 e3 00 00 00    	je     a660 <stm_store_u64+0x160>
    a57d:	48 c1 e2 06          	shl    $0x6,%rdx
    a581:	48 03 93 f8 00 00 00 	add    0xf8(%rbx),%rdx
    a588:	48 89 d1             	mov    %rdx,%rcx
    a58b:	48 83 c9 01          	or     $0x1,%rcx
    a58f:	f0 48 0f b1 4d 00    	lock cmpxchg %rcx,0x0(%rbp)
    a595:	75 ab                	jne    a542 <stm_store_u64+0x42>
    a597:	4c 89 22             	mov    %r12,(%rdx)
    a59a:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
    a5a1:	ff 
    a5a2:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    a5a6:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    a5aa:	4c 89 72 18          	mov    %r14,0x18(%rdx)
    a5ae:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    a5b5:	00 
    a5b6:	83 83 00 01 00 00 01 	addl   $0x1,0x100(%rbx)
    a5bd:	83 83 08 01 00 00 01 	addl   $0x1,0x108(%rbx)
    a5c4:	48 83 c4 20          	add    $0x20,%rsp
    a5c8:	5b                   	pop    %rbx
    a5c9:	5d                   	pop    %rbp
    a5ca:	41 5c                	pop    %r12
    a5cc:	41 5d                	pop    %r13
    a5ce:	41 5e                	pop    %r14
    a5d0:	c3                   	retq   
    a5d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a5d8:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    a5df:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    a5e3:	48 39 d0             	cmp    %rdx,%rax
    a5e6:	0f 82 3c 01 00 00    	jb     a728 <stm_store_u64+0x228>
    a5ec:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    a5f2:	48 89 ce             	mov    %rcx,%rsi
    a5f5:	48 c1 e1 06          	shl    $0x6,%rcx
    a5f9:	48 01 d1             	add    %rdx,%rcx
    a5fc:	48 39 c8             	cmp    %rcx,%rax
    a5ff:	72 1f                	jb     a620 <stm_store_u64+0x120>
    a601:	e9 22 01 00 00       	jmpq   a728 <stm_store_u64+0x228>
    a606:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a60d:	00 00 00 
    a610:	48 8b 48 28          	mov    0x28(%rax),%rcx
    a614:	48 85 c9             	test   %rcx,%rcx
    a617:	0f 84 c3 00 00 00    	je     a6e0 <stm_store_u64+0x1e0>
    a61d:	48 89 c8             	mov    %rcx,%rax
    a620:	4c 3b 20             	cmp    (%rax),%r12
    a623:	75 eb                	jne    a610 <stm_store_u64+0x110>
    a625:	4c 89 68 08          	mov    %r13,0x8(%rax)
    a629:	48 c7 40 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rax)
    a630:	ff 
    a631:	eb 91                	jmp    a5c4 <stm_store_u64+0xc4>
    a633:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a638:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    a63d:	4c 89 e7             	mov    %r12,%rdi
    a640:	ba 08 00 00 00       	mov    $0x8,%edx
    a645:	e8 66 ef ff ff       	callq  95b0 <stm_store_bytes>
    a64a:	48 83 c4 20          	add    $0x20,%rsp
    a64e:	5b                   	pop    %rbx
    a64f:	5d                   	pop    %rbp
    a650:	41 5c                	pop    %r12
    a652:	41 5d                	pop    %r13
    a654:	41 5e                	pop    %r14
    a656:	c3                   	retq   
    a657:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a65e:	00 00 
    a660:	be 40 0c 00 00       	mov    $0xc40,%esi
    a665:	48 89 df             	mov    %rbx,%rdi
    a668:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a66d:	e8 5e c2 ff ff       	callq  68d0 <stm_rollback>
    a672:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    a678:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    a67d:	e9 fb fe ff ff       	jmpq   a57d <stm_store_u64+0x7d>
    a682:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a688:	8b 8b f0 00 00 00    	mov    0xf0(%rbx),%ecx
    a68e:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    a695:	85 c9                	test   %ecx,%ecx
    a697:	0f 8e ce fe ff ff    	jle    a56b <stm_store_u64+0x6b>
    a69d:	48 39 6a 08          	cmp    %rbp,0x8(%rdx)
    a6a1:	74 28                	je     a6cb <stm_store_u64+0x1cb>
    a6a3:	83 e9 01             	sub    $0x1,%ecx
    a6a6:	48 83 c2 18          	add    $0x18,%rdx
    a6aa:	48 c1 e1 04          	shl    $0x4,%rcx
    a6ae:	48 01 d1             	add    %rdx,%rcx
    a6b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a6b8:	48 39 d1             	cmp    %rdx,%rcx
    a6bb:	0f 84 aa fe ff ff    	je     a56b <stm_store_u64+0x6b>
    a6c1:	48 83 c2 10          	add    $0x10,%rdx
    a6c5:	48 3b 6a f0          	cmp    -0x10(%rdx),%rbp
    a6c9:	75 ed                	jne    a6b8 <stm_store_u64+0x1b8>
    a6cb:	be 40 06 00 00       	mov    $0x640,%esi
    a6d0:	48 89 df             	mov    %rbx,%rdi
    a6d3:	e8 f8 c1 ff ff       	callq  68d0 <stm_rollback>
    a6d8:	e9 e7 fe ff ff       	jmpq   a5c4 <stm_store_u64+0xc4>
    a6dd:	0f 1f 00             	nopl   (%rax)
    a6e0:	3b b3 04 01 00 00    	cmp    0x104(%rbx),%esi
    a6e6:	4c 8b 70 18          	mov    0x18(%rax),%r14
    a6ea:	74 64                	je     a750 <stm_store_u64+0x250>
    a6ec:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    a6f2:	48 c1 e1 06          	shl    $0x6,%rcx
    a6f6:	48 01 ca             	add    %rcx,%rdx
    a6f9:	4c 89 22             	mov    %r12,(%rdx)
    a6fc:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
    a703:	ff 
    a704:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    a708:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    a70c:	4c 89 72 18          	mov    %r14,0x18(%rdx)
    a710:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    a717:	00 
    a718:	48 89 50 28          	mov    %rdx,0x28(%rax)
    a71c:	e9 95 fe ff ff       	jmpq   a5b6 <stm_store_u64+0xb6>
    a721:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a728:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    a72f:	0f 85 0d fe ff ff    	jne    a542 <stm_store_u64+0x42>
    a735:	be 40 04 00 00       	mov    $0x440,%esi
    a73a:	48 89 df             	mov    %rbx,%rdi
    a73d:	e8 8e c1 ff ff       	callq  68d0 <stm_rollback>
    a742:	e9 7d fe ff ff       	jmpq   a5c4 <stm_store_u64+0xc4>
    a747:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a74e:	00 00 
    a750:	be 40 0c 00 00       	mov    $0xc40,%esi
    a755:	48 89 df             	mov    %rbx,%rdi
    a758:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a75d:	e8 6e c1 ff ff       	callq  68d0 <stm_rollback>
    a762:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    a769:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    a76e:	e9 79 ff ff ff       	jmpq   a6ec <stm_store_u64+0x1ec>
    a773:	0f 1f 00             	nopl   (%rax)
    a776:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a77d:	00 00 00 

000000000000a780 <stm_store_ulong>:
    a780:	e9 7b fd ff ff       	jmpq   a500 <stm_store_u64>
    a785:	90                   	nop
    a786:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a78d:	00 00 00 

000000000000a790 <stm_store_short>:
    a790:	41 57                	push   %r15
    a792:	41 56                	push   %r14
    a794:	41 55                	push   %r13
    a796:	41 54                	push   %r12
    a798:	55                   	push   %rbp
    a799:	53                   	push   %rbx
    a79a:	48 83 ec 38          	sub    $0x38,%rsp
    a79e:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    a7a5:	40 f6 c7 01          	test   $0x1,%dil
    a7a9:	66 89 74 24 1e       	mov    %si,0x1e(%rsp)
    a7ae:	64 48 8b 18          	mov    %fs:(%rax),%rbx
    a7b2:	0f 85 90 01 00 00    	jne    a948 <stm_store_short+0x1b8>
    a7b8:	48 89 f8             	mov    %rdi,%rax
    a7bb:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    a7bf:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    a7c4:	48 d1 e8             	shr    %rax
    a7c7:	48 89 fd             	mov    %rdi,%rbp
    a7ca:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    a7d1:	00 00 
    a7d3:	83 e0 03             	and    $0x3,%eax
    a7d6:	48 c1 ed 02          	shr    $0x2,%rbp
    a7da:	49 89 fe             	mov    %rdi,%r14
    a7dd:	66 89 74 44 20       	mov    %si,0x20(%rsp,%rax,2)
    a7e2:	66 89 54 44 28       	mov    %dx,0x28(%rsp,%rax,2)
    a7e7:	48 8d 05 92 59 20 00 	lea    0x205992(%rip),%rax        # 210180 <_tinystm>
    a7ee:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
    a7f3:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
    a7f8:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    a7fe:	48 01 c5             	add    %rax,%rbp
    a801:	48 8b 45 00          	mov    0x0(%rbp),%rax
    a805:	a8 01                	test   $0x1,%al
    a807:	0f 85 bb 00 00 00    	jne    a8c8 <stm_store_short+0x138>
    a80d:	49 89 c7             	mov    %rax,%r15
    a810:	49 c1 ef 04          	shr    $0x4,%r15
    a814:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    a81b:	75 0d                	jne    a82a <stm_store_short+0x9a>
    a81d:	4c 3b bb e0 00 00 00 	cmp    0xe0(%rbx),%r15
    a824:	0f 87 6e 01 00 00    	ja     a998 <stm_store_short+0x208>
    a82a:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    a830:	3b 93 04 01 00 00    	cmp    0x104(%rbx),%edx
    a836:	0f 84 34 01 00 00    	je     a970 <stm_store_short+0x1e0>
    a83c:	48 c1 e2 06          	shl    $0x6,%rdx
    a840:	48 03 93 f8 00 00 00 	add    0xf8(%rbx),%rdx
    a847:	48 89 d1             	mov    %rdx,%rcx
    a84a:	48 83 c9 01          	or     $0x1,%rcx
    a84e:	f0 48 0f b1 4d 00    	lock cmpxchg %rcx,0x0(%rbp)
    a854:	75 ab                	jne    a801 <stm_store_short+0x71>
    a856:	4d 85 ed             	test   %r13,%r13
    a859:	4c 89 32             	mov    %r14,(%rdx)
    a85c:	4c 89 6a 10          	mov    %r13,0x10(%rdx)
    a860:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    a864:	74 4e                	je     a8b4 <stm_store_short+0x124>
    a866:	31 c0                	xor    %eax,%eax
    a868:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
    a86c:	74 42                	je     a8b0 <stm_store_short+0x120>
    a86e:	49 8b 0e             	mov    (%r14),%rcx
    a871:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    a875:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    a87c:	00 
    a87d:	49 31 cc             	xor    %rcx,%r12
    a880:	4d 21 e5             	and    %r12,%r13
    a883:	49 31 cd             	xor    %rcx,%r13
    a886:	48 85 c0             	test   %rax,%rax
    a889:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    a88d:	74 04                	je     a893 <stm_store_short+0x103>
    a88f:	48 89 50 28          	mov    %rdx,0x28(%rax)
    a893:	83 83 00 01 00 00 01 	addl   $0x1,0x100(%rbx)
    a89a:	83 83 08 01 00 00 01 	addl   $0x1,0x108(%rbx)
    a8a1:	48 83 c4 38          	add    $0x38,%rsp
    a8a5:	5b                   	pop    %rbx
    a8a6:	5d                   	pop    %rbp
    a8a7:	41 5c                	pop    %r12
    a8a9:	41 5d                	pop    %r13
    a8ab:	41 5e                	pop    %r14
    a8ad:	41 5f                	pop    %r15
    a8af:	c3                   	retq   
    a8b0:	4c 89 62 08          	mov    %r12,0x8(%rdx)
    a8b4:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    a8b8:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    a8bf:	00 
    a8c0:	eb d1                	jmp    a893 <stm_store_short+0x103>
    a8c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a8c8:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    a8cf:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    a8d3:	48 39 d0             	cmp    %rdx,%rax
    a8d6:	0f 82 5c 01 00 00    	jb     aa38 <stm_store_short+0x2a8>
    a8dc:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    a8e2:	48 89 ce             	mov    %rcx,%rsi
    a8e5:	48 c1 e1 06          	shl    $0x6,%rcx
    a8e9:	48 01 d1             	add    %rdx,%rcx
    a8ec:	48 39 c8             	cmp    %rcx,%rax
    a8ef:	0f 83 43 01 00 00    	jae    aa38 <stm_store_short+0x2a8>
    a8f5:	4d 85 ed             	test   %r13,%r13
    a8f8:	74 a7                	je     a8a1 <stm_store_short+0x111>
    a8fa:	eb 14                	jmp    a910 <stm_store_short+0x180>
    a8fc:	0f 1f 40 00          	nopl   0x0(%rax)
    a900:	48 8b 48 28          	mov    0x28(%rax),%rcx
    a904:	48 85 c9             	test   %rcx,%rcx
    a907:	0f 84 e3 00 00 00    	je     a9f0 <stm_store_short+0x260>
    a90d:	48 89 c8             	mov    %rcx,%rax
    a910:	4c 3b 30             	cmp    (%rax),%r14
    a913:	75 eb                	jne    a900 <stm_store_short+0x170>
    a915:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
    a919:	48 8b 50 10          	mov    0x10(%rax),%rdx
    a91d:	74 16                	je     a935 <stm_store_short+0x1a5>
    a91f:	48 85 d2             	test   %rdx,%rdx
    a922:	0f 84 2f 01 00 00    	je     aa57 <stm_store_short+0x2c7>
    a928:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a92c:	49 31 cc             	xor    %rcx,%r12
    a92f:	4d 21 ec             	and    %r13,%r12
    a932:	49 31 cc             	xor    %rcx,%r12
    a935:	49 09 d5             	or     %rdx,%r13
    a938:	4c 89 60 08          	mov    %r12,0x8(%rax)
    a93c:	4c 89 68 10          	mov    %r13,0x10(%rax)
    a940:	e9 5c ff ff ff       	jmpq   a8a1 <stm_store_short+0x111>
    a945:	0f 1f 00             	nopl   (%rax)
    a948:	48 8d 74 24 1e       	lea    0x1e(%rsp),%rsi
    a94d:	ba 02 00 00 00       	mov    $0x2,%edx
    a952:	e8 59 ec ff ff       	callq  95b0 <stm_store_bytes>
    a957:	48 83 c4 38          	add    $0x38,%rsp
    a95b:	5b                   	pop    %rbx
    a95c:	5d                   	pop    %rbp
    a95d:	41 5c                	pop    %r12
    a95f:	41 5d                	pop    %r13
    a961:	41 5e                	pop    %r14
    a963:	41 5f                	pop    %r15
    a965:	c3                   	retq   
    a966:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a96d:	00 00 00 
    a970:	be 40 0c 00 00       	mov    $0xc40,%esi
    a975:	48 89 df             	mov    %rbx,%rdi
    a978:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a97d:	e8 4e bf ff ff       	callq  68d0 <stm_rollback>
    a982:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    a988:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    a98d:	e9 aa fe ff ff       	jmpq   a83c <stm_store_short+0xac>
    a992:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a998:	8b 8b f0 00 00 00    	mov    0xf0(%rbx),%ecx
    a99e:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    a9a5:	85 c9                	test   %ecx,%ecx
    a9a7:	0f 8e 7d fe ff ff    	jle    a82a <stm_store_short+0x9a>
    a9ad:	48 3b 6a 08          	cmp    0x8(%rdx),%rbp
    a9b1:	74 28                	je     a9db <stm_store_short+0x24b>
    a9b3:	83 e9 01             	sub    $0x1,%ecx
    a9b6:	48 83 c2 18          	add    $0x18,%rdx
    a9ba:	48 c1 e1 04          	shl    $0x4,%rcx
    a9be:	48 01 d1             	add    %rdx,%rcx
    a9c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a9c8:	48 39 d1             	cmp    %rdx,%rcx
    a9cb:	0f 84 59 fe ff ff    	je     a82a <stm_store_short+0x9a>
    a9d1:	48 83 c2 10          	add    $0x10,%rdx
    a9d5:	48 3b 6a f0          	cmp    -0x10(%rdx),%rbp
    a9d9:	75 ed                	jne    a9c8 <stm_store_short+0x238>
    a9db:	be 40 06 00 00       	mov    $0x640,%esi
    a9e0:	48 89 df             	mov    %rbx,%rdi
    a9e3:	e8 e8 be ff ff       	callq  68d0 <stm_rollback>
    a9e8:	e9 b4 fe ff ff       	jmpq   a8a1 <stm_store_short+0x111>
    a9ed:	0f 1f 00             	nopl   (%rax)
    a9f0:	3b b3 04 01 00 00    	cmp    0x104(%rbx),%esi
    a9f6:	4c 8b 78 18          	mov    0x18(%rax),%r15
    a9fa:	74 63                	je     aa5f <stm_store_short+0x2cf>
    a9fc:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    aa02:	48 c1 e1 06          	shl    $0x6,%rcx
    aa06:	48 01 ca             	add    %rcx,%rdx
    aa09:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
    aa0d:	4c 89 32             	mov    %r14,(%rdx)
    aa10:	4c 89 6a 10          	mov    %r13,0x10(%rdx)
    aa14:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    aa18:	0f 85 50 fe ff ff    	jne    a86e <stm_store_short+0xde>
    aa1e:	4c 89 62 08          	mov    %r12,0x8(%rdx)
    aa22:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    aa26:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    aa2d:	00 
    aa2e:	e9 5c fe ff ff       	jmpq   a88f <stm_store_short+0xff>
    aa33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    aa38:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    aa3f:	0f 85 bc fd ff ff    	jne    a801 <stm_store_short+0x71>
    aa45:	be 40 04 00 00       	mov    $0x440,%esi
    aa4a:	48 89 df             	mov    %rbx,%rdi
    aa4d:	e8 7e be ff ff       	callq  68d0 <stm_rollback>
    aa52:	e9 4a fe ff ff       	jmpq   a8a1 <stm_store_short+0x111>
    aa57:	49 8b 0e             	mov    (%r14),%rcx
    aa5a:	e9 cd fe ff ff       	jmpq   a92c <stm_store_short+0x19c>
    aa5f:	be 40 0c 00 00       	mov    $0xc40,%esi
    aa64:	48 89 df             	mov    %rbx,%rdi
    aa67:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    aa6c:	e8 5f be ff ff       	callq  68d0 <stm_rollback>
    aa71:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    aa78:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    aa7d:	e9 7a ff ff ff       	jmpq   a9fc <stm_store_short+0x26c>
    aa82:	0f 1f 40 00          	nopl   0x0(%rax)
    aa86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    aa8d:	00 00 00 

000000000000aa90 <stm_store_int>:
    aa90:	41 57                	push   %r15
    aa92:	41 56                	push   %r14
    aa94:	41 55                	push   %r13
    aa96:	41 54                	push   %r12
    aa98:	55                   	push   %rbp
    aa99:	53                   	push   %rbx
    aa9a:	48 83 ec 38          	sub    $0x38,%rsp
    aa9e:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    aaa5:	40 f6 c7 03          	test   $0x3,%dil
    aaa9:	89 74 24 1c          	mov    %esi,0x1c(%rsp)
    aaad:	64 48 8b 18          	mov    %fs:(%rax),%rbx
    aab1:	0f 85 91 01 00 00    	jne    ac48 <stm_store_int+0x1b8>
    aab7:	48 89 f8             	mov    %rdi,%rax
    aaba:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    aabe:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    aac5:	00 00 
    aac7:	48 c1 e8 02          	shr    $0x2,%rax
    aacb:	48 89 fd             	mov    %rdi,%rbp
    aace:	49 89 fe             	mov    %rdi,%r14
    aad1:	83 e0 01             	and    $0x1,%eax
    aad4:	48 c1 ed 02          	shr    $0x2,%rbp
    aad8:	89 74 84 20          	mov    %esi,0x20(%rsp,%rax,4)
    aadc:	c7 44 84 28 ff ff ff 	movl   $0xffffffff,0x28(%rsp,%rax,4)
    aae3:	ff 
    aae4:	48 8d 05 95 56 20 00 	lea    0x205695(%rip),%rax        # 210180 <_tinystm>
    aaeb:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
    aaf0:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
    aaf5:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    aafb:	48 01 c5             	add    %rax,%rbp
    aafe:	48 8b 45 00          	mov    0x0(%rbp),%rax
    ab02:	a8 01                	test   $0x1,%al
    ab04:	0f 85 be 00 00 00    	jne    abc8 <stm_store_int+0x138>
    ab0a:	49 89 c7             	mov    %rax,%r15
    ab0d:	49 c1 ef 04          	shr    $0x4,%r15
    ab11:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    ab18:	75 0d                	jne    ab27 <stm_store_int+0x97>
    ab1a:	4c 3b bb e0 00 00 00 	cmp    0xe0(%rbx),%r15
    ab21:	0f 87 71 01 00 00    	ja     ac98 <stm_store_int+0x208>
    ab27:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    ab2d:	3b 93 04 01 00 00    	cmp    0x104(%rbx),%edx
    ab33:	0f 84 37 01 00 00    	je     ac70 <stm_store_int+0x1e0>
    ab39:	48 c1 e2 06          	shl    $0x6,%rdx
    ab3d:	48 03 93 f8 00 00 00 	add    0xf8(%rbx),%rdx
    ab44:	48 89 d1             	mov    %rdx,%rcx
    ab47:	48 83 c9 01          	or     $0x1,%rcx
    ab4b:	f0 48 0f b1 4d 00    	lock cmpxchg %rcx,0x0(%rbp)
    ab51:	75 ab                	jne    aafe <stm_store_int+0x6e>
    ab53:	4d 85 ed             	test   %r13,%r13
    ab56:	4c 89 32             	mov    %r14,(%rdx)
    ab59:	4c 89 6a 10          	mov    %r13,0x10(%rdx)
    ab5d:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    ab61:	74 51                	je     abb4 <stm_store_int+0x124>
    ab63:	31 c0                	xor    %eax,%eax
    ab65:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
    ab69:	74 45                	je     abb0 <stm_store_int+0x120>
    ab6b:	49 8b 0e             	mov    (%r14),%rcx
    ab6e:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    ab72:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    ab79:	00 
    ab7a:	49 31 cc             	xor    %rcx,%r12
    ab7d:	4d 21 e5             	and    %r12,%r13
    ab80:	49 31 cd             	xor    %rcx,%r13
    ab83:	48 85 c0             	test   %rax,%rax
    ab86:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    ab8a:	74 04                	je     ab90 <stm_store_int+0x100>
    ab8c:	48 89 50 28          	mov    %rdx,0x28(%rax)
    ab90:	83 83 00 01 00 00 01 	addl   $0x1,0x100(%rbx)
    ab97:	83 83 08 01 00 00 01 	addl   $0x1,0x108(%rbx)
    ab9e:	48 83 c4 38          	add    $0x38,%rsp
    aba2:	5b                   	pop    %rbx
    aba3:	5d                   	pop    %rbp
    aba4:	41 5c                	pop    %r12
    aba6:	41 5d                	pop    %r13
    aba8:	41 5e                	pop    %r14
    abaa:	41 5f                	pop    %r15
    abac:	c3                   	retq   
    abad:	0f 1f 00             	nopl   (%rax)
    abb0:	4c 89 62 08          	mov    %r12,0x8(%rdx)
    abb4:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    abb8:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    abbf:	00 
    abc0:	eb ce                	jmp    ab90 <stm_store_int+0x100>
    abc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    abc8:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    abcf:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    abd3:	48 39 d0             	cmp    %rdx,%rax
    abd6:	0f 82 5c 01 00 00    	jb     ad38 <stm_store_int+0x2a8>
    abdc:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    abe2:	48 89 ce             	mov    %rcx,%rsi
    abe5:	48 c1 e1 06          	shl    $0x6,%rcx
    abe9:	48 01 d1             	add    %rdx,%rcx
    abec:	48 39 c8             	cmp    %rcx,%rax
    abef:	0f 83 43 01 00 00    	jae    ad38 <stm_store_int+0x2a8>
    abf5:	4d 85 ed             	test   %r13,%r13
    abf8:	74 a4                	je     ab9e <stm_store_int+0x10e>
    abfa:	eb 14                	jmp    ac10 <stm_store_int+0x180>
    abfc:	0f 1f 40 00          	nopl   0x0(%rax)
    ac00:	48 8b 48 28          	mov    0x28(%rax),%rcx
    ac04:	48 85 c9             	test   %rcx,%rcx
    ac07:	0f 84 e3 00 00 00    	je     acf0 <stm_store_int+0x260>
    ac0d:	48 89 c8             	mov    %rcx,%rax
    ac10:	4c 3b 30             	cmp    (%rax),%r14
    ac13:	75 eb                	jne    ac00 <stm_store_int+0x170>
    ac15:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
    ac19:	48 8b 50 10          	mov    0x10(%rax),%rdx
    ac1d:	74 16                	je     ac35 <stm_store_int+0x1a5>
    ac1f:	48 85 d2             	test   %rdx,%rdx
    ac22:	0f 84 2f 01 00 00    	je     ad57 <stm_store_int+0x2c7>
    ac28:	48 8b 48 08          	mov    0x8(%rax),%rcx
    ac2c:	49 31 cc             	xor    %rcx,%r12
    ac2f:	4d 21 ec             	and    %r13,%r12
    ac32:	49 31 cc             	xor    %rcx,%r12
    ac35:	49 09 d5             	or     %rdx,%r13
    ac38:	4c 89 60 08          	mov    %r12,0x8(%rax)
    ac3c:	4c 89 68 10          	mov    %r13,0x10(%rax)
    ac40:	e9 59 ff ff ff       	jmpq   ab9e <stm_store_int+0x10e>
    ac45:	0f 1f 00             	nopl   (%rax)
    ac48:	48 8d 74 24 1c       	lea    0x1c(%rsp),%rsi
    ac4d:	ba 04 00 00 00       	mov    $0x4,%edx
    ac52:	e8 59 e9 ff ff       	callq  95b0 <stm_store_bytes>
    ac57:	48 83 c4 38          	add    $0x38,%rsp
    ac5b:	5b                   	pop    %rbx
    ac5c:	5d                   	pop    %rbp
    ac5d:	41 5c                	pop    %r12
    ac5f:	41 5d                	pop    %r13
    ac61:	41 5e                	pop    %r14
    ac63:	41 5f                	pop    %r15
    ac65:	c3                   	retq   
    ac66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ac6d:	00 00 00 
    ac70:	be 40 0c 00 00       	mov    $0xc40,%esi
    ac75:	48 89 df             	mov    %rbx,%rdi
    ac78:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ac7d:	e8 4e bc ff ff       	callq  68d0 <stm_rollback>
    ac82:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    ac88:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    ac8d:	e9 a7 fe ff ff       	jmpq   ab39 <stm_store_int+0xa9>
    ac92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ac98:	8b 8b f0 00 00 00    	mov    0xf0(%rbx),%ecx
    ac9e:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    aca5:	85 c9                	test   %ecx,%ecx
    aca7:	0f 8e 7a fe ff ff    	jle    ab27 <stm_store_int+0x97>
    acad:	48 3b 6a 08          	cmp    0x8(%rdx),%rbp
    acb1:	74 28                	je     acdb <stm_store_int+0x24b>
    acb3:	83 e9 01             	sub    $0x1,%ecx
    acb6:	48 83 c2 18          	add    $0x18,%rdx
    acba:	48 c1 e1 04          	shl    $0x4,%rcx
    acbe:	48 01 d1             	add    %rdx,%rcx
    acc1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    acc8:	48 39 d1             	cmp    %rdx,%rcx
    accb:	0f 84 56 fe ff ff    	je     ab27 <stm_store_int+0x97>
    acd1:	48 83 c2 10          	add    $0x10,%rdx
    acd5:	48 3b 6a f0          	cmp    -0x10(%rdx),%rbp
    acd9:	75 ed                	jne    acc8 <stm_store_int+0x238>
    acdb:	be 40 06 00 00       	mov    $0x640,%esi
    ace0:	48 89 df             	mov    %rbx,%rdi
    ace3:	e8 e8 bb ff ff       	callq  68d0 <stm_rollback>
    ace8:	e9 b1 fe ff ff       	jmpq   ab9e <stm_store_int+0x10e>
    aced:	0f 1f 00             	nopl   (%rax)
    acf0:	3b b3 04 01 00 00    	cmp    0x104(%rbx),%esi
    acf6:	4c 8b 78 18          	mov    0x18(%rax),%r15
    acfa:	74 63                	je     ad5f <stm_store_int+0x2cf>
    acfc:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    ad02:	48 c1 e1 06          	shl    $0x6,%rcx
    ad06:	48 01 ca             	add    %rcx,%rdx
    ad09:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
    ad0d:	4c 89 32             	mov    %r14,(%rdx)
    ad10:	4c 89 6a 10          	mov    %r13,0x10(%rdx)
    ad14:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    ad18:	0f 85 4d fe ff ff    	jne    ab6b <stm_store_int+0xdb>
    ad1e:	4c 89 62 08          	mov    %r12,0x8(%rdx)
    ad22:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    ad26:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    ad2d:	00 
    ad2e:	e9 59 fe ff ff       	jmpq   ab8c <stm_store_int+0xfc>
    ad33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ad38:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    ad3f:	0f 85 b9 fd ff ff    	jne    aafe <stm_store_int+0x6e>
    ad45:	be 40 04 00 00       	mov    $0x440,%esi
    ad4a:	48 89 df             	mov    %rbx,%rdi
    ad4d:	e8 7e bb ff ff       	callq  68d0 <stm_rollback>
    ad52:	e9 47 fe ff ff       	jmpq   ab9e <stm_store_int+0x10e>
    ad57:	49 8b 0e             	mov    (%r14),%rcx
    ad5a:	e9 cd fe ff ff       	jmpq   ac2c <stm_store_int+0x19c>
    ad5f:	be 40 0c 00 00       	mov    $0xc40,%esi
    ad64:	48 89 df             	mov    %rbx,%rdi
    ad67:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ad6c:	e8 5f bb ff ff       	callq  68d0 <stm_rollback>
    ad71:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    ad78:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    ad7d:	e9 7a ff ff ff       	jmpq   acfc <stm_store_int+0x26c>
    ad82:	0f 1f 40 00          	nopl   0x0(%rax)
    ad86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ad8d:	00 00 00 

000000000000ad90 <stm_store_long>:
    ad90:	41 56                	push   %r14
    ad92:	41 55                	push   %r13
    ad94:	41 54                	push   %r12
    ad96:	55                   	push   %rbp
    ad97:	49 89 fc             	mov    %rdi,%r12
    ad9a:	53                   	push   %rbx
    ad9b:	48 83 ec 20          	sub    $0x20,%rsp
    ad9f:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    ada6:	83 e7 07             	and    $0x7,%edi
    ada9:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    adae:	64 48 8b 18          	mov    %fs:(%rax),%rbx
    adb2:	0f 85 10 01 00 00    	jne    aec8 <stm_store_long+0x138>
    adb8:	4c 89 e5             	mov    %r12,%rbp
    adbb:	48 8d 05 be 53 20 00 	lea    0x2053be(%rip),%rax        # 210180 <_tinystm>
    adc2:	49 89 f5             	mov    %rsi,%r13
    adc5:	48 c1 ed 02          	shr    $0x2,%rbp
    adc9:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    adcf:	48 01 c5             	add    %rax,%rbp
    add2:	48 8b 45 00          	mov    0x0(%rbp),%rax
    add6:	a8 01                	test   $0x1,%al
    add8:	0f 85 8a 00 00 00    	jne    ae68 <stm_store_long+0xd8>
    adde:	49 89 c6             	mov    %rax,%r14
    ade1:	49 c1 ee 04          	shr    $0x4,%r14
    ade5:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    adec:	75 0d                	jne    adfb <stm_store_long+0x6b>
    adee:	4c 3b b3 e0 00 00 00 	cmp    0xe0(%rbx),%r14
    adf5:	0f 87 1d 01 00 00    	ja     af18 <stm_store_long+0x188>
    adfb:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    ae01:	3b 93 04 01 00 00    	cmp    0x104(%rbx),%edx
    ae07:	0f 84 e3 00 00 00    	je     aef0 <stm_store_long+0x160>
    ae0d:	48 c1 e2 06          	shl    $0x6,%rdx
    ae11:	48 03 93 f8 00 00 00 	add    0xf8(%rbx),%rdx
    ae18:	48 89 d1             	mov    %rdx,%rcx
    ae1b:	48 83 c9 01          	or     $0x1,%rcx
    ae1f:	f0 48 0f b1 4d 00    	lock cmpxchg %rcx,0x0(%rbp)
    ae25:	75 ab                	jne    add2 <stm_store_long+0x42>
    ae27:	4c 89 22             	mov    %r12,(%rdx)
    ae2a:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
    ae31:	ff 
    ae32:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    ae36:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    ae3a:	4c 89 72 18          	mov    %r14,0x18(%rdx)
    ae3e:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    ae45:	00 
    ae46:	83 83 00 01 00 00 01 	addl   $0x1,0x100(%rbx)
    ae4d:	83 83 08 01 00 00 01 	addl   $0x1,0x108(%rbx)
    ae54:	48 83 c4 20          	add    $0x20,%rsp
    ae58:	5b                   	pop    %rbx
    ae59:	5d                   	pop    %rbp
    ae5a:	41 5c                	pop    %r12
    ae5c:	41 5d                	pop    %r13
    ae5e:	41 5e                	pop    %r14
    ae60:	c3                   	retq   
    ae61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ae68:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    ae6f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    ae73:	48 39 d0             	cmp    %rdx,%rax
    ae76:	0f 82 3c 01 00 00    	jb     afb8 <stm_store_long+0x228>
    ae7c:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    ae82:	48 89 ce             	mov    %rcx,%rsi
    ae85:	48 c1 e1 06          	shl    $0x6,%rcx
    ae89:	48 01 d1             	add    %rdx,%rcx
    ae8c:	48 39 c8             	cmp    %rcx,%rax
    ae8f:	72 1f                	jb     aeb0 <stm_store_long+0x120>
    ae91:	e9 22 01 00 00       	jmpq   afb8 <stm_store_long+0x228>
    ae96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ae9d:	00 00 00 
    aea0:	48 8b 48 28          	mov    0x28(%rax),%rcx
    aea4:	48 85 c9             	test   %rcx,%rcx
    aea7:	0f 84 c3 00 00 00    	je     af70 <stm_store_long+0x1e0>
    aead:	48 89 c8             	mov    %rcx,%rax
    aeb0:	4c 3b 20             	cmp    (%rax),%r12
    aeb3:	75 eb                	jne    aea0 <stm_store_long+0x110>
    aeb5:	4c 89 68 08          	mov    %r13,0x8(%rax)
    aeb9:	48 c7 40 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rax)
    aec0:	ff 
    aec1:	eb 91                	jmp    ae54 <stm_store_long+0xc4>
    aec3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    aec8:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    aecd:	4c 89 e7             	mov    %r12,%rdi
    aed0:	ba 08 00 00 00       	mov    $0x8,%edx
    aed5:	e8 d6 e6 ff ff       	callq  95b0 <stm_store_bytes>
    aeda:	48 83 c4 20          	add    $0x20,%rsp
    aede:	5b                   	pop    %rbx
    aedf:	5d                   	pop    %rbp
    aee0:	41 5c                	pop    %r12
    aee2:	41 5d                	pop    %r13
    aee4:	41 5e                	pop    %r14
    aee6:	c3                   	retq   
    aee7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    aeee:	00 00 
    aef0:	be 40 0c 00 00       	mov    $0xc40,%esi
    aef5:	48 89 df             	mov    %rbx,%rdi
    aef8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    aefd:	e8 ce b9 ff ff       	callq  68d0 <stm_rollback>
    af02:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    af08:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    af0d:	e9 fb fe ff ff       	jmpq   ae0d <stm_store_long+0x7d>
    af12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    af18:	8b 8b f0 00 00 00    	mov    0xf0(%rbx),%ecx
    af1e:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    af25:	85 c9                	test   %ecx,%ecx
    af27:	0f 8e ce fe ff ff    	jle    adfb <stm_store_long+0x6b>
    af2d:	48 39 6a 08          	cmp    %rbp,0x8(%rdx)
    af31:	74 28                	je     af5b <stm_store_long+0x1cb>
    af33:	83 e9 01             	sub    $0x1,%ecx
    af36:	48 83 c2 18          	add    $0x18,%rdx
    af3a:	48 c1 e1 04          	shl    $0x4,%rcx
    af3e:	48 01 d1             	add    %rdx,%rcx
    af41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    af48:	48 39 d1             	cmp    %rdx,%rcx
    af4b:	0f 84 aa fe ff ff    	je     adfb <stm_store_long+0x6b>
    af51:	48 83 c2 10          	add    $0x10,%rdx
    af55:	48 3b 6a f0          	cmp    -0x10(%rdx),%rbp
    af59:	75 ed                	jne    af48 <stm_store_long+0x1b8>
    af5b:	be 40 06 00 00       	mov    $0x640,%esi
    af60:	48 89 df             	mov    %rbx,%rdi
    af63:	e8 68 b9 ff ff       	callq  68d0 <stm_rollback>
    af68:	e9 e7 fe ff ff       	jmpq   ae54 <stm_store_long+0xc4>
    af6d:	0f 1f 00             	nopl   (%rax)
    af70:	3b b3 04 01 00 00    	cmp    0x104(%rbx),%esi
    af76:	4c 8b 70 18          	mov    0x18(%rax),%r14
    af7a:	74 64                	je     afe0 <stm_store_long+0x250>
    af7c:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    af82:	48 c1 e1 06          	shl    $0x6,%rcx
    af86:	48 01 ca             	add    %rcx,%rdx
    af89:	4c 89 22             	mov    %r12,(%rdx)
    af8c:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
    af93:	ff 
    af94:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    af98:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    af9c:	4c 89 72 18          	mov    %r14,0x18(%rdx)
    afa0:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    afa7:	00 
    afa8:	48 89 50 28          	mov    %rdx,0x28(%rax)
    afac:	e9 95 fe ff ff       	jmpq   ae46 <stm_store_long+0xb6>
    afb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    afb8:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    afbf:	0f 85 0d fe ff ff    	jne    add2 <stm_store_long+0x42>
    afc5:	be 40 04 00 00       	mov    $0x440,%esi
    afca:	48 89 df             	mov    %rbx,%rdi
    afcd:	e8 fe b8 ff ff       	callq  68d0 <stm_rollback>
    afd2:	e9 7d fe ff ff       	jmpq   ae54 <stm_store_long+0xc4>
    afd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    afde:	00 00 
    afe0:	be 40 0c 00 00       	mov    $0xc40,%esi
    afe5:	48 89 df             	mov    %rbx,%rdi
    afe8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    afed:	e8 de b8 ff ff       	callq  68d0 <stm_rollback>
    aff2:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    aff9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    affe:	e9 79 ff ff ff       	jmpq   af7c <stm_store_long+0x1ec>
    b003:	0f 1f 00             	nopl   (%rax)
    b006:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b00d:	00 00 00 

000000000000b010 <stm_store_float>:
    b010:	41 57                	push   %r15
    b012:	41 56                	push   %r14
    b014:	41 55                	push   %r13
    b016:	41 54                	push   %r12
    b018:	55                   	push   %rbp
    b019:	53                   	push   %rbx
    b01a:	48 83 ec 38          	sub    $0x38,%rsp
    b01e:	48 c7 c2 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rdx
    b025:	40 f6 c7 03          	test   $0x3,%dil
    b029:	c5 f9 7e 44 24 1c    	vmovd  %xmm0,0x1c(%rsp)
    b02f:	64 48 8b 1a          	mov    %fs:(%rdx),%rbx
    b033:	0f 85 97 01 00 00    	jne    b1d0 <stm_store_float+0x1c0>
    b039:	48 89 fa             	mov    %rdi,%rdx
    b03c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    b040:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    b047:	00 00 
    b049:	48 c1 ea 02          	shr    $0x2,%rdx
    b04d:	48 89 fd             	mov    %rdi,%rbp
    b050:	48 8d 05 29 51 20 00 	lea    0x205129(%rip),%rax        # 210180 <_tinystm>
    b057:	83 e2 01             	and    $0x1,%edx
    b05a:	48 c1 ed 02          	shr    $0x2,%rbp
    b05e:	49 89 fe             	mov    %rdi,%r14
    b061:	c5 f9 7e 44 94 20    	vmovd  %xmm0,0x20(%rsp,%rdx,4)
    b067:	c7 44 94 28 ff ff ff 	movl   $0xffffffff,0x28(%rsp,%rdx,4)
    b06e:	ff 
    b06f:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
    b074:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
    b079:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    b07f:	48 01 c5             	add    %rax,%rbp
    b082:	48 8b 45 00          	mov    0x0(%rbp),%rax
    b086:	a8 01                	test   $0x1,%al
    b088:	0f 85 c2 00 00 00    	jne    b150 <stm_store_float+0x140>
    b08e:	49 89 c7             	mov    %rax,%r15
    b091:	49 c1 ef 04          	shr    $0x4,%r15
    b095:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    b09c:	75 0d                	jne    b0ab <stm_store_float+0x9b>
    b09e:	4c 3b bb e0 00 00 00 	cmp    0xe0(%rbx),%r15
    b0a5:	0f 87 6d 01 00 00    	ja     b218 <stm_store_float+0x208>
    b0ab:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    b0b1:	3b 93 04 01 00 00    	cmp    0x104(%rbx),%edx
    b0b7:	0f 84 33 01 00 00    	je     b1f0 <stm_store_float+0x1e0>
    b0bd:	48 c1 e2 06          	shl    $0x6,%rdx
    b0c1:	48 03 93 f8 00 00 00 	add    0xf8(%rbx),%rdx
    b0c8:	48 89 d1             	mov    %rdx,%rcx
    b0cb:	48 83 c9 01          	or     $0x1,%rcx
    b0cf:	f0 48 0f b1 4d 00    	lock cmpxchg %rcx,0x0(%rbp)
    b0d5:	75 ab                	jne    b082 <stm_store_float+0x72>
    b0d7:	4d 85 ed             	test   %r13,%r13
    b0da:	4c 89 32             	mov    %r14,(%rdx)
    b0dd:	4c 89 6a 10          	mov    %r13,0x10(%rdx)
    b0e1:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    b0e5:	74 55                	je     b13c <stm_store_float+0x12c>
    b0e7:	31 c0                	xor    %eax,%eax
    b0e9:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
    b0ed:	74 49                	je     b138 <stm_store_float+0x128>
    b0ef:	49 8b 0e             	mov    (%r14),%rcx
    b0f2:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    b0f6:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    b0fd:	00 
    b0fe:	49 31 cc             	xor    %rcx,%r12
    b101:	4d 21 e5             	and    %r12,%r13
    b104:	49 31 cd             	xor    %rcx,%r13
    b107:	48 85 c0             	test   %rax,%rax
    b10a:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    b10e:	74 04                	je     b114 <stm_store_float+0x104>
    b110:	48 89 50 28          	mov    %rdx,0x28(%rax)
    b114:	83 83 00 01 00 00 01 	addl   $0x1,0x100(%rbx)
    b11b:	83 83 08 01 00 00 01 	addl   $0x1,0x108(%rbx)
    b122:	48 83 c4 38          	add    $0x38,%rsp
    b126:	5b                   	pop    %rbx
    b127:	5d                   	pop    %rbp
    b128:	41 5c                	pop    %r12
    b12a:	41 5d                	pop    %r13
    b12c:	41 5e                	pop    %r14
    b12e:	41 5f                	pop    %r15
    b130:	c3                   	retq   
    b131:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b138:	4c 89 62 08          	mov    %r12,0x8(%rdx)
    b13c:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    b140:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    b147:	00 
    b148:	eb ca                	jmp    b114 <stm_store_float+0x104>
    b14a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b150:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    b157:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    b15b:	48 39 d0             	cmp    %rdx,%rax
    b15e:	0f 82 54 01 00 00    	jb     b2b8 <stm_store_float+0x2a8>
    b164:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    b16a:	48 89 ce             	mov    %rcx,%rsi
    b16d:	48 c1 e1 06          	shl    $0x6,%rcx
    b171:	48 01 d1             	add    %rdx,%rcx
    b174:	48 39 c8             	cmp    %rcx,%rax
    b177:	0f 83 3b 01 00 00    	jae    b2b8 <stm_store_float+0x2a8>
    b17d:	4d 85 ed             	test   %r13,%r13
    b180:	74 a0                	je     b122 <stm_store_float+0x112>
    b182:	eb 14                	jmp    b198 <stm_store_float+0x188>
    b184:	0f 1f 40 00          	nopl   0x0(%rax)
    b188:	48 8b 48 28          	mov    0x28(%rax),%rcx
    b18c:	48 85 c9             	test   %rcx,%rcx
    b18f:	0f 84 db 00 00 00    	je     b270 <stm_store_float+0x260>
    b195:	48 89 c8             	mov    %rcx,%rax
    b198:	4c 3b 30             	cmp    (%rax),%r14
    b19b:	75 eb                	jne    b188 <stm_store_float+0x178>
    b19d:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
    b1a1:	48 8b 50 10          	mov    0x10(%rax),%rdx
    b1a5:	74 16                	je     b1bd <stm_store_float+0x1ad>
    b1a7:	48 85 d2             	test   %rdx,%rdx
    b1aa:	0f 84 27 01 00 00    	je     b2d7 <stm_store_float+0x2c7>
    b1b0:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b1b4:	49 31 cc             	xor    %rcx,%r12
    b1b7:	4d 21 ec             	and    %r13,%r12
    b1ba:	49 31 cc             	xor    %rcx,%r12
    b1bd:	49 09 d5             	or     %rdx,%r13
    b1c0:	4c 89 60 08          	mov    %r12,0x8(%rax)
    b1c4:	4c 89 68 10          	mov    %r13,0x10(%rax)
    b1c8:	e9 55 ff ff ff       	jmpq   b122 <stm_store_float+0x112>
    b1cd:	0f 1f 00             	nopl   (%rax)
    b1d0:	48 8d 74 24 1c       	lea    0x1c(%rsp),%rsi
    b1d5:	ba 04 00 00 00       	mov    $0x4,%edx
    b1da:	e8 d1 e3 ff ff       	callq  95b0 <stm_store_bytes>
    b1df:	48 83 c4 38          	add    $0x38,%rsp
    b1e3:	5b                   	pop    %rbx
    b1e4:	5d                   	pop    %rbp
    b1e5:	41 5c                	pop    %r12
    b1e7:	41 5d                	pop    %r13
    b1e9:	41 5e                	pop    %r14
    b1eb:	41 5f                	pop    %r15
    b1ed:	c3                   	retq   
    b1ee:	66 90                	xchg   %ax,%ax
    b1f0:	be 40 0c 00 00       	mov    $0xc40,%esi
    b1f5:	48 89 df             	mov    %rbx,%rdi
    b1f8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b1fd:	e8 ce b6 ff ff       	callq  68d0 <stm_rollback>
    b202:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    b208:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b20d:	e9 ab fe ff ff       	jmpq   b0bd <stm_store_float+0xad>
    b212:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b218:	8b 8b f0 00 00 00    	mov    0xf0(%rbx),%ecx
    b21e:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    b225:	85 c9                	test   %ecx,%ecx
    b227:	0f 8e 7e fe ff ff    	jle    b0ab <stm_store_float+0x9b>
    b22d:	48 3b 6a 08          	cmp    0x8(%rdx),%rbp
    b231:	74 28                	je     b25b <stm_store_float+0x24b>
    b233:	83 e9 01             	sub    $0x1,%ecx
    b236:	48 83 c2 18          	add    $0x18,%rdx
    b23a:	48 c1 e1 04          	shl    $0x4,%rcx
    b23e:	48 01 d1             	add    %rdx,%rcx
    b241:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b248:	48 39 d1             	cmp    %rdx,%rcx
    b24b:	0f 84 5a fe ff ff    	je     b0ab <stm_store_float+0x9b>
    b251:	48 83 c2 10          	add    $0x10,%rdx
    b255:	48 3b 6a f0          	cmp    -0x10(%rdx),%rbp
    b259:	75 ed                	jne    b248 <stm_store_float+0x238>
    b25b:	be 40 06 00 00       	mov    $0x640,%esi
    b260:	48 89 df             	mov    %rbx,%rdi
    b263:	e8 68 b6 ff ff       	callq  68d0 <stm_rollback>
    b268:	e9 b5 fe ff ff       	jmpq   b122 <stm_store_float+0x112>
    b26d:	0f 1f 00             	nopl   (%rax)
    b270:	3b b3 04 01 00 00    	cmp    0x104(%rbx),%esi
    b276:	4c 8b 78 18          	mov    0x18(%rax),%r15
    b27a:	74 63                	je     b2df <stm_store_float+0x2cf>
    b27c:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    b282:	48 c1 e1 06          	shl    $0x6,%rcx
    b286:	48 01 ca             	add    %rcx,%rdx
    b289:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
    b28d:	4c 89 32             	mov    %r14,(%rdx)
    b290:	4c 89 6a 10          	mov    %r13,0x10(%rdx)
    b294:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    b298:	0f 85 51 fe ff ff    	jne    b0ef <stm_store_float+0xdf>
    b29e:	4c 89 62 08          	mov    %r12,0x8(%rdx)
    b2a2:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    b2a6:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    b2ad:	00 
    b2ae:	e9 5d fe ff ff       	jmpq   b110 <stm_store_float+0x100>
    b2b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b2b8:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    b2bf:	0f 85 bd fd ff ff    	jne    b082 <stm_store_float+0x72>
    b2c5:	be 40 04 00 00       	mov    $0x440,%esi
    b2ca:	48 89 df             	mov    %rbx,%rdi
    b2cd:	e8 fe b5 ff ff       	callq  68d0 <stm_rollback>
    b2d2:	e9 4b fe ff ff       	jmpq   b122 <stm_store_float+0x112>
    b2d7:	49 8b 0e             	mov    (%r14),%rcx
    b2da:	e9 d5 fe ff ff       	jmpq   b1b4 <stm_store_float+0x1a4>
    b2df:	be 40 0c 00 00       	mov    $0xc40,%esi
    b2e4:	48 89 df             	mov    %rbx,%rdi
    b2e7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b2ec:	e8 df b5 ff ff       	callq  68d0 <stm_rollback>
    b2f1:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    b2f8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b2fd:	e9 7a ff ff ff       	jmpq   b27c <stm_store_float+0x26c>
    b302:	0f 1f 40 00          	nopl   0x0(%rax)
    b306:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b30d:	00 00 00 

000000000000b310 <stm_store_double>:
    b310:	41 56                	push   %r14
    b312:	41 55                	push   %r13
    b314:	41 54                	push   %r12
    b316:	55                   	push   %rbp
    b317:	49 89 fc             	mov    %rdi,%r12
    b31a:	53                   	push   %rbx
    b31b:	48 83 ec 20          	sub    $0x20,%rsp
    b31f:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    b326:	83 e7 07             	and    $0x7,%edi
    b329:	c5 f9 d6 44 24 18    	vmovq  %xmm0,0x18(%rsp)
    b32f:	64 48 8b 18          	mov    %fs:(%rax),%rbx
    b333:	0f 85 0f 01 00 00    	jne    b448 <stm_store_double+0x138>
    b339:	4c 89 e5             	mov    %r12,%rbp
    b33c:	48 8d 05 3d 4e 20 00 	lea    0x204e3d(%rip),%rax        # 210180 <_tinystm>
    b343:	c4 c1 f9 7e c5       	vmovq  %xmm0,%r13
    b348:	48 c1 ed 02          	shr    $0x2,%rbp
    b34c:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    b352:	48 01 c5             	add    %rax,%rbp
    b355:	48 8b 45 00          	mov    0x0(%rbp),%rax
    b359:	a8 01                	test   $0x1,%al
    b35b:	0f 85 87 00 00 00    	jne    b3e8 <stm_store_double+0xd8>
    b361:	49 89 c6             	mov    %rax,%r14
    b364:	49 c1 ee 04          	shr    $0x4,%r14
    b368:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    b36f:	75 0d                	jne    b37e <stm_store_double+0x6e>
    b371:	4c 3b b3 e0 00 00 00 	cmp    0xe0(%rbx),%r14
    b378:	0f 87 1a 01 00 00    	ja     b498 <stm_store_double+0x188>
    b37e:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    b384:	3b 93 04 01 00 00    	cmp    0x104(%rbx),%edx
    b38a:	0f 84 e0 00 00 00    	je     b470 <stm_store_double+0x160>
    b390:	48 c1 e2 06          	shl    $0x6,%rdx
    b394:	48 03 93 f8 00 00 00 	add    0xf8(%rbx),%rdx
    b39b:	48 89 d1             	mov    %rdx,%rcx
    b39e:	48 83 c9 01          	or     $0x1,%rcx
    b3a2:	f0 48 0f b1 4d 00    	lock cmpxchg %rcx,0x0(%rbp)
    b3a8:	75 ab                	jne    b355 <stm_store_double+0x45>
    b3aa:	4c 89 22             	mov    %r12,(%rdx)
    b3ad:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
    b3b4:	ff 
    b3b5:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    b3b9:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    b3bd:	4c 89 72 18          	mov    %r14,0x18(%rdx)
    b3c1:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    b3c8:	00 
    b3c9:	83 83 00 01 00 00 01 	addl   $0x1,0x100(%rbx)
    b3d0:	83 83 08 01 00 00 01 	addl   $0x1,0x108(%rbx)
    b3d7:	48 83 c4 20          	add    $0x20,%rsp
    b3db:	5b                   	pop    %rbx
    b3dc:	5d                   	pop    %rbp
    b3dd:	41 5c                	pop    %r12
    b3df:	41 5d                	pop    %r13
    b3e1:	41 5e                	pop    %r14
    b3e3:	c3                   	retq   
    b3e4:	0f 1f 40 00          	nopl   0x0(%rax)
    b3e8:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    b3ef:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    b3f3:	48 39 d0             	cmp    %rdx,%rax
    b3f6:	0f 82 3c 01 00 00    	jb     b538 <stm_store_double+0x228>
    b3fc:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    b402:	48 89 ce             	mov    %rcx,%rsi
    b405:	48 c1 e1 06          	shl    $0x6,%rcx
    b409:	48 01 d1             	add    %rdx,%rcx
    b40c:	48 39 c8             	cmp    %rcx,%rax
    b40f:	72 1f                	jb     b430 <stm_store_double+0x120>
    b411:	e9 22 01 00 00       	jmpq   b538 <stm_store_double+0x228>
    b416:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b41d:	00 00 00 
    b420:	48 8b 48 28          	mov    0x28(%rax),%rcx
    b424:	48 85 c9             	test   %rcx,%rcx
    b427:	0f 84 c3 00 00 00    	je     b4f0 <stm_store_double+0x1e0>
    b42d:	48 89 c8             	mov    %rcx,%rax
    b430:	4c 3b 20             	cmp    (%rax),%r12
    b433:	75 eb                	jne    b420 <stm_store_double+0x110>
    b435:	4c 89 68 08          	mov    %r13,0x8(%rax)
    b439:	48 c7 40 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rax)
    b440:	ff 
    b441:	eb 94                	jmp    b3d7 <stm_store_double+0xc7>
    b443:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b448:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    b44d:	4c 89 e7             	mov    %r12,%rdi
    b450:	ba 08 00 00 00       	mov    $0x8,%edx
    b455:	e8 56 e1 ff ff       	callq  95b0 <stm_store_bytes>
    b45a:	48 83 c4 20          	add    $0x20,%rsp
    b45e:	5b                   	pop    %rbx
    b45f:	5d                   	pop    %rbp
    b460:	41 5c                	pop    %r12
    b462:	41 5d                	pop    %r13
    b464:	41 5e                	pop    %r14
    b466:	c3                   	retq   
    b467:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b46e:	00 00 
    b470:	be 40 0c 00 00       	mov    $0xc40,%esi
    b475:	48 89 df             	mov    %rbx,%rdi
    b478:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b47d:	e8 4e b4 ff ff       	callq  68d0 <stm_rollback>
    b482:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    b488:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b48d:	e9 fe fe ff ff       	jmpq   b390 <stm_store_double+0x80>
    b492:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b498:	8b 8b f0 00 00 00    	mov    0xf0(%rbx),%ecx
    b49e:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    b4a5:	85 c9                	test   %ecx,%ecx
    b4a7:	0f 8e d1 fe ff ff    	jle    b37e <stm_store_double+0x6e>
    b4ad:	48 39 6a 08          	cmp    %rbp,0x8(%rdx)
    b4b1:	74 28                	je     b4db <stm_store_double+0x1cb>
    b4b3:	83 e9 01             	sub    $0x1,%ecx
    b4b6:	48 83 c2 18          	add    $0x18,%rdx
    b4ba:	48 c1 e1 04          	shl    $0x4,%rcx
    b4be:	48 01 d1             	add    %rdx,%rcx
    b4c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b4c8:	48 39 d1             	cmp    %rdx,%rcx
    b4cb:	0f 84 ad fe ff ff    	je     b37e <stm_store_double+0x6e>
    b4d1:	48 83 c2 10          	add    $0x10,%rdx
    b4d5:	48 3b 6a f0          	cmp    -0x10(%rdx),%rbp
    b4d9:	75 ed                	jne    b4c8 <stm_store_double+0x1b8>
    b4db:	be 40 06 00 00       	mov    $0x640,%esi
    b4e0:	48 89 df             	mov    %rbx,%rdi
    b4e3:	e8 e8 b3 ff ff       	callq  68d0 <stm_rollback>
    b4e8:	e9 ea fe ff ff       	jmpq   b3d7 <stm_store_double+0xc7>
    b4ed:	0f 1f 00             	nopl   (%rax)
    b4f0:	3b b3 04 01 00 00    	cmp    0x104(%rbx),%esi
    b4f6:	4c 8b 70 18          	mov    0x18(%rax),%r14
    b4fa:	74 64                	je     b560 <stm_store_double+0x250>
    b4fc:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    b502:	48 c1 e1 06          	shl    $0x6,%rcx
    b506:	48 01 ca             	add    %rcx,%rdx
    b509:	4c 89 22             	mov    %r12,(%rdx)
    b50c:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
    b513:	ff 
    b514:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    b518:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    b51c:	4c 89 72 18          	mov    %r14,0x18(%rdx)
    b520:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    b527:	00 
    b528:	48 89 50 28          	mov    %rdx,0x28(%rax)
    b52c:	e9 98 fe ff ff       	jmpq   b3c9 <stm_store_double+0xb9>
    b531:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b538:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    b53f:	0f 85 10 fe ff ff    	jne    b355 <stm_store_double+0x45>
    b545:	be 40 04 00 00       	mov    $0x440,%esi
    b54a:	48 89 df             	mov    %rbx,%rdi
    b54d:	e8 7e b3 ff ff       	callq  68d0 <stm_rollback>
    b552:	e9 80 fe ff ff       	jmpq   b3d7 <stm_store_double+0xc7>
    b557:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b55e:	00 00 
    b560:	be 40 0c 00 00       	mov    $0xc40,%esi
    b565:	48 89 df             	mov    %rbx,%rdi
    b568:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b56d:	e8 5e b3 ff ff       	callq  68d0 <stm_rollback>
    b572:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    b579:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b57e:	e9 79 ff ff ff       	jmpq   b4fc <stm_store_double+0x1ec>
    b583:	0f 1f 00             	nopl   (%rax)
    b586:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b58d:	00 00 00 

000000000000b590 <stm_set_bytes>:
    b590:	41 57                	push   %r15
    b592:	41 56                	push   %r14
    b594:	49 89 d6             	mov    %rdx,%r14
    b597:	41 55                	push   %r13
    b599:	41 54                	push   %r12
    b59b:	55                   	push   %rbp
    b59c:	53                   	push   %rbx
    b59d:	48 83 ec 48          	sub    $0x48,%rsp
    b5a1:	48 85 d2             	test   %rdx,%rdx
    b5a4:	0f 84 62 02 00 00    	je     b80c <stm_set_bytes+0x27c>
    b5aa:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
    b5b1:	40 0f b6 d6          	movzbl %sil,%edx
    b5b5:	49 89 f8             	mov    %rdi,%r8
    b5b8:	48 89 d1             	mov    %rdx,%rcx
    b5bb:	48 c1 e1 10          	shl    $0x10,%rcx
    b5bf:	64 48 8b 18          	mov    %fs:(%rax),%rbx
    b5c3:	31 c0                	xor    %eax,%eax
    b5c5:	40 88 f0             	mov    %sil,%al
    b5c8:	88 d4                	mov    %dl,%ah
    b5ca:	48 25 ff ff 00 ff    	and    $0xffffffffff00ffff,%rax
    b5d0:	49 89 c4             	mov    %rax,%r12
    b5d3:	48 89 d0             	mov    %rdx,%rax
    b5d6:	49 09 cc             	or     %rcx,%r12
    b5d9:	48 b9 ff ff ff 00 ff 	movabs $0xffffffff00ffffff,%rcx
    b5e0:	ff ff ff 
    b5e3:	48 c1 e0 18          	shl    $0x18,%rax
    b5e7:	49 21 cc             	and    %rcx,%r12
    b5ea:	48 b9 ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rcx
    b5f1:	ff ff ff 
    b5f4:	49 09 c4             	or     %rax,%r12
    b5f7:	48 89 d0             	mov    %rdx,%rax
    b5fa:	48 c1 e0 20          	shl    $0x20,%rax
    b5fe:	49 21 cc             	and    %rcx,%r12
    b601:	48 b9 ff ff ff ff ff 	movabs $0xffff00ffffffffff,%rcx
    b608:	00 ff ff 
    b60b:	49 09 c4             	or     %rax,%r12
    b60e:	48 89 d0             	mov    %rdx,%rax
    b611:	48 c1 e0 28          	shl    $0x28,%rax
    b615:	49 21 cc             	and    %rcx,%r12
    b618:	48 b9 ff ff ff ff ff 	movabs $0xff00ffffffffffff,%rcx
    b61f:	ff 00 ff 
    b622:	49 09 c4             	or     %rax,%r12
    b625:	48 89 d0             	mov    %rdx,%rax
    b628:	48 c1 e0 30          	shl    $0x30,%rax
    b62c:	49 21 cc             	and    %rcx,%r12
    b62f:	49 09 c4             	or     %rax,%r12
    b632:	48 89 d0             	mov    %rdx,%rax
    b635:	48 ba ff ff ff ff ff 	movabs $0xffffffffffffff,%rdx
    b63c:	ff ff 00 
    b63f:	48 c1 e0 38          	shl    $0x38,%rax
    b643:	49 21 d4             	and    %rdx,%r12
    b646:	49 09 c4             	or     %rax,%r12
    b649:	89 f8                	mov    %edi,%eax
    b64b:	83 e0 07             	and    $0x7,%eax
    b64e:	0f 85 cc 01 00 00    	jne    b820 <stm_set_bytes+0x290>
    b654:	49 83 fe 07          	cmp    $0x7,%r14
    b658:	4c 8d 0d 21 4b 20 00 	lea    0x204b21(%rip),%r9        # 210180 <_tinystm>
    b65f:	0f 86 c8 00 00 00    	jbe    b72d <stm_set_bytes+0x19d>
    b665:	4d 8d 5e f8          	lea    -0x8(%r14),%r11
    b669:	4d 89 c5             	mov    %r8,%r13
    b66c:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    b673:	49 c1 eb 03          	shr    $0x3,%r11
    b677:	4f 8d 54 d8 08       	lea    0x8(%r8,%r11,8),%r10
    b67c:	0f 1f 40 00          	nopl   0x0(%rax)
    b680:	4c 89 ed             	mov    %r13,%rbp
    b683:	48 c1 ed 02          	shr    $0x2,%rbp
    b687:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    b68d:	4c 01 cd             	add    %r9,%rbp
    b690:	48 8b 45 00          	mov    0x0(%rbp),%rax
    b694:	a8 01                	test   $0x1,%al
    b696:	0f 85 94 02 00 00    	jne    b930 <stm_set_bytes+0x3a0>
    b69c:	49 89 c7             	mov    %rax,%r15
    b69f:	49 c1 ef 04          	shr    $0x4,%r15
    b6a3:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    b6aa:	75 0d                	jne    b6b9 <stm_set_bytes+0x129>
    b6ac:	4c 3b bb e0 00 00 00 	cmp    0xe0(%rbx),%r15
    b6b3:	0f 87 27 03 00 00    	ja     b9e0 <stm_set_bytes+0x450>
    b6b9:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    b6bf:	3b 8b 04 01 00 00    	cmp    0x104(%rbx),%ecx
    b6c5:	0f 84 bd 02 00 00    	je     b988 <stm_set_bytes+0x3f8>
    b6cb:	48 c1 e1 06          	shl    $0x6,%rcx
    b6cf:	48 03 8b f8 00 00 00 	add    0xf8(%rbx),%rcx
    b6d6:	48 89 ce             	mov    %rcx,%rsi
    b6d9:	48 83 ce 01          	or     $0x1,%rsi
    b6dd:	f0 48 0f b1 75 00    	lock cmpxchg %rsi,0x0(%rbp)
    b6e3:	75 ab                	jne    b690 <stm_set_bytes+0x100>
    b6e5:	4c 89 29             	mov    %r13,(%rcx)
    b6e8:	48 89 51 10          	mov    %rdx,0x10(%rcx)
    b6ec:	48 89 69 20          	mov    %rbp,0x20(%rcx)
    b6f0:	4c 89 61 08          	mov    %r12,0x8(%rcx)
    b6f4:	4c 89 79 18          	mov    %r15,0x18(%rcx)
    b6f8:	48 c7 41 28 00 00 00 	movq   $0x0,0x28(%rcx)
    b6ff:	00 
    b700:	83 83 00 01 00 00 01 	addl   $0x1,0x100(%rbx)
    b707:	83 83 08 01 00 00 01 	addl   $0x1,0x108(%rbx)
    b70e:	49 83 c5 08          	add    $0x8,%r13
    b712:	4d 39 ea             	cmp    %r13,%r10
    b715:	0f 85 65 ff ff ff    	jne    b680 <stm_set_bytes+0xf0>
    b71b:	4f 8d 44 d8 08       	lea    0x8(%r8,%r11,8),%r8
    b720:	41 83 e6 07          	and    $0x7,%r14d
    b724:	4d 85 f6             	test   %r14,%r14
    b727:	0f 84 df 00 00 00    	je     b80c <stm_set_bytes+0x27c>
    b72d:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
    b732:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    b739:	00 00 
    b73b:	49 01 c6             	add    %rax,%r14
    b73e:	66 90                	xchg   %ax,%ax
    b740:	c6 00 ff             	movb   $0xff,(%rax)
    b743:	48 83 c0 01          	add    $0x1,%rax
    b747:	4c 39 f0             	cmp    %r14,%rax
    b74a:	75 f4                	jne    b740 <stm_set_bytes+0x1b0>
    b74c:	4c 89 c5             	mov    %r8,%rbp
    b74f:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    b754:	4d 89 e6             	mov    %r12,%r14
    b757:	48 c1 ed 02          	shr    $0x2,%rbp
    b75b:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    b761:	4c 01 cd             	add    %r9,%rbp
    b764:	48 8b 45 00          	mov    0x0(%rbp),%rax
    b768:	a8 01                	test   $0x1,%al
    b76a:	0f 85 90 03 00 00    	jne    bb00 <stm_set_bytes+0x570>
    b770:	49 89 c7             	mov    %rax,%r15
    b773:	49 c1 ef 04          	shr    $0x4,%r15
    b777:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    b77e:	75 0d                	jne    b78d <stm_set_bytes+0x1fd>
    b780:	4c 3b bb e0 00 00 00 	cmp    0xe0(%rbx),%r15
    b787:	0f 87 4a 05 00 00    	ja     bcd7 <stm_set_bytes+0x747>
    b78d:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    b793:	3b 93 04 01 00 00    	cmp    0x104(%rbx),%edx
    b799:	0f 84 69 04 00 00    	je     bc08 <stm_set_bytes+0x678>
    b79f:	48 c1 e2 06          	shl    $0x6,%rdx
    b7a3:	48 03 93 f8 00 00 00 	add    0xf8(%rbx),%rdx
    b7aa:	48 89 d1             	mov    %rdx,%rcx
    b7ad:	48 83 c9 01          	or     $0x1,%rcx
    b7b1:	f0 48 0f b1 4d 00    	lock cmpxchg %rcx,0x0(%rbp)
    b7b7:	75 ab                	jne    b764 <stm_set_bytes+0x1d4>
    b7b9:	4d 85 ed             	test   %r13,%r13
    b7bc:	4c 89 02             	mov    %r8,(%rdx)
    b7bf:	4c 89 6a 10          	mov    %r13,0x10(%rdx)
    b7c3:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    b7c7:	0f 84 9f 02 00 00    	je     ba6c <stm_set_bytes+0x4dc>
    b7cd:	31 c0                	xor    %eax,%eax
    b7cf:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
    b7d3:	0f 84 8f 02 00 00    	je     ba68 <stm_set_bytes+0x4d8>
    b7d9:	49 8b 08             	mov    (%r8),%rcx
    b7dc:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    b7e0:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    b7e7:	00 
    b7e8:	49 31 cc             	xor    %rcx,%r12
    b7eb:	4d 21 e5             	and    %r12,%r13
    b7ee:	49 31 cd             	xor    %rcx,%r13
    b7f1:	48 85 c0             	test   %rax,%rax
    b7f4:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    b7f8:	74 04                	je     b7fe <stm_set_bytes+0x26e>
    b7fa:	48 89 50 28          	mov    %rdx,0x28(%rax)
    b7fe:	83 83 00 01 00 00 01 	addl   $0x1,0x100(%rbx)
    b805:	83 83 08 01 00 00 01 	addl   $0x1,0x108(%rbx)
    b80c:	48 83 c4 48          	add    $0x48,%rsp
    b810:	5b                   	pop    %rbx
    b811:	5d                   	pop    %rbp
    b812:	41 5c                	pop    %r12
    b814:	41 5d                	pop    %r13
    b816:	41 5e                	pop    %r14
    b818:	41 5f                	pop    %r15
    b81a:	c3                   	retq   
    b81b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b820:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
    b824:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    b82b:	00 00 
    b82d:	4d 89 c5             	mov    %r8,%r13
    b830:	eb 0b                	jmp    b83d <stm_set_bytes+0x2ad>
    b832:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b838:	4d 85 f6             	test   %r14,%r14
    b83b:	74 13                	je     b850 <stm_set_bytes+0x2c0>
    b83d:	89 c2                	mov    %eax,%edx
    b83f:	83 c0 01             	add    $0x1,%eax
    b842:	49 83 ee 01          	sub    $0x1,%r14
    b846:	83 f8 07             	cmp    $0x7,%eax
    b849:	c6 44 14 38 ff       	movb   $0xff,0x38(%rsp,%rdx,1)
    b84e:	76 e8                	jbe    b838 <stm_set_bytes+0x2a8>
    b850:	4c 89 ed             	mov    %r13,%rbp
    b853:	4c 8d 0d 26 49 20 00 	lea    0x204926(%rip),%r9        # 210180 <_tinystm>
    b85a:	4c 8b 7c 24 38       	mov    0x38(%rsp),%r15
    b85f:	48 c1 ed 02          	shr    $0x2,%rbp
    b863:	4d 8d 45 08          	lea    0x8(%r13),%r8
    b867:	4d 89 e2             	mov    %r12,%r10
    b86a:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
    b870:	4c 01 cd             	add    %r9,%rbp
    b873:	48 8b 45 00          	mov    0x0(%rbp),%rax
    b877:	a8 01                	test   $0x1,%al
    b879:	0f 85 09 03 00 00    	jne    bb88 <stm_set_bytes+0x5f8>
    b87f:	48 89 c1             	mov    %rax,%rcx
    b882:	48 c1 e9 04          	shr    $0x4,%rcx
    b886:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    b88d:	75 0d                	jne    b89c <stm_set_bytes+0x30c>
    b88f:	48 3b 8b e0 00 00 00 	cmp    0xe0(%rbx),%rcx
    b896:	0f 87 92 04 00 00    	ja     bd2e <stm_set_bytes+0x79e>
    b89c:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    b8a2:	3b 93 04 01 00 00    	cmp    0x104(%rbx),%edx
    b8a8:	0f 84 84 03 00 00    	je     bc32 <stm_set_bytes+0x6a2>
    b8ae:	48 c1 e2 06          	shl    $0x6,%rdx
    b8b2:	48 03 93 f8 00 00 00 	add    0xf8(%rbx),%rdx
    b8b9:	48 89 d6             	mov    %rdx,%rsi
    b8bc:	48 83 ce 01          	or     $0x1,%rsi
    b8c0:	f0 48 0f b1 75 00    	lock cmpxchg %rsi,0x0(%rbp)
    b8c6:	75 ab                	jne    b873 <stm_set_bytes+0x2e3>
    b8c8:	4d 85 ff             	test   %r15,%r15
    b8cb:	4c 89 2a             	mov    %r13,(%rdx)
    b8ce:	4c 89 7a 10          	mov    %r15,0x10(%rdx)
    b8d2:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    b8d6:	0f 84 e0 01 00 00    	je     babc <stm_set_bytes+0x52c>
    b8dc:	31 c0                	xor    %eax,%eax
    b8de:	49 83 ff ff          	cmp    $0xffffffffffffffff,%r15
    b8e2:	0f 84 d0 01 00 00    	je     bab8 <stm_set_bytes+0x528>
    b8e8:	49 8b 7d 00          	mov    0x0(%r13),%rdi
    b8ec:	4c 89 e6             	mov    %r12,%rsi
    b8ef:	48 89 4a 18          	mov    %rcx,0x18(%rdx)
    b8f3:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    b8fa:	00 
    b8fb:	48 31 fe             	xor    %rdi,%rsi
    b8fe:	49 21 f7             	and    %rsi,%r15
    b901:	49 31 ff             	xor    %rdi,%r15
    b904:	48 85 c0             	test   %rax,%rax
    b907:	4c 89 7a 08          	mov    %r15,0x8(%rdx)
    b90b:	74 04                	je     b911 <stm_set_bytes+0x381>
    b90d:	48 89 50 28          	mov    %rdx,0x28(%rax)
    b911:	83 83 00 01 00 00 01 	addl   $0x1,0x100(%rbx)
    b918:	83 83 08 01 00 00 01 	addl   $0x1,0x108(%rbx)
    b91f:	49 83 fe 07          	cmp    $0x7,%r14
    b923:	0f 87 3c fd ff ff    	ja     b665 <stm_set_bytes+0xd5>
    b929:	e9 f6 fd ff ff       	jmpq   b724 <stm_set_bytes+0x194>
    b92e:	66 90                	xchg   %ax,%ax
    b930:	48 8b 8b f8 00 00 00 	mov    0xf8(%rbx),%rcx
    b937:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    b93b:	48 39 c8             	cmp    %rcx,%rax
    b93e:	0f 82 8c 01 00 00    	jb     bad0 <stm_set_bytes+0x540>
    b944:	8b bb 00 01 00 00    	mov    0x100(%rbx),%edi
    b94a:	48 89 fe             	mov    %rdi,%rsi
    b94d:	48 c1 e7 06          	shl    $0x6,%rdi
    b951:	48 01 f9             	add    %rdi,%rcx
    b954:	48 39 c8             	cmp    %rcx,%rax
    b957:	72 17                	jb     b970 <stm_set_bytes+0x3e0>
    b959:	e9 72 01 00 00       	jmpq   bad0 <stm_set_bytes+0x540>
    b95e:	66 90                	xchg   %ax,%ax
    b960:	48 8b 78 28          	mov    0x28(%rax),%rdi
    b964:	48 85 ff             	test   %rdi,%rdi
    b967:	0f 84 13 01 00 00    	je     ba80 <stm_set_bytes+0x4f0>
    b96d:	48 89 f8             	mov    %rdi,%rax
    b970:	4c 39 28             	cmp    %r13,(%rax)
    b973:	75 eb                	jne    b960 <stm_set_bytes+0x3d0>
    b975:	4c 89 60 08          	mov    %r12,0x8(%rax)
    b979:	48 89 50 10          	mov    %rdx,0x10(%rax)
    b97d:	e9 8c fd ff ff       	jmpq   b70e <stm_set_bytes+0x17e>
    b982:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b988:	be 40 0c 00 00       	mov    $0xc40,%esi
    b98d:	48 89 df             	mov    %rbx,%rdi
    b990:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    b995:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
    b99a:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    b99f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    b9a4:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
    b9a9:	4c 89 14 24          	mov    %r10,(%rsp)
    b9ad:	e8 1e af ff ff       	callq  68d0 <stm_rollback>
    b9b2:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    b9b8:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    b9bd:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    b9c2:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    b9c7:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    b9cc:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
    b9d1:	4c 8b 14 24          	mov    (%rsp),%r10
    b9d5:	e9 f1 fc ff ff       	jmpq   b6cb <stm_set_bytes+0x13b>
    b9da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b9e0:	8b b3 f0 00 00 00    	mov    0xf0(%rbx),%esi
    b9e6:	48 8b 8b e8 00 00 00 	mov    0xe8(%rbx),%rcx
    b9ed:	85 f6                	test   %esi,%esi
    b9ef:	0f 8e c4 fc ff ff    	jle    b6b9 <stm_set_bytes+0x129>
    b9f5:	48 39 69 08          	cmp    %rbp,0x8(%rcx)
    b9f9:	74 28                	je     ba23 <stm_set_bytes+0x493>
    b9fb:	83 ee 01             	sub    $0x1,%esi
    b9fe:	48 83 c1 18          	add    $0x18,%rcx
    ba02:	48 c1 e6 04          	shl    $0x4,%rsi
    ba06:	48 01 ce             	add    %rcx,%rsi
    ba09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ba10:	48 39 ce             	cmp    %rcx,%rsi
    ba13:	0f 84 a0 fc ff ff    	je     b6b9 <stm_set_bytes+0x129>
    ba19:	48 83 c1 10          	add    $0x10,%rcx
    ba1d:	48 3b 69 f0          	cmp    -0x10(%rcx),%rbp
    ba21:	75 ed                	jne    ba10 <stm_set_bytes+0x480>
    ba23:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    ba28:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    ba2d:	be 40 06 00 00       	mov    $0x640,%esi
    ba32:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    ba37:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
    ba3c:	4c 89 14 24          	mov    %r10,(%rsp)
    ba40:	48 89 df             	mov    %rbx,%rdi
    ba43:	e8 88 ae ff ff       	callq  68d0 <stm_rollback>
    ba48:	4c 8b 14 24          	mov    (%rsp),%r10
    ba4c:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
    ba51:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    ba56:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    ba5b:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    ba60:	e9 a9 fc ff ff       	jmpq   b70e <stm_set_bytes+0x17e>
    ba65:	0f 1f 00             	nopl   (%rax)
    ba68:	4c 89 62 08          	mov    %r12,0x8(%rdx)
    ba6c:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    ba70:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    ba77:	00 
    ba78:	e9 81 fd ff ff       	jmpq   b7fe <stm_set_bytes+0x26e>
    ba7d:	0f 1f 00             	nopl   (%rax)
    ba80:	3b b3 04 01 00 00    	cmp    0x104(%rbx),%esi
    ba86:	4c 8b 78 18          	mov    0x18(%rax),%r15
    ba8a:	0f 84 ea 01 00 00    	je     bc7a <stm_set_bytes+0x6ea>
    ba90:	4c 89 29             	mov    %r13,(%rcx)
    ba93:	48 89 51 10          	mov    %rdx,0x10(%rcx)
    ba97:	48 89 69 20          	mov    %rbp,0x20(%rcx)
    ba9b:	4c 89 61 08          	mov    %r12,0x8(%rcx)
    ba9f:	4c 89 79 18          	mov    %r15,0x18(%rcx)
    baa3:	48 c7 41 28 00 00 00 	movq   $0x0,0x28(%rcx)
    baaa:	00 
    baab:	48 89 48 28          	mov    %rcx,0x28(%rax)
    baaf:	e9 4c fc ff ff       	jmpq   b700 <stm_set_bytes+0x170>
    bab4:	0f 1f 40 00          	nopl   0x0(%rax)
    bab8:	4c 89 62 08          	mov    %r12,0x8(%rdx)
    babc:	48 89 4a 18          	mov    %rcx,0x18(%rdx)
    bac0:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    bac7:	00 
    bac8:	e9 44 fe ff ff       	jmpq   b911 <stm_set_bytes+0x381>
    bacd:	0f 1f 00             	nopl   (%rax)
    bad0:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    bad7:	0f 85 b3 fb ff ff    	jne    b690 <stm_set_bytes+0x100>
    badd:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    bae2:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    bae7:	be 40 04 00 00       	mov    $0x440,%esi
    baec:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    baf1:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
    baf6:	4c 89 14 24          	mov    %r10,(%rsp)
    bafa:	e9 41 ff ff ff       	jmpq   ba40 <stm_set_bytes+0x4b0>
    baff:	90                   	nop
    bb00:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    bb07:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    bb0b:	48 39 d0             	cmp    %rdx,%rax
    bb0e:	0f 82 ca 02 00 00    	jb     bdde <stm_set_bytes+0x84e>
    bb14:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    bb1a:	48 89 ce             	mov    %rcx,%rsi
    bb1d:	48 c1 e1 06          	shl    $0x6,%rcx
    bb21:	48 01 d1             	add    %rdx,%rcx
    bb24:	48 39 c8             	cmp    %rcx,%rax
    bb27:	0f 83 b1 02 00 00    	jae    bdde <stm_set_bytes+0x84e>
    bb2d:	4d 85 ed             	test   %r13,%r13
    bb30:	75 1e                	jne    bb50 <stm_set_bytes+0x5c0>
    bb32:	e9 d5 fc ff ff       	jmpq   b80c <stm_set_bytes+0x27c>
    bb37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bb3e:	00 00 
    bb40:	48 8b 48 28          	mov    0x28(%rax),%rcx
    bb44:	48 85 c9             	test   %rcx,%rcx
    bb47:	0f 84 4a 02 00 00    	je     bd97 <stm_set_bytes+0x807>
    bb4d:	48 89 c8             	mov    %rcx,%rax
    bb50:	4c 39 00             	cmp    %r8,(%rax)
    bb53:	75 eb                	jne    bb40 <stm_set_bytes+0x5b0>
    bb55:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
    bb59:	48 8b 50 10          	mov    0x10(%rax),%rdx
    bb5d:	74 19                	je     bb78 <stm_set_bytes+0x5e8>
    bb5f:	48 85 d2             	test   %rdx,%rdx
    bb62:	0f 84 14 03 00 00    	je     be7c <stm_set_bytes+0x8ec>
    bb68:	48 8b 48 08          	mov    0x8(%rax),%rcx
    bb6c:	4d 89 e6             	mov    %r12,%r14
    bb6f:	49 31 ce             	xor    %rcx,%r14
    bb72:	4d 21 ee             	and    %r13,%r14
    bb75:	49 31 ce             	xor    %rcx,%r14
    bb78:	4c 09 ea             	or     %r13,%rdx
    bb7b:	4c 89 70 08          	mov    %r14,0x8(%rax)
    bb7f:	48 89 50 10          	mov    %rdx,0x10(%rax)
    bb83:	e9 84 fc ff ff       	jmpq   b80c <stm_set_bytes+0x27c>
    bb88:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    bb8f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    bb93:	48 39 d0             	cmp    %rdx,%rax
    bb96:	0f 82 5c 02 00 00    	jb     bdf8 <stm_set_bytes+0x868>
    bb9c:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    bba2:	48 89 ce             	mov    %rcx,%rsi
    bba5:	48 c1 e1 06          	shl    $0x6,%rcx
    bba9:	48 01 d1             	add    %rdx,%rcx
    bbac:	48 39 c8             	cmp    %rcx,%rax
    bbaf:	0f 83 43 02 00 00    	jae    bdf8 <stm_set_bytes+0x868>
    bbb5:	4d 85 ff             	test   %r15,%r15
    bbb8:	0f 84 61 fd ff ff    	je     b91f <stm_set_bytes+0x38f>
    bbbe:	eb 10                	jmp    bbd0 <stm_set_bytes+0x640>
    bbc0:	48 8b 48 28          	mov    0x28(%rax),%rcx
    bbc4:	48 85 c9             	test   %rcx,%rcx
    bbc7:	0f 84 63 02 00 00    	je     be30 <stm_set_bytes+0x8a0>
    bbcd:	48 89 c8             	mov    %rcx,%rax
    bbd0:	4c 3b 28             	cmp    (%rax),%r13
    bbd3:	75 eb                	jne    bbc0 <stm_set_bytes+0x630>
    bbd5:	49 83 ff ff          	cmp    $0xffffffffffffffff,%r15
    bbd9:	48 8b 50 10          	mov    0x10(%rax),%rdx
    bbdd:	74 19                	je     bbf8 <stm_set_bytes+0x668>
    bbdf:	48 85 d2             	test   %rdx,%rdx
    bbe2:	0f 85 8b 02 00 00    	jne    be73 <stm_set_bytes+0x8e3>
    bbe8:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    bbec:	4d 89 e2             	mov    %r12,%r10
    bbef:	49 31 ca             	xor    %rcx,%r10
    bbf2:	4d 21 fa             	and    %r15,%r10
    bbf5:	49 31 ca             	xor    %rcx,%r10
    bbf8:	4c 09 fa             	or     %r15,%rdx
    bbfb:	4c 89 50 08          	mov    %r10,0x8(%rax)
    bbff:	48 89 50 10          	mov    %rdx,0x10(%rax)
    bc03:	e9 17 fd ff ff       	jmpq   b91f <stm_set_bytes+0x38f>
    bc08:	be 40 0c 00 00       	mov    $0xc40,%esi
    bc0d:	48 89 df             	mov    %rbx,%rdi
    bc10:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    bc15:	48 89 04 24          	mov    %rax,(%rsp)
    bc19:	e8 b2 ac ff ff       	callq  68d0 <stm_rollback>
    bc1e:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    bc24:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    bc29:	48 8b 04 24          	mov    (%rsp),%rax
    bc2d:	e9 6d fb ff ff       	jmpq   b79f <stm_set_bytes+0x20f>
    bc32:	be 40 0c 00 00       	mov    $0xc40,%esi
    bc37:	48 89 df             	mov    %rbx,%rdi
    bc3a:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
    bc3f:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    bc44:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    bc49:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    bc4e:	4c 89 14 24          	mov    %r10,(%rsp)
    bc52:	e8 79 ac ff ff       	callq  68d0 <stm_rollback>
    bc57:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    bc5d:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    bc62:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    bc67:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    bc6c:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    bc71:	4c 8b 14 24          	mov    (%rsp),%r10
    bc75:	e9 34 fc ff ff       	jmpq   b8ae <stm_set_bytes+0x31e>
    bc7a:	be 40 0c 00 00       	mov    $0xc40,%esi
    bc7f:	48 89 df             	mov    %rbx,%rdi
    bc82:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    bc87:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
    bc8c:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    bc91:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
    bc96:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    bc9b:	48 89 04 24          	mov    %rax,(%rsp)
    bc9f:	e8 2c ac ff ff       	callq  68d0 <stm_rollback>
    bca4:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    bcaa:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    bcaf:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    bcb4:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    bcb9:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
    bcbe:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    bcc3:	48 8b 04 24          	mov    (%rsp),%rax
    bcc7:	48 c1 e1 06          	shl    $0x6,%rcx
    bccb:	48 03 8b f8 00 00 00 	add    0xf8(%rbx),%rcx
    bcd2:	e9 b9 fd ff ff       	jmpq   ba90 <stm_set_bytes+0x500>
    bcd7:	8b 8b f0 00 00 00    	mov    0xf0(%rbx),%ecx
    bcdd:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    bce4:	85 c9                	test   %ecx,%ecx
    bce6:	0f 8e a1 fa ff ff    	jle    b78d <stm_set_bytes+0x1fd>
    bcec:	48 3b 6a 08          	cmp    0x8(%rdx),%rbp
    bcf0:	74 21                	je     bd13 <stm_set_bytes+0x783>
    bcf2:	83 e9 01             	sub    $0x1,%ecx
    bcf5:	48 83 c2 18          	add    $0x18,%rdx
    bcf9:	48 c1 e1 04          	shl    $0x4,%rcx
    bcfd:	48 01 d1             	add    %rdx,%rcx
    bd00:	48 39 d1             	cmp    %rdx,%rcx
    bd03:	0f 84 84 fa ff ff    	je     b78d <stm_set_bytes+0x1fd>
    bd09:	48 83 c2 10          	add    $0x10,%rdx
    bd0d:	48 3b 6a f0          	cmp    -0x10(%rdx),%rbp
    bd11:	75 ed                	jne    bd00 <stm_set_bytes+0x770>
    bd13:	be 40 06 00 00       	mov    $0x640,%esi
    bd18:	48 83 c4 48          	add    $0x48,%rsp
    bd1c:	48 89 df             	mov    %rbx,%rdi
    bd1f:	5b                   	pop    %rbx
    bd20:	5d                   	pop    %rbp
    bd21:	41 5c                	pop    %r12
    bd23:	41 5d                	pop    %r13
    bd25:	41 5e                	pop    %r14
    bd27:	41 5f                	pop    %r15
    bd29:	e9 a2 ab ff ff       	jmpq   68d0 <stm_rollback>
    bd2e:	8b b3 f0 00 00 00    	mov    0xf0(%rbx),%esi
    bd34:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    bd3b:	85 f6                	test   %esi,%esi
    bd3d:	0f 8e 59 fb ff ff    	jle    b89c <stm_set_bytes+0x30c>
    bd43:	48 3b 6a 08          	cmp    0x8(%rdx),%rbp
    bd47:	74 2a                	je     bd73 <stm_set_bytes+0x7e3>
    bd49:	83 ee 01             	sub    $0x1,%esi
    bd4c:	48 83 c2 18          	add    $0x18,%rdx
    bd50:	48 c1 e6 04          	shl    $0x4,%rsi
    bd54:	48 01 d6             	add    %rdx,%rsi
    bd57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bd5e:	00 00 
    bd60:	48 39 d6             	cmp    %rdx,%rsi
    bd63:	0f 84 33 fb ff ff    	je     b89c <stm_set_bytes+0x30c>
    bd69:	48 83 c2 10          	add    $0x10,%rdx
    bd6d:	48 3b 6a f0          	cmp    -0x10(%rdx),%rbp
    bd71:	75 ed                	jne    bd60 <stm_set_bytes+0x7d0>
    bd73:	be 40 06 00 00       	mov    $0x640,%esi
    bd78:	48 89 df             	mov    %rbx,%rdi
    bd7b:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    bd80:	4c 89 04 24          	mov    %r8,(%rsp)
    bd84:	e8 47 ab ff ff       	callq  68d0 <stm_rollback>
    bd89:	4c 8b 04 24          	mov    (%rsp),%r8
    bd8d:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    bd92:	e9 88 fb ff ff       	jmpq   b91f <stm_set_bytes+0x38f>
    bd97:	3b b3 04 01 00 00    	cmp    0x104(%rbx),%esi
    bd9d:	4c 8b 78 18          	mov    0x18(%rax),%r15
    bda1:	0f 84 dd 00 00 00    	je     be84 <stm_set_bytes+0x8f4>
    bda7:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
    bdad:	48 c1 e1 06          	shl    $0x6,%rcx
    bdb1:	48 01 ca             	add    %rcx,%rdx
    bdb4:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
    bdb8:	4c 89 02             	mov    %r8,(%rdx)
    bdbb:	4c 89 6a 10          	mov    %r13,0x10(%rdx)
    bdbf:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    bdc3:	0f 85 10 fa ff ff    	jne    b7d9 <stm_set_bytes+0x249>
    bdc9:	4c 89 62 08          	mov    %r12,0x8(%rdx)
    bdcd:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    bdd1:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    bdd8:	00 
    bdd9:	e9 1c fa ff ff       	jmpq   b7fa <stm_set_bytes+0x26a>
    bdde:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    bde5:	0f 85 79 f9 ff ff    	jne    b764 <stm_set_bytes+0x1d4>
    bdeb:	be 40 04 00 00       	mov    $0x440,%esi
    bdf0:	e9 23 ff ff ff       	jmpq   bd18 <stm_set_bytes+0x788>
    bdf5:	0f 1f 00             	nopl   (%rax)
    bdf8:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    bdff:	0f 85 6e fa ff ff    	jne    b873 <stm_set_bytes+0x2e3>
    be05:	be 40 04 00 00       	mov    $0x440,%esi
    be0a:	48 89 df             	mov    %rbx,%rdi
    be0d:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    be12:	4c 89 04 24          	mov    %r8,(%rsp)
    be16:	e8 b5 aa ff ff       	callq  68d0 <stm_rollback>
    be1b:	4c 8b 04 24          	mov    (%rsp),%r8
    be1f:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    be24:	e9 f6 fa ff ff       	jmpq   b91f <stm_set_bytes+0x38f>
    be29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    be30:	3b b3 04 01 00 00    	cmp    0x104(%rbx),%esi
    be36:	48 8b 48 18          	mov    0x18(%rax),%rcx
    be3a:	74 73                	je     beaf <stm_set_bytes+0x91f>
    be3c:	8b b3 00 01 00 00    	mov    0x100(%rbx),%esi
    be42:	48 c1 e6 06          	shl    $0x6,%rsi
    be46:	48 01 f2             	add    %rsi,%rdx
    be49:	49 83 ff ff          	cmp    $0xffffffffffffffff,%r15
    be4d:	4c 89 2a             	mov    %r13,(%rdx)
    be50:	4c 89 7a 10          	mov    %r15,0x10(%rdx)
    be54:	48 89 6a 20          	mov    %rbp,0x20(%rdx)
    be58:	0f 85 8a fa ff ff    	jne    b8e8 <stm_set_bytes+0x358>
    be5e:	4c 89 62 08          	mov    %r12,0x8(%rdx)
    be62:	48 89 4a 18          	mov    %rcx,0x18(%rdx)
    be66:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    be6d:	00 
    be6e:	e9 9a fa ff ff       	jmpq   b90d <stm_set_bytes+0x37d>
    be73:	48 8b 48 08          	mov    0x8(%rax),%rcx
    be77:	e9 70 fd ff ff       	jmpq   bbec <stm_set_bytes+0x65c>
    be7c:	49 8b 08             	mov    (%r8),%rcx
    be7f:	e9 e8 fc ff ff       	jmpq   bb6c <stm_set_bytes+0x5dc>
    be84:	be 40 0c 00 00       	mov    $0xc40,%esi
    be89:	48 89 df             	mov    %rbx,%rdi
    be8c:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    be91:	48 89 04 24          	mov    %rax,(%rsp)
    be95:	e8 36 aa ff ff       	callq  68d0 <stm_rollback>
    be9a:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    bea1:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    bea6:	48 8b 04 24          	mov    (%rsp),%rax
    beaa:	e9 f8 fe ff ff       	jmpq   bda7 <stm_set_bytes+0x817>
    beaf:	be 40 0c 00 00       	mov    $0xc40,%esi
    beb4:	48 89 df             	mov    %rbx,%rdi
    beb7:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    bebc:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    bec1:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    bec6:	48 89 04 24          	mov    %rax,(%rsp)
    beca:	e8 01 aa ff ff       	callq  68d0 <stm_rollback>
    becf:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    bed6:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    bedb:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    bee0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    bee5:	48 8b 04 24          	mov    (%rsp),%rax
    bee9:	e9 4e ff ff ff       	jmpq   be3c <stm_set_bytes+0x8ac>
    beee:	66 90                	xchg   %ax,%ax

000000000000bef0 <mod_cb_on_abort>:
    bef0:	8b 3d 4a 41 20 00    	mov    0x20414a(%rip),%edi        # 210040 <mod_cb>
    bef6:	53                   	push   %rbx
    bef7:	e8 44 88 ff ff       	callq  4740 <stm_get_specific>
    befc:	0f b7 50 12          	movzwl 0x12(%rax),%edx
    bf00:	48 89 c3             	mov    %rax,%rbx
    bf03:	66 85 d2             	test   %dx,%dx
    bf06:	74 29                	je     bf31 <mod_cb_on_abort+0x41>
    bf08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    bf0f:	00 
    bf10:	83 ea 01             	sub    $0x1,%edx
    bf13:	66 89 53 12          	mov    %dx,0x12(%rbx)
    bf17:	0f b7 d2             	movzwl %dx,%edx
    bf1a:	48 c1 e2 04          	shl    $0x4,%rdx
    bf1e:	48 03 53 18          	add    0x18(%rbx),%rdx
    bf22:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
    bf26:	ff 12                	callq  *(%rdx)
    bf28:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
    bf2c:	66 85 d2             	test   %dx,%dx
    bf2f:	75 df                	jne    bf10 <mod_cb_on_abort+0x20>
    bf31:	31 c0                	xor    %eax,%eax
    bf33:	66 89 43 02          	mov    %ax,0x2(%rbx)
    bf37:	5b                   	pop    %rbx
    bf38:	c3                   	retq   
    bf39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000bf40 <mod_cb_on_commit>:
    bf40:	8b 3d fa 40 20 00    	mov    0x2040fa(%rip),%edi        # 210040 <mod_cb>
    bf46:	53                   	push   %rbx
    bf47:	e8 f4 87 ff ff       	callq  4740 <stm_get_specific>
    bf4c:	0f b7 50 02          	movzwl 0x2(%rax),%edx
    bf50:	48 89 c3             	mov    %rax,%rbx
    bf53:	66 85 d2             	test   %dx,%dx
    bf56:	74 29                	je     bf81 <mod_cb_on_commit+0x41>
    bf58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    bf5f:	00 
    bf60:	83 ea 01             	sub    $0x1,%edx
    bf63:	66 89 53 02          	mov    %dx,0x2(%rbx)
    bf67:	0f b7 d2             	movzwl %dx,%edx
    bf6a:	48 c1 e2 04          	shl    $0x4,%rdx
    bf6e:	48 03 53 08          	add    0x8(%rbx),%rdx
    bf72:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
    bf76:	ff 12                	callq  *(%rdx)
    bf78:	0f b7 53 02          	movzwl 0x2(%rbx),%edx
    bf7c:	66 85 d2             	test   %dx,%dx
    bf7f:	75 df                	jne    bf60 <mod_cb_on_commit+0x20>
    bf81:	31 c0                	xor    %eax,%eax
    bf83:	66 89 43 12          	mov    %ax,0x12(%rbx)
    bf87:	5b                   	pop    %rbx
    bf88:	c3                   	retq   
    bf89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000bf90 <mod_cb_on_thread_exit>:
    bf90:	8b 3d aa 40 20 00    	mov    0x2040aa(%rip),%edi        # 210040 <mod_cb>
    bf96:	53                   	push   %rbx
    bf97:	e8 a4 87 ff ff       	callq  4740 <stm_get_specific>
    bf9c:	48 8b 78 18          	mov    0x18(%rax),%rdi
    bfa0:	48 89 c3             	mov    %rax,%rbx
    bfa3:	e8 08 55 ff ff       	callq  14b0 <free@plt>
    bfa8:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    bfac:	e8 ff 54 ff ff       	callq  14b0 <free@plt>
    bfb1:	48 89 df             	mov    %rbx,%rdi
    bfb4:	5b                   	pop    %rbx
    bfb5:	e9 f6 54 ff ff       	jmpq   14b0 <free@plt>
    bfba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000bfc0 <mod_cb_on_thread_init>:
    bfc0:	53                   	push   %rbx
    bfc1:	bf 20 00 00 00       	mov    $0x20,%edi
    bfc6:	e8 a5 53 ff ff       	callq  1370 <malloc@plt>
    bfcb:	48 85 c0             	test   %rax,%rax
    bfce:	74 48                	je     c018 <mod_cb_on_thread_init+0x58>
    bfd0:	c7 40 10 10 00 00 00 	movl   $0x10,0x10(%rax)
    bfd7:	c7 00 10 00 00 00    	movl   $0x10,(%rax)
    bfdd:	bf 00 01 00 00       	mov    $0x100,%edi
    bfe2:	48 89 c3             	mov    %rax,%rbx
    bfe5:	e8 86 53 ff ff       	callq  1370 <malloc@plt>
    bfea:	48 85 c0             	test   %rax,%rax
    bfed:	74 29                	je     c018 <mod_cb_on_thread_init+0x58>
    bfef:	48 89 43 08          	mov    %rax,0x8(%rbx)
    bff3:	bf 00 01 00 00       	mov    $0x100,%edi
    bff8:	e8 73 53 ff ff       	callq  1370 <malloc@plt>
    bffd:	48 85 c0             	test   %rax,%rax
    c000:	74 16                	je     c018 <mod_cb_on_thread_init+0x58>
    c002:	48 89 43 18          	mov    %rax,0x18(%rbx)
    c006:	48 89 de             	mov    %rbx,%rsi
    c009:	8b 3d 31 40 20 00    	mov    0x204031(%rip),%edi        # 210040 <mod_cb>
    c00f:	5b                   	pop    %rbx
    c010:	e9 fb 86 ff ff       	jmpq   4710 <stm_set_specific>
    c015:	0f 1f 00             	nopl   (%rax)
    c018:	48 8d 3d 82 17 00 00 	lea    0x1782(%rip),%rdi        # d7a1 <__PRETTY_FUNCTION__.3065+0x389>
    c01f:	e8 cc 53 ff ff       	callq  13f0 <perror@plt>
    c024:	bf 01 00 00 00       	mov    $0x1,%edi
    c029:	e8 02 54 ff ff       	callq  1430 <exit@plt>
    c02e:	66 90                	xchg   %ax,%ax

000000000000c030 <stm_on_abort>:
    c030:	41 54                	push   %r12
    c032:	49 89 fc             	mov    %rdi,%r12
    c035:	8b 3d 05 40 20 00    	mov    0x204005(%rip),%edi        # 210040 <mod_cb>
    c03b:	55                   	push   %rbp
    c03c:	53                   	push   %rbx
    c03d:	48 89 f5             	mov    %rsi,%rbp
    c040:	e8 fb 86 ff ff       	callq  4740 <stm_get_specific>
    c045:	0f b7 50 12          	movzwl 0x12(%rax),%edx
    c049:	48 89 c3             	mov    %rax,%rbx
    c04c:	0f b7 40 10          	movzwl 0x10(%rax),%eax
    c050:	66 39 c2             	cmp    %ax,%dx
    c053:	73 2b                	jae    c080 <stm_on_abort+0x50>
    c055:	48 8b 43 18          	mov    0x18(%rbx),%rax
    c059:	48 c1 e2 04          	shl    $0x4,%rdx
    c05d:	4c 89 24 10          	mov    %r12,(%rax,%rdx,1)
    c061:	0f b7 43 12          	movzwl 0x12(%rbx),%eax
    c065:	48 c1 e0 04          	shl    $0x4,%rax
    c069:	48 03 43 18          	add    0x18(%rbx),%rax
    c06d:	48 89 68 08          	mov    %rbp,0x8(%rax)
    c071:	66 83 43 12 01       	addw   $0x1,0x12(%rbx)
    c076:	b8 01 00 00 00       	mov    $0x1,%eax
    c07b:	5b                   	pop    %rbx
    c07c:	5d                   	pop    %rbp
    c07d:	41 5c                	pop    %r12
    c07f:	c3                   	retq   
    c080:	01 c0                	add    %eax,%eax
    c082:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    c086:	66 89 43 10          	mov    %ax,0x10(%rbx)
    c08a:	0f b7 c0             	movzwl %ax,%eax
    c08d:	48 c1 e0 04          	shl    $0x4,%rax
    c091:	48 89 c6             	mov    %rax,%rsi
    c094:	e8 e7 52 ff ff       	callq  1380 <realloc@plt>
    c099:	48 85 c0             	test   %rax,%rax
    c09c:	74 0a                	je     c0a8 <stm_on_abort+0x78>
    c09e:	48 89 43 18          	mov    %rax,0x18(%rbx)
    c0a2:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
    c0a6:	eb b1                	jmp    c059 <stm_on_abort+0x29>
    c0a8:	48 8d 3d 91 13 00 00 	lea    0x1391(%rip),%rdi        # d440 <__PRETTY_FUNCTION__.3065+0x28>
    c0af:	e8 3c 53 ff ff       	callq  13f0 <perror@plt>
    c0b4:	bf 01 00 00 00       	mov    $0x1,%edi
    c0b9:	e8 72 53 ff ff       	callq  1430 <exit@plt>
    c0be:	66 90                	xchg   %ax,%ax

000000000000c0c0 <stm_on_commit>:
    c0c0:	41 54                	push   %r12
    c0c2:	49 89 fc             	mov    %rdi,%r12
    c0c5:	8b 3d 75 3f 20 00    	mov    0x203f75(%rip),%edi        # 210040 <mod_cb>
    c0cb:	55                   	push   %rbp
    c0cc:	53                   	push   %rbx
    c0cd:	48 89 f5             	mov    %rsi,%rbp
    c0d0:	e8 6b 86 ff ff       	callq  4740 <stm_get_specific>
    c0d5:	0f b7 50 02          	movzwl 0x2(%rax),%edx
    c0d9:	48 89 c3             	mov    %rax,%rbx
    c0dc:	0f b7 00             	movzwl (%rax),%eax
    c0df:	66 39 c2             	cmp    %ax,%dx
    c0e2:	73 2c                	jae    c110 <stm_on_commit+0x50>
    c0e4:	48 8b 43 08          	mov    0x8(%rbx),%rax
    c0e8:	48 c1 e2 04          	shl    $0x4,%rdx
    c0ec:	4c 89 24 10          	mov    %r12,(%rax,%rdx,1)
    c0f0:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    c0f4:	48 c1 e0 04          	shl    $0x4,%rax
    c0f8:	48 03 43 08          	add    0x8(%rbx),%rax
    c0fc:	48 89 68 08          	mov    %rbp,0x8(%rax)
    c100:	66 83 43 02 01       	addw   $0x1,0x2(%rbx)
    c105:	b8 01 00 00 00       	mov    $0x1,%eax
    c10a:	5b                   	pop    %rbx
    c10b:	5d                   	pop    %rbp
    c10c:	41 5c                	pop    %r12
    c10e:	c3                   	retq   
    c10f:	90                   	nop
    c110:	01 c0                	add    %eax,%eax
    c112:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    c116:	66 89 03             	mov    %ax,(%rbx)
    c119:	0f b7 c0             	movzwl %ax,%eax
    c11c:	48 c1 e0 04          	shl    $0x4,%rax
    c120:	48 89 c6             	mov    %rax,%rsi
    c123:	e8 58 52 ff ff       	callq  1380 <realloc@plt>
    c128:	48 85 c0             	test   %rax,%rax
    c12b:	74 0a                	je     c137 <stm_on_commit+0x77>
    c12d:	48 89 43 08          	mov    %rax,0x8(%rbx)
    c131:	0f b7 53 02          	movzwl 0x2(%rbx),%edx
    c135:	eb b1                	jmp    c0e8 <stm_on_commit+0x28>
    c137:	48 8d 3d 02 13 00 00 	lea    0x1302(%rip),%rdi        # d440 <__PRETTY_FUNCTION__.3065+0x28>
    c13e:	e8 ad 52 ff ff       	callq  13f0 <perror@plt>
    c143:	bf 01 00 00 00       	mov    $0x1,%edi
    c148:	e8 e3 52 ff ff       	callq  1430 <exit@plt>
    c14d:	0f 1f 00             	nopl   (%rax)

000000000000c150 <stm_malloc>:
    c150:	55                   	push   %rbp
    c151:	53                   	push   %rbx
    c152:	48 89 fd             	mov    %rdi,%rbp
    c155:	48 83 ec 08          	sub    $0x8,%rsp
    c159:	e8 12 89 ff ff       	callq  4a70 <stm_current_tx>
    c15e:	8b 3d dc 3e 20 00    	mov    0x203edc(%rip),%edi        # 210040 <mod_cb>
    c164:	e8 d7 85 ff ff       	callq  4740 <stm_get_specific>
    c169:	48 8d 7d 07          	lea    0x7(%rbp),%rdi
    c16d:	48 89 c3             	mov    %rax,%rbx
    c170:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c174:	e8 f7 51 ff ff       	callq  1370 <malloc@plt>
    c179:	48 85 c0             	test   %rax,%rax
    c17c:	74 42                	je     c1c0 <stm_malloc+0x70>
    c17e:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
    c182:	0f b7 4b 10          	movzwl 0x10(%rbx),%ecx
    c186:	48 89 c5             	mov    %rax,%rbp
    c189:	48 8b 43 18          	mov    0x18(%rbx),%rax
    c18d:	66 39 ca             	cmp    %cx,%dx
    c190:	73 4e                	jae    c1e0 <stm_malloc+0x90>
    c192:	48 8b 0d 37 3e 20 00 	mov    0x203e37(%rip),%rcx        # 20ffd0 <free@GLIBC_2.2.5>
    c199:	48 c1 e2 04          	shl    $0x4,%rdx
    c19d:	48 89 0c 10          	mov    %rcx,(%rax,%rdx,1)
    c1a1:	0f b7 43 12          	movzwl 0x12(%rbx),%eax
    c1a5:	48 c1 e0 04          	shl    $0x4,%rax
    c1a9:	48 03 43 18          	add    0x18(%rbx),%rax
    c1ad:	48 89 68 08          	mov    %rbp,0x8(%rax)
    c1b1:	66 83 43 12 01       	addw   $0x1,0x12(%rbx)
    c1b6:	48 83 c4 08          	add    $0x8,%rsp
    c1ba:	48 89 e8             	mov    %rbp,%rax
    c1bd:	5b                   	pop    %rbx
    c1be:	5d                   	pop    %rbp
    c1bf:	c3                   	retq   
    c1c0:	48 8d 3d da 15 00 00 	lea    0x15da(%rip),%rdi        # d7a1 <__PRETTY_FUNCTION__.3065+0x389>
    c1c7:	e8 24 52 ff ff       	callq  13f0 <perror@plt>
    c1cc:	bf 01 00 00 00       	mov    $0x1,%edi
    c1d1:	e8 5a 52 ff ff       	callq  1430 <exit@plt>
    c1d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c1dd:	00 00 00 
    c1e0:	01 c9                	add    %ecx,%ecx
    c1e2:	48 89 c7             	mov    %rax,%rdi
    c1e5:	66 89 4b 10          	mov    %cx,0x10(%rbx)
    c1e9:	0f b7 c9             	movzwl %cx,%ecx
    c1ec:	48 89 ce             	mov    %rcx,%rsi
    c1ef:	48 c1 e6 04          	shl    $0x4,%rsi
    c1f3:	e8 88 51 ff ff       	callq  1380 <realloc@plt>
    c1f8:	48 85 c0             	test   %rax,%rax
    c1fb:	74 0a                	je     c207 <stm_malloc+0xb7>
    c1fd:	48 89 43 18          	mov    %rax,0x18(%rbx)
    c201:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
    c205:	eb 8b                	jmp    c192 <stm_malloc+0x42>
    c207:	48 8d 3d 32 12 00 00 	lea    0x1232(%rip),%rdi        # d440 <__PRETTY_FUNCTION__.3065+0x28>
    c20e:	e8 dd 51 ff ff       	callq  13f0 <perror@plt>
    c213:	bf 01 00 00 00       	mov    $0x1,%edi
    c218:	e8 13 52 ff ff       	callq  1430 <exit@plt>
    c21d:	0f 1f 00             	nopl   (%rax)

000000000000c220 <stm_malloc_tx>:
    c220:	55                   	push   %rbp
    c221:	53                   	push   %rbx
    c222:	48 89 f5             	mov    %rsi,%rbp
    c225:	48 83 ec 08          	sub    $0x8,%rsp
    c229:	8b 3d 11 3e 20 00    	mov    0x203e11(%rip),%edi        # 210040 <mod_cb>
    c22f:	e8 0c 85 ff ff       	callq  4740 <stm_get_specific>
    c234:	48 8d 7d 07          	lea    0x7(%rbp),%rdi
    c238:	48 89 c3             	mov    %rax,%rbx
    c23b:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c23f:	e8 2c 51 ff ff       	callq  1370 <malloc@plt>
    c244:	48 85 c0             	test   %rax,%rax
    c247:	74 47                	je     c290 <stm_malloc_tx+0x70>
    c249:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
    c24d:	0f b7 4b 10          	movzwl 0x10(%rbx),%ecx
    c251:	48 89 c5             	mov    %rax,%rbp
    c254:	48 8b 43 18          	mov    0x18(%rbx),%rax
    c258:	66 39 ca             	cmp    %cx,%dx
    c25b:	73 53                	jae    c2b0 <stm_malloc_tx+0x90>
    c25d:	48 8b 0d 6c 3d 20 00 	mov    0x203d6c(%rip),%rcx        # 20ffd0 <free@GLIBC_2.2.5>
    c264:	48 c1 e2 04          	shl    $0x4,%rdx
    c268:	48 89 0c 10          	mov    %rcx,(%rax,%rdx,1)
    c26c:	0f b7 43 12          	movzwl 0x12(%rbx),%eax
    c270:	48 c1 e0 04          	shl    $0x4,%rax
    c274:	48 03 43 18          	add    0x18(%rbx),%rax
    c278:	48 89 68 08          	mov    %rbp,0x8(%rax)
    c27c:	66 83 43 12 01       	addw   $0x1,0x12(%rbx)
    c281:	48 83 c4 08          	add    $0x8,%rsp
    c285:	48 89 e8             	mov    %rbp,%rax
    c288:	5b                   	pop    %rbx
    c289:	5d                   	pop    %rbp
    c28a:	c3                   	retq   
    c28b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c290:	48 8d 3d 0a 15 00 00 	lea    0x150a(%rip),%rdi        # d7a1 <__PRETTY_FUNCTION__.3065+0x389>
    c297:	e8 54 51 ff ff       	callq  13f0 <perror@plt>
    c29c:	bf 01 00 00 00       	mov    $0x1,%edi
    c2a1:	e8 8a 51 ff ff       	callq  1430 <exit@plt>
    c2a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c2ad:	00 00 00 
    c2b0:	01 c9                	add    %ecx,%ecx
    c2b2:	48 89 c7             	mov    %rax,%rdi
    c2b5:	66 89 4b 10          	mov    %cx,0x10(%rbx)
    c2b9:	0f b7 c9             	movzwl %cx,%ecx
    c2bc:	48 89 ce             	mov    %rcx,%rsi
    c2bf:	48 c1 e6 04          	shl    $0x4,%rsi
    c2c3:	e8 b8 50 ff ff       	callq  1380 <realloc@plt>
    c2c8:	48 85 c0             	test   %rax,%rax
    c2cb:	74 0a                	je     c2d7 <stm_malloc_tx+0xb7>
    c2cd:	48 89 43 18          	mov    %rax,0x18(%rbx)
    c2d1:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
    c2d5:	eb 86                	jmp    c25d <stm_malloc_tx+0x3d>
    c2d7:	48 8d 3d 62 11 00 00 	lea    0x1162(%rip),%rdi        # d440 <__PRETTY_FUNCTION__.3065+0x28>
    c2de:	e8 0d 51 ff ff       	callq  13f0 <perror@plt>
    c2e3:	bf 01 00 00 00       	mov    $0x1,%edi
    c2e8:	e8 43 51 ff ff       	callq  1430 <exit@plt>
    c2ed:	0f 1f 00             	nopl   (%rax)

000000000000c2f0 <stm_calloc>:
    c2f0:	41 54                	push   %r12
    c2f2:	55                   	push   %rbp
    c2f3:	49 89 fc             	mov    %rdi,%r12
    c2f6:	53                   	push   %rbx
    c2f7:	48 89 f5             	mov    %rsi,%rbp
    c2fa:	e8 71 87 ff ff       	callq  4a70 <stm_current_tx>
    c2ff:	8b 3d 3b 3d 20 00    	mov    0x203d3b(%rip),%edi        # 210040 <mod_cb>
    c305:	e8 36 84 ff ff       	callq  4740 <stm_get_specific>
    c30a:	48 8d 75 07          	lea    0x7(%rbp),%rsi
    c30e:	4c 89 e7             	mov    %r12,%rdi
    c311:	48 89 c3             	mov    %rax,%rbx
    c314:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    c318:	e8 e3 4f ff ff       	callq  1300 <calloc@plt>
    c31d:	48 85 c0             	test   %rax,%rax
    c320:	74 46                	je     c368 <stm_calloc+0x78>
    c322:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
    c326:	0f b7 4b 10          	movzwl 0x10(%rbx),%ecx
    c32a:	48 89 c5             	mov    %rax,%rbp
    c32d:	48 8b 43 18          	mov    0x18(%rbx),%rax
    c331:	66 39 ca             	cmp    %cx,%dx
    c334:	73 4a                	jae    c380 <stm_calloc+0x90>
    c336:	48 8b 0d 93 3c 20 00 	mov    0x203c93(%rip),%rcx        # 20ffd0 <free@GLIBC_2.2.5>
    c33d:	48 c1 e2 04          	shl    $0x4,%rdx
    c341:	48 89 0c 10          	mov    %rcx,(%rax,%rdx,1)
    c345:	0f b7 43 12          	movzwl 0x12(%rbx),%eax
    c349:	48 c1 e0 04          	shl    $0x4,%rax
    c34d:	48 03 43 18          	add    0x18(%rbx),%rax
    c351:	48 89 68 08          	mov    %rbp,0x8(%rax)
    c355:	66 83 43 12 01       	addw   $0x1,0x12(%rbx)
    c35a:	48 89 e8             	mov    %rbp,%rax
    c35d:	5b                   	pop    %rbx
    c35e:	5d                   	pop    %rbp
    c35f:	41 5c                	pop    %r12
    c361:	c3                   	retq   
    c362:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c368:	48 8d 3d 39 14 00 00 	lea    0x1439(%rip),%rdi        # d7a8 <__PRETTY_FUNCTION__.3065+0x390>
    c36f:	e8 7c 50 ff ff       	callq  13f0 <perror@plt>
    c374:	bf 01 00 00 00       	mov    $0x1,%edi
    c379:	e8 b2 50 ff ff       	callq  1430 <exit@plt>
    c37e:	66 90                	xchg   %ax,%ax
    c380:	01 c9                	add    %ecx,%ecx
    c382:	48 89 c7             	mov    %rax,%rdi
    c385:	66 89 4b 10          	mov    %cx,0x10(%rbx)
    c389:	0f b7 c9             	movzwl %cx,%ecx
    c38c:	48 c1 e1 04          	shl    $0x4,%rcx
    c390:	48 89 ce             	mov    %rcx,%rsi
    c393:	e8 e8 4f ff ff       	callq  1380 <realloc@plt>
    c398:	48 85 c0             	test   %rax,%rax
    c39b:	74 0a                	je     c3a7 <stm_calloc+0xb7>
    c39d:	48 89 43 18          	mov    %rax,0x18(%rbx)
    c3a1:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
    c3a5:	eb 8f                	jmp    c336 <stm_calloc+0x46>
    c3a7:	48 8d 3d 92 10 00 00 	lea    0x1092(%rip),%rdi        # d440 <__PRETTY_FUNCTION__.3065+0x28>
    c3ae:	e8 3d 50 ff ff       	callq  13f0 <perror@plt>
    c3b3:	bf 01 00 00 00       	mov    $0x1,%edi
    c3b8:	e8 73 50 ff ff       	callq  1430 <exit@plt>
    c3bd:	0f 1f 00             	nopl   (%rax)

000000000000c3c0 <stm_calloc_tx>:
    c3c0:	8b 3d 7a 3c 20 00    	mov    0x203c7a(%rip),%edi        # 210040 <mod_cb>
    c3c6:	41 54                	push   %r12
    c3c8:	49 89 f4             	mov    %rsi,%r12
    c3cb:	55                   	push   %rbp
    c3cc:	53                   	push   %rbx
    c3cd:	48 89 d5             	mov    %rdx,%rbp
    c3d0:	e8 6b 83 ff ff       	callq  4740 <stm_get_specific>
    c3d5:	48 8d 75 07          	lea    0x7(%rbp),%rsi
    c3d9:	4c 89 e7             	mov    %r12,%rdi
    c3dc:	48 89 c3             	mov    %rax,%rbx
    c3df:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    c3e3:	e8 18 4f ff ff       	callq  1300 <calloc@plt>
    c3e8:	48 85 c0             	test   %rax,%rax
    c3eb:	74 43                	je     c430 <stm_calloc_tx+0x70>
    c3ed:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
    c3f1:	0f b7 4b 10          	movzwl 0x10(%rbx),%ecx
    c3f5:	48 89 c5             	mov    %rax,%rbp
    c3f8:	48 8b 43 18          	mov    0x18(%rbx),%rax
    c3fc:	66 39 ca             	cmp    %cx,%dx
    c3ff:	73 4f                	jae    c450 <stm_calloc_tx+0x90>
    c401:	48 8b 0d c8 3b 20 00 	mov    0x203bc8(%rip),%rcx        # 20ffd0 <free@GLIBC_2.2.5>
    c408:	48 c1 e2 04          	shl    $0x4,%rdx
    c40c:	48 89 0c 10          	mov    %rcx,(%rax,%rdx,1)
    c410:	0f b7 43 12          	movzwl 0x12(%rbx),%eax
    c414:	48 c1 e0 04          	shl    $0x4,%rax
    c418:	48 03 43 18          	add    0x18(%rbx),%rax
    c41c:	48 89 68 08          	mov    %rbp,0x8(%rax)
    c420:	66 83 43 12 01       	addw   $0x1,0x12(%rbx)
    c425:	48 89 e8             	mov    %rbp,%rax
    c428:	5b                   	pop    %rbx
    c429:	5d                   	pop    %rbp
    c42a:	41 5c                	pop    %r12
    c42c:	c3                   	retq   
    c42d:	0f 1f 00             	nopl   (%rax)
    c430:	48 8d 3d 71 13 00 00 	lea    0x1371(%rip),%rdi        # d7a8 <__PRETTY_FUNCTION__.3065+0x390>
    c437:	e8 b4 4f ff ff       	callq  13f0 <perror@plt>
    c43c:	bf 01 00 00 00       	mov    $0x1,%edi
    c441:	e8 ea 4f ff ff       	callq  1430 <exit@plt>
    c446:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c44d:	00 00 00 
    c450:	01 c9                	add    %ecx,%ecx
    c452:	48 89 c7             	mov    %rax,%rdi
    c455:	66 89 4b 10          	mov    %cx,0x10(%rbx)
    c459:	0f b7 c9             	movzwl %cx,%ecx
    c45c:	48 c1 e1 04          	shl    $0x4,%rcx
    c460:	48 89 ce             	mov    %rcx,%rsi
    c463:	e8 18 4f ff ff       	callq  1380 <realloc@plt>
    c468:	48 85 c0             	test   %rax,%rax
    c46b:	74 0a                	je     c477 <stm_calloc_tx+0xb7>
    c46d:	48 89 43 18          	mov    %rax,0x18(%rbx)
    c471:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
    c475:	eb 8a                	jmp    c401 <stm_calloc_tx+0x41>
    c477:	48 8d 3d c2 0f 00 00 	lea    0xfc2(%rip),%rdi        # d440 <__PRETTY_FUNCTION__.3065+0x28>
    c47e:	e8 6d 4f ff ff       	callq  13f0 <perror@plt>
    c483:	bf 01 00 00 00       	mov    $0x1,%edi
    c488:	e8 a3 4f ff ff       	callq  1430 <exit@plt>
    c48d:	0f 1f 00             	nopl   (%rax)

000000000000c490 <stm_free2>:
    c490:	41 56                	push   %r14
    c492:	41 55                	push   %r13
    c494:	49 89 d6             	mov    %rdx,%r14
    c497:	41 54                	push   %r12
    c499:	55                   	push   %rbp
    c49a:	49 89 fc             	mov    %rdi,%r12
    c49d:	53                   	push   %rbx
    c49e:	48 89 f3             	mov    %rsi,%rbx
    c4a1:	e8 ca 85 ff ff       	callq  4a70 <stm_current_tx>
    c4a6:	8b 3d 94 3b 20 00    	mov    0x203b94(%rip),%edi        # 210040 <mod_cb>
    c4ac:	48 89 c5             	mov    %rax,%rbp
    c4af:	e8 8c 82 ff ff       	callq  4740 <stm_get_specific>
    c4b4:	4d 85 f6             	test   %r14,%r14
    c4b7:	49 89 c5             	mov    %rax,%r13
    c4ba:	74 3c                	je     c4f8 <stm_free2+0x68>
    c4bc:	48 8d 73 07          	lea    0x7(%rbx),%rsi
    c4c0:	49 83 c6 07          	add    $0x7,%r14
    c4c4:	49 c1 ee 03          	shr    $0x3,%r14
    c4c8:	48 89 f3             	mov    %rsi,%rbx
    c4cb:	48 83 e3 f8          	and    $0xfffffffffffffff8,%rbx
    c4cf:	4d 85 f6             	test   %r14,%r14
    c4d2:	49 8d 34 1c          	lea    (%r12,%rbx,1),%rsi
    c4d6:	74 20                	je     c4f8 <stm_free2+0x68>
    c4d8:	4e 8d 34 f6          	lea    (%rsi,%r14,8),%r14
    c4dc:	0f 1f 40 00          	nopl   0x0(%rax)
    c4e0:	48 8d 5e 08          	lea    0x8(%rsi),%rbx
    c4e4:	31 c9                	xor    %ecx,%ecx
    c4e6:	31 d2                	xor    %edx,%edx
    c4e8:	48 89 ef             	mov    %rbp,%rdi
    c4eb:	e8 f0 9a ff ff       	callq  5fe0 <stm_store2_tx>
    c4f0:	4c 39 f3             	cmp    %r14,%rbx
    c4f3:	48 89 de             	mov    %rbx,%rsi
    c4f6:	75 e8                	jne    c4e0 <stm_free2+0x50>
    c4f8:	41 0f b7 55 02       	movzwl 0x2(%r13),%edx
    c4fd:	41 0f b7 4d 00       	movzwl 0x0(%r13),%ecx
    c502:	49 8b 45 08          	mov    0x8(%r13),%rax
    c506:	66 39 ca             	cmp    %cx,%dx
    c509:	73 35                	jae    c540 <stm_free2+0xb0>
    c50b:	48 8b 0d be 3a 20 00 	mov    0x203abe(%rip),%rcx        # 20ffd0 <free@GLIBC_2.2.5>
    c512:	48 c1 e2 04          	shl    $0x4,%rdx
    c516:	48 89 0c 10          	mov    %rcx,(%rax,%rdx,1)
    c51a:	41 0f b7 45 02       	movzwl 0x2(%r13),%eax
    c51f:	48 c1 e0 04          	shl    $0x4,%rax
    c523:	49 03 45 08          	add    0x8(%r13),%rax
    c527:	4c 89 60 08          	mov    %r12,0x8(%rax)
    c52b:	66 41 83 45 02 01    	addw   $0x1,0x2(%r13)
    c531:	5b                   	pop    %rbx
    c532:	5d                   	pop    %rbp
    c533:	41 5c                	pop    %r12
    c535:	41 5d                	pop    %r13
    c537:	41 5e                	pop    %r14
    c539:	c3                   	retq   
    c53a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c540:	01 c9                	add    %ecx,%ecx
    c542:	48 89 c7             	mov    %rax,%rdi
    c545:	66 41 89 4d 00       	mov    %cx,0x0(%r13)
    c54a:	0f b7 c9             	movzwl %cx,%ecx
    c54d:	48 c1 e1 04          	shl    $0x4,%rcx
    c551:	48 89 ce             	mov    %rcx,%rsi
    c554:	e8 27 4e ff ff       	callq  1380 <realloc@plt>
    c559:	48 85 c0             	test   %rax,%rax
    c55c:	74 0b                	je     c569 <stm_free2+0xd9>
    c55e:	49 89 45 08          	mov    %rax,0x8(%r13)
    c562:	41 0f b7 55 02       	movzwl 0x2(%r13),%edx
    c567:	eb a2                	jmp    c50b <stm_free2+0x7b>
    c569:	48 8d 3d d0 0e 00 00 	lea    0xed0(%rip),%rdi        # d440 <__PRETTY_FUNCTION__.3065+0x28>
    c570:	e8 7b 4e ff ff       	callq  13f0 <perror@plt>
    c575:	bf 01 00 00 00       	mov    $0x1,%edi
    c57a:	e8 b1 4e ff ff       	callq  1430 <exit@plt>
    c57f:	90                   	nop

000000000000c580 <stm_free2_tx>:
    c580:	41 56                	push   %r14
    c582:	41 55                	push   %r13
    c584:	49 89 ce             	mov    %rcx,%r14
    c587:	41 54                	push   %r12
    c589:	55                   	push   %rbp
    c58a:	48 89 fd             	mov    %rdi,%rbp
    c58d:	8b 3d ad 3a 20 00    	mov    0x203aad(%rip),%edi        # 210040 <mod_cb>
    c593:	53                   	push   %rbx
    c594:	49 89 f4             	mov    %rsi,%r12
    c597:	48 89 d3             	mov    %rdx,%rbx
    c59a:	e8 a1 81 ff ff       	callq  4740 <stm_get_specific>
    c59f:	4d 85 f6             	test   %r14,%r14
    c5a2:	49 89 c5             	mov    %rax,%r13
    c5a5:	74 41                	je     c5e8 <stm_free2_tx+0x68>
    c5a7:	48 8d 73 07          	lea    0x7(%rbx),%rsi
    c5ab:	49 83 c6 07          	add    $0x7,%r14
    c5af:	49 c1 ee 03          	shr    $0x3,%r14
    c5b3:	48 89 f3             	mov    %rsi,%rbx
    c5b6:	48 83 e3 f8          	and    $0xfffffffffffffff8,%rbx
    c5ba:	4d 85 f6             	test   %r14,%r14
    c5bd:	49 8d 34 1c          	lea    (%r12,%rbx,1),%rsi
    c5c1:	74 25                	je     c5e8 <stm_free2_tx+0x68>
    c5c3:	4e 8d 34 f6          	lea    (%rsi,%r14,8),%r14
    c5c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c5ce:	00 00 
    c5d0:	48 8d 5e 08          	lea    0x8(%rsi),%rbx
    c5d4:	31 c9                	xor    %ecx,%ecx
    c5d6:	31 d2                	xor    %edx,%edx
    c5d8:	48 89 ef             	mov    %rbp,%rdi
    c5db:	e8 00 9a ff ff       	callq  5fe0 <stm_store2_tx>
    c5e0:	4c 39 f3             	cmp    %r14,%rbx
    c5e3:	48 89 de             	mov    %rbx,%rsi
    c5e6:	75 e8                	jne    c5d0 <stm_free2_tx+0x50>
    c5e8:	41 0f b7 55 02       	movzwl 0x2(%r13),%edx
    c5ed:	41 0f b7 4d 00       	movzwl 0x0(%r13),%ecx
    c5f2:	49 8b 45 08          	mov    0x8(%r13),%rax
    c5f6:	66 39 ca             	cmp    %cx,%dx
    c5f9:	73 35                	jae    c630 <stm_free2_tx+0xb0>
    c5fb:	48 8b 0d ce 39 20 00 	mov    0x2039ce(%rip),%rcx        # 20ffd0 <free@GLIBC_2.2.5>
    c602:	48 c1 e2 04          	shl    $0x4,%rdx
    c606:	48 89 0c 10          	mov    %rcx,(%rax,%rdx,1)
    c60a:	41 0f b7 45 02       	movzwl 0x2(%r13),%eax
    c60f:	48 c1 e0 04          	shl    $0x4,%rax
    c613:	49 03 45 08          	add    0x8(%r13),%rax
    c617:	4c 89 60 08          	mov    %r12,0x8(%rax)
    c61b:	66 41 83 45 02 01    	addw   $0x1,0x2(%r13)
    c621:	5b                   	pop    %rbx
    c622:	5d                   	pop    %rbp
    c623:	41 5c                	pop    %r12
    c625:	41 5d                	pop    %r13
    c627:	41 5e                	pop    %r14
    c629:	c3                   	retq   
    c62a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c630:	01 c9                	add    %ecx,%ecx
    c632:	48 89 c7             	mov    %rax,%rdi
    c635:	66 41 89 4d 00       	mov    %cx,0x0(%r13)
    c63a:	0f b7 c9             	movzwl %cx,%ecx
    c63d:	48 c1 e1 04          	shl    $0x4,%rcx
    c641:	48 89 ce             	mov    %rcx,%rsi
    c644:	e8 37 4d ff ff       	callq  1380 <realloc@plt>
    c649:	48 85 c0             	test   %rax,%rax
    c64c:	74 0b                	je     c659 <stm_free2_tx+0xd9>
    c64e:	49 89 45 08          	mov    %rax,0x8(%r13)
    c652:	41 0f b7 55 02       	movzwl 0x2(%r13),%edx
    c657:	eb a2                	jmp    c5fb <stm_free2_tx+0x7b>
    c659:	48 8d 3d e0 0d 00 00 	lea    0xde0(%rip),%rdi        # d440 <__PRETTY_FUNCTION__.3065+0x28>
    c660:	e8 8b 4d ff ff       	callq  13f0 <perror@plt>
    c665:	bf 01 00 00 00       	mov    $0x1,%edi
    c66a:	e8 c1 4d ff ff       	callq  1430 <exit@plt>
    c66f:	90                   	nop

000000000000c670 <stm_free>:
    c670:	41 56                	push   %r14
    c672:	41 55                	push   %r13
    c674:	41 54                	push   %r12
    c676:	55                   	push   %rbp
    c677:	49 89 f4             	mov    %rsi,%r12
    c67a:	53                   	push   %rbx
    c67b:	48 89 fd             	mov    %rdi,%rbp
    c67e:	e8 ed 83 ff ff       	callq  4a70 <stm_current_tx>
    c683:	8b 3d b7 39 20 00    	mov    0x2039b7(%rip),%edi        # 210040 <mod_cb>
    c689:	49 89 c5             	mov    %rax,%r13
    c68c:	e8 af 80 ff ff       	callq  4740 <stm_get_specific>
    c691:	4d 85 e4             	test   %r12,%r12
    c694:	48 89 c3             	mov    %rax,%rbx
    c697:	74 2f                	je     c6c8 <stm_free+0x58>
    c699:	49 83 c4 07          	add    $0x7,%r12
    c69d:	49 c1 ec 03          	shr    $0x3,%r12
    c6a1:	4d 85 e4             	test   %r12,%r12
    c6a4:	74 22                	je     c6c8 <stm_free+0x58>
    c6a6:	4e 8d 74 e5 00       	lea    0x0(%rbp,%r12,8),%r14
    c6ab:	48 89 ee             	mov    %rbp,%rsi
    c6ae:	66 90                	xchg   %ax,%ax
    c6b0:	4c 8d 66 08          	lea    0x8(%rsi),%r12
    c6b4:	31 c9                	xor    %ecx,%ecx
    c6b6:	31 d2                	xor    %edx,%edx
    c6b8:	4c 89 ef             	mov    %r13,%rdi
    c6bb:	e8 20 99 ff ff       	callq  5fe0 <stm_store2_tx>
    c6c0:	4d 39 f4             	cmp    %r14,%r12
    c6c3:	4c 89 e6             	mov    %r12,%rsi
    c6c6:	75 e8                	jne    c6b0 <stm_free+0x40>
    c6c8:	0f b7 53 02          	movzwl 0x2(%rbx),%edx
    c6cc:	0f b7 0b             	movzwl (%rbx),%ecx
    c6cf:	48 8b 43 08          	mov    0x8(%rbx),%rax
    c6d3:	66 39 ca             	cmp    %cx,%dx
    c6d6:	73 30                	jae    c708 <stm_free+0x98>
    c6d8:	48 8b 0d f1 38 20 00 	mov    0x2038f1(%rip),%rcx        # 20ffd0 <free@GLIBC_2.2.5>
    c6df:	48 c1 e2 04          	shl    $0x4,%rdx
    c6e3:	48 89 0c 10          	mov    %rcx,(%rax,%rdx,1)
    c6e7:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    c6eb:	48 c1 e0 04          	shl    $0x4,%rax
    c6ef:	48 03 43 08          	add    0x8(%rbx),%rax
    c6f3:	48 89 68 08          	mov    %rbp,0x8(%rax)
    c6f7:	66 83 43 02 01       	addw   $0x1,0x2(%rbx)
    c6fc:	5b                   	pop    %rbx
    c6fd:	5d                   	pop    %rbp
    c6fe:	41 5c                	pop    %r12
    c700:	41 5d                	pop    %r13
    c702:	41 5e                	pop    %r14
    c704:	c3                   	retq   
    c705:	0f 1f 00             	nopl   (%rax)
    c708:	01 c9                	add    %ecx,%ecx
    c70a:	48 89 c7             	mov    %rax,%rdi
    c70d:	66 89 0b             	mov    %cx,(%rbx)
    c710:	0f b7 c9             	movzwl %cx,%ecx
    c713:	48 c1 e1 04          	shl    $0x4,%rcx
    c717:	48 89 ce             	mov    %rcx,%rsi
    c71a:	e8 61 4c ff ff       	callq  1380 <realloc@plt>
    c71f:	48 85 c0             	test   %rax,%rax
    c722:	74 0a                	je     c72e <stm_free+0xbe>
    c724:	48 89 43 08          	mov    %rax,0x8(%rbx)
    c728:	0f b7 53 02          	movzwl 0x2(%rbx),%edx
    c72c:	eb aa                	jmp    c6d8 <stm_free+0x68>
    c72e:	48 8d 3d 0b 0d 00 00 	lea    0xd0b(%rip),%rdi        # d440 <__PRETTY_FUNCTION__.3065+0x28>
    c735:	e8 b6 4c ff ff       	callq  13f0 <perror@plt>
    c73a:	bf 01 00 00 00       	mov    $0x1,%edi
    c73f:	e8 ec 4c ff ff       	callq  1430 <exit@plt>
    c744:	66 90                	xchg   %ax,%ax
    c746:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c74d:	00 00 00 

000000000000c750 <stm_free_tx>:
    c750:	41 56                	push   %r14
    c752:	41 55                	push   %r13
    c754:	49 89 fd             	mov    %rdi,%r13
    c757:	8b 3d e3 38 20 00    	mov    0x2038e3(%rip),%edi        # 210040 <mod_cb>
    c75d:	41 54                	push   %r12
    c75f:	49 89 d4             	mov    %rdx,%r12
    c762:	55                   	push   %rbp
    c763:	53                   	push   %rbx
    c764:	48 89 f5             	mov    %rsi,%rbp
    c767:	e8 d4 7f ff ff       	callq  4740 <stm_get_specific>
    c76c:	4d 85 e4             	test   %r12,%r12
    c76f:	48 89 c3             	mov    %rax,%rbx
    c772:	74 34                	je     c7a8 <stm_free_tx+0x58>
    c774:	49 83 c4 07          	add    $0x7,%r12
    c778:	49 c1 ec 03          	shr    $0x3,%r12
    c77c:	4d 85 e4             	test   %r12,%r12
    c77f:	74 27                	je     c7a8 <stm_free_tx+0x58>
    c781:	4e 8d 74 e5 00       	lea    0x0(%rbp,%r12,8),%r14
    c786:	48 89 ee             	mov    %rbp,%rsi
    c789:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c790:	4c 8d 66 08          	lea    0x8(%rsi),%r12
    c794:	31 c9                	xor    %ecx,%ecx
    c796:	31 d2                	xor    %edx,%edx
    c798:	4c 89 ef             	mov    %r13,%rdi
    c79b:	e8 40 98 ff ff       	callq  5fe0 <stm_store2_tx>
    c7a0:	4d 39 f4             	cmp    %r14,%r12
    c7a3:	4c 89 e6             	mov    %r12,%rsi
    c7a6:	75 e8                	jne    c790 <stm_free_tx+0x40>
    c7a8:	0f b7 53 02          	movzwl 0x2(%rbx),%edx
    c7ac:	0f b7 0b             	movzwl (%rbx),%ecx
    c7af:	48 8b 43 08          	mov    0x8(%rbx),%rax
    c7b3:	66 39 ca             	cmp    %cx,%dx
    c7b6:	73 30                	jae    c7e8 <stm_free_tx+0x98>
    c7b8:	48 8b 0d 11 38 20 00 	mov    0x203811(%rip),%rcx        # 20ffd0 <free@GLIBC_2.2.5>
    c7bf:	48 c1 e2 04          	shl    $0x4,%rdx
    c7c3:	48 89 0c 10          	mov    %rcx,(%rax,%rdx,1)
    c7c7:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    c7cb:	48 c1 e0 04          	shl    $0x4,%rax
    c7cf:	48 03 43 08          	add    0x8(%rbx),%rax
    c7d3:	48 89 68 08          	mov    %rbp,0x8(%rax)
    c7d7:	66 83 43 02 01       	addw   $0x1,0x2(%rbx)
    c7dc:	5b                   	pop    %rbx
    c7dd:	5d                   	pop    %rbp
    c7de:	41 5c                	pop    %r12
    c7e0:	41 5d                	pop    %r13
    c7e2:	41 5e                	pop    %r14
    c7e4:	c3                   	retq   
    c7e5:	0f 1f 00             	nopl   (%rax)
    c7e8:	01 c9                	add    %ecx,%ecx
    c7ea:	48 89 c7             	mov    %rax,%rdi
    c7ed:	66 89 0b             	mov    %cx,(%rbx)
    c7f0:	0f b7 c9             	movzwl %cx,%ecx
    c7f3:	48 c1 e1 04          	shl    $0x4,%rcx
    c7f7:	48 89 ce             	mov    %rcx,%rsi
    c7fa:	e8 81 4b ff ff       	callq  1380 <realloc@plt>
    c7ff:	48 85 c0             	test   %rax,%rax
    c802:	74 0a                	je     c80e <stm_free_tx+0xbe>
    c804:	48 89 43 08          	mov    %rax,0x8(%rbx)
    c808:	0f b7 53 02          	movzwl 0x2(%rbx),%edx
    c80c:	eb aa                	jmp    c7b8 <stm_free_tx+0x68>
    c80e:	48 8d 3d 2b 0c 00 00 	lea    0xc2b(%rip),%rdi        # d440 <__PRETTY_FUNCTION__.3065+0x28>
    c815:	e8 d6 4b ff ff       	callq  13f0 <perror@plt>
    c81a:	bf 01 00 00 00       	mov    $0x1,%edi
    c81f:	e8 0c 4c ff ff       	callq  1430 <exit@plt>
    c824:	66 90                	xchg   %ax,%ax
    c826:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c82d:	00 00 00 

000000000000c830 <mod_cb_init>:
    c830:	8b 35 0a 38 20 00    	mov    0x20380a(%rip),%esi        # 210040 <mod_cb>
    c836:	85 f6                	test   %esi,%esi
    c838:	78 06                	js     c840 <mod_cb_init+0x10>
    c83a:	f3 c3                	repz retq 
    c83c:	0f 1f 40 00          	nopl   0x0(%rax)
    c840:	48 83 ec 10          	sub    $0x10,%rsp
    c844:	4c 8d 0d a5 f6 ff ff 	lea    -0x95b(%rip),%r9        # bef0 <mod_cb_on_abort>
    c84b:	4c 8d 05 ee f6 ff ff 	lea    -0x912(%rip),%r8        # bf40 <mod_cb_on_commit>
    c852:	6a 00                	pushq  $0x0
    c854:	48 8d 35 35 f7 ff ff 	lea    -0x8cb(%rip),%rsi        # bf90 <mod_cb_on_thread_exit>
    c85b:	48 8d 3d 5e f7 ff ff 	lea    -0x8a2(%rip),%rdi        # bfc0 <mod_cb_on_thread_init>
    c862:	31 c9                	xor    %ecx,%ecx
    c864:	31 d2                	xor    %edx,%edx
    c866:	e8 05 7f ff ff       	callq  4770 <stm_register>
    c86b:	85 c0                	test   %eax,%eax
    c86d:	5a                   	pop    %rdx
    c86e:	59                   	pop    %rcx
    c86f:	74 14                	je     c885 <mod_cb_init+0x55>
    c871:	e8 5a 7e ff ff       	callq  46d0 <stm_create_specific>
    c876:	85 c0                	test   %eax,%eax
    c878:	89 05 c2 37 20 00    	mov    %eax,0x2037c2(%rip)        # 210040 <mod_cb>
    c87e:	78 2c                	js     c8ac <mod_cb_init+0x7c>
    c880:	48 83 c4 08          	add    $0x8,%rsp
    c884:	c3                   	retq   
    c885:	48 8b 0d 54 38 20 00 	mov    0x203854(%rip),%rcx        # 2100e0 <stderr@@GLIBC_2.2.5>
    c88c:	48 8d 3d 1c 0f 00 00 	lea    0xf1c(%rip),%rdi        # d7af <__PRETTY_FUNCTION__.3065+0x397>
    c893:	ba 1a 00 00 00       	mov    $0x1a,%edx
    c898:	be 01 00 00 00       	mov    $0x1,%esi
    c89d:	e8 9e 4b ff ff       	callq  1440 <fwrite@plt>
    c8a2:	bf 01 00 00 00       	mov    $0x1,%edi
    c8a7:	e8 84 4b ff ff       	callq  1430 <exit@plt>
    c8ac:	48 8b 0d 2d 38 20 00 	mov    0x20382d(%rip),%rcx        # 2100e0 <stderr@@GLIBC_2.2.5>
    c8b3:	48 8d 3d 10 0f 00 00 	lea    0xf10(%rip),%rdi        # d7ca <__PRETTY_FUNCTION__.3065+0x3b2>
    c8ba:	ba 1b 00 00 00       	mov    $0x1b,%edx
    c8bf:	be 01 00 00 00       	mov    $0x1,%esi
    c8c4:	e8 77 4b ff ff       	callq  1440 <fwrite@plt>
    c8c9:	bf 01 00 00 00       	mov    $0x1,%edi
    c8ce:	e8 5d 4b ff ff       	callq  1430 <exit@plt>
    c8d3:	0f 1f 00             	nopl   (%rax)
    c8d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c8dd:	00 00 00 

000000000000c8e0 <mod_mem_init>:
    c8e0:	8b 35 5a 37 20 00    	mov    0x20375a(%rip),%esi        # 210040 <mod_cb>
    c8e6:	85 f6                	test   %esi,%esi
    c8e8:	78 06                	js     c8f0 <mod_mem_init+0x10>
    c8ea:	f3 c3                	repz retq 
    c8ec:	0f 1f 40 00          	nopl   0x0(%rax)
    c8f0:	48 83 ec 10          	sub    $0x10,%rsp
    c8f4:	4c 8d 0d f5 f5 ff ff 	lea    -0xa0b(%rip),%r9        # bef0 <mod_cb_on_abort>
    c8fb:	4c 8d 05 3e f6 ff ff 	lea    -0x9c2(%rip),%r8        # bf40 <mod_cb_on_commit>
    c902:	6a 00                	pushq  $0x0
    c904:	48 8d 35 85 f6 ff ff 	lea    -0x97b(%rip),%rsi        # bf90 <mod_cb_on_thread_exit>
    c90b:	48 8d 3d ae f6 ff ff 	lea    -0x952(%rip),%rdi        # bfc0 <mod_cb_on_thread_init>
    c912:	31 c9                	xor    %ecx,%ecx
    c914:	31 d2                	xor    %edx,%edx
    c916:	e8 55 7e ff ff       	callq  4770 <stm_register>
    c91b:	85 c0                	test   %eax,%eax
    c91d:	5a                   	pop    %rdx
    c91e:	59                   	pop    %rcx
    c91f:	74 14                	je     c935 <mod_mem_init+0x55>
    c921:	e8 aa 7d ff ff       	callq  46d0 <stm_create_specific>
    c926:	85 c0                	test   %eax,%eax
    c928:	89 05 12 37 20 00    	mov    %eax,0x203712(%rip)        # 210040 <mod_cb>
    c92e:	78 2c                	js     c95c <mod_mem_init+0x7c>
    c930:	48 83 c4 08          	add    $0x8,%rsp
    c934:	c3                   	retq   
    c935:	48 8b 0d a4 37 20 00 	mov    0x2037a4(%rip),%rcx        # 2100e0 <stderr@@GLIBC_2.2.5>
    c93c:	48 8d 3d 6c 0e 00 00 	lea    0xe6c(%rip),%rdi        # d7af <__PRETTY_FUNCTION__.3065+0x397>
    c943:	ba 1a 00 00 00       	mov    $0x1a,%edx
    c948:	be 01 00 00 00       	mov    $0x1,%esi
    c94d:	e8 ee 4a ff ff       	callq  1440 <fwrite@plt>
    c952:	bf 01 00 00 00       	mov    $0x1,%edi
    c957:	e8 d4 4a ff ff       	callq  1430 <exit@plt>
    c95c:	48 8b 0d 7d 37 20 00 	mov    0x20377d(%rip),%rcx        # 2100e0 <stderr@@GLIBC_2.2.5>
    c963:	48 8d 3d 60 0e 00 00 	lea    0xe60(%rip),%rdi        # d7ca <__PRETTY_FUNCTION__.3065+0x3b2>
    c96a:	ba 1b 00 00 00       	mov    $0x1b,%edx
    c96f:	be 01 00 00 00       	mov    $0x1,%esi
    c974:	e8 c7 4a ff ff       	callq  1440 <fwrite@plt>
    c979:	bf 01 00 00 00       	mov    $0x1,%edi
    c97e:	e8 ad 4a ff ff       	callq  1430 <exit@plt>
    c983:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c98a:	00 00 00 
    c98d:	0f 1f 00             	nopl   (%rax)

000000000000c990 <mod_stats_on_abort>:
    c990:	48 83 ec 08          	sub    $0x8,%rsp
    c994:	8b 3d aa 3d a0 00    	mov    0xa03daa(%rip),%edi        # a10744 <mod_stats_key>
    c99a:	e8 a1 7d ff ff       	callq  4740 <stm_get_specific>
    c99f:	48 83 40 08 01       	addq   $0x1,0x8(%rax)
    c9a4:	48 83 c4 08          	add    $0x8,%rsp
    c9a8:	c3                   	retq   
    c9a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000c9b0 <mod_stats_on_commit>:
    c9b0:	48 83 ec 08          	sub    $0x8,%rsp
    c9b4:	8b 3d 8a 3d a0 00    	mov    0xa03d8a(%rip),%edi        # a10744 <mod_stats_key>
    c9ba:	e8 81 7d ff ff       	callq  4740 <stm_get_specific>
    c9bf:	48 8b 50 08          	mov    0x8(%rax),%rdx
    c9c3:	48 83 00 01          	addq   $0x1,(%rax)
    c9c7:	48 01 50 20          	add    %rdx,0x20(%rax)
    c9cb:	48 83 40 28 01       	addq   $0x1,0x28(%rax)
    c9d0:	48 3b 50 10          	cmp    0x10(%rax),%rdx
    c9d4:	73 04                	jae    c9da <mod_stats_on_commit+0x2a>
    c9d6:	48 89 50 10          	mov    %rdx,0x10(%rax)
    c9da:	48 3b 50 18          	cmp    0x18(%rax),%rdx
    c9de:	76 04                	jbe    c9e4 <mod_stats_on_commit+0x34>
    c9e0:	48 89 50 18          	mov    %rdx,0x18(%rax)
    c9e4:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c9eb:	00 
    c9ec:	48 83 c4 08          	add    $0x8,%rsp
    c9f0:	c3                   	retq   
    c9f1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c9f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c9fd:	00 00 00 

000000000000ca00 <mod_stats_on_thread_exit>:
    ca00:	48 83 ec 08          	sub    $0x8,%rsp
    ca04:	8b 3d 3a 3d a0 00    	mov    0xa03d3a(%rip),%edi        # a10744 <mod_stats_key>
    ca0a:	e8 31 7d ff ff       	callq  4740 <stm_get_specific>
    ca0f:	48 89 c7             	mov    %rax,%rdi
    ca12:	48 8b 00             	mov    (%rax),%rax
    ca15:	f0 48 0f c1 05 62 36 	lock xadd %rax,0x203662(%rip)        # 210080 <mod_stats_global>
    ca1c:	20 00 
    ca1e:	48 8b 47 28          	mov    0x28(%rdi),%rax
    ca22:	f0 48 0f c1 05 7d 36 	lock xadd %rax,0x20367d(%rip)        # 2100a8 <mod_stats_global+0x28>
    ca29:	20 00 
    ca2b:	48 8b 47 20          	mov    0x20(%rdi),%rax
    ca2f:	f0 48 0f c1 05 68 36 	lock xadd %rax,0x203668(%rip)        # 2100a0 <mod_stats_global+0x20>
    ca36:	20 00 
    ca38:	48 8b 05 59 36 20 00 	mov    0x203659(%rip),%rax        # 210098 <mod_stats_global+0x18>
    ca3f:	48 8b 57 18          	mov    0x18(%rdi),%rdx
    ca43:	48 39 c2             	cmp    %rax,%rdx
    ca46:	76 0b                	jbe    ca53 <mod_stats_on_thread_exit+0x53>
    ca48:	f0 48 0f b1 15 47 36 	lock cmpxchg %rdx,0x203647(%rip)        # 210098 <mod_stats_global+0x18>
    ca4f:	20 00 
    ca51:	75 e5                	jne    ca38 <mod_stats_on_thread_exit+0x38>
    ca53:	48 8b 05 36 36 20 00 	mov    0x203636(%rip),%rax        # 210090 <mod_stats_global+0x10>
    ca5a:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    ca5e:	48 39 c2             	cmp    %rax,%rdx
    ca61:	73 0b                	jae    ca6e <mod_stats_on_thread_exit+0x6e>
    ca63:	f0 48 0f b1 15 24 36 	lock cmpxchg %rdx,0x203624(%rip)        # 210090 <mod_stats_global+0x10>
    ca6a:	20 00 
    ca6c:	75 e5                	jne    ca53 <mod_stats_on_thread_exit+0x53>
    ca6e:	48 83 c4 08          	add    $0x8,%rsp
    ca72:	e9 39 4a ff ff       	jmpq   14b0 <free@plt>
    ca77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ca7e:	00 00 

000000000000ca80 <mod_stats_on_thread_init>:
    ca80:	48 83 ec 08          	sub    $0x8,%rsp
    ca84:	bf 30 00 00 00       	mov    $0x30,%edi
    ca89:	e8 e2 48 ff ff       	callq  1370 <malloc@plt>
    ca8e:	48 85 c0             	test   %rax,%rax
    ca91:	74 45                	je     cad8 <mod_stats_on_thread_init+0x58>
    ca93:	8b 3d ab 3c a0 00    	mov    0xa03cab(%rip),%edi        # a10744 <mod_stats_key>
    ca99:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    caa0:	48 89 c6             	mov    %rax,%rsi
    caa3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    caaa:	00 
    caab:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    cab2:	00 
    cab3:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    caba:	00 
    cabb:	48 c7 40 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rax)
    cac2:	ff 
    cac3:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    caca:	00 
    cacb:	48 83 c4 08          	add    $0x8,%rsp
    cacf:	e9 3c 7c ff ff       	jmpq   4710 <stm_set_specific>
    cad4:	0f 1f 40 00          	nopl   0x0(%rax)
    cad8:	48 8d 3d c2 0c 00 00 	lea    0xcc2(%rip),%rdi        # d7a1 <__PRETTY_FUNCTION__.3065+0x389>
    cadf:	e8 0c 49 ff ff       	callq  13f0 <perror@plt>
    cae4:	bf 01 00 00 00       	mov    $0x1,%edi
    cae9:	e8 42 49 ff ff       	callq  1430 <exit@plt>
    caee:	66 90                	xchg   %ax,%ax

000000000000caf0 <stm_get_global_stats>:
    caf0:	8b 05 4a 3c a0 00    	mov    0xa03c4a(%rip),%eax        # a10740 <mod_stats_initialized>
    caf6:	85 c0                	test   %eax,%eax
    caf8:	0f 84 92 00 00 00    	je     cb90 <stm_get_global_stats+0xa0>
    cafe:	49 89 f0             	mov    %rsi,%r8
    cb01:	48 8d 35 74 06 00 00 	lea    0x674(%rip),%rsi        # d17c <__PRETTY_FUNCTION__.5405+0x26c>
    cb08:	b9 12 00 00 00       	mov    $0x12,%ecx
    cb0d:	48 89 fa             	mov    %rdi,%rdx
    cb10:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    cb12:	0f 97 c0             	seta   %al
    cb15:	1c 00                	sbb    $0x0,%al
    cb17:	84 c0                	test   %al,%al
    cb19:	74 65                	je     cb80 <stm_get_global_stats+0x90>
    cb1b:	48 8d 35 7f 06 00 00 	lea    0x67f(%rip),%rsi        # d1a1 <__PRETTY_FUNCTION__.5405+0x291>
    cb22:	b9 11 00 00 00       	mov    $0x11,%ecx
    cb27:	48 89 d7             	mov    %rdx,%rdi
    cb2a:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    cb2c:	0f 97 c0             	seta   %al
    cb2f:	1c 00                	sbb    $0x0,%al
    cb31:	84 c0                	test   %al,%al
    cb33:	74 33                	je     cb68 <stm_get_global_stats+0x78>
    cb35:	48 8d 35 89 06 00 00 	lea    0x689(%rip),%rsi        # d1c5 <__PRETTY_FUNCTION__.5405+0x2b5>
    cb3c:	48 89 d7             	mov    %rdx,%rdi
    cb3f:	b9 13 00 00 00       	mov    $0x13,%ecx
    cb44:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    cb46:	0f 97 c2             	seta   %dl
    cb49:	80 da 00             	sbb    $0x0,%dl
    cb4c:	31 c0                	xor    %eax,%eax
    cb4e:	84 d2                	test   %dl,%dl
    cb50:	75 0f                	jne    cb61 <stm_get_global_stats+0x71>
    cb52:	48 8b 05 3f 35 20 00 	mov    0x20353f(%rip),%rax        # 210098 <mod_stats_global+0x18>
    cb59:	49 89 00             	mov    %rax,(%r8)
    cb5c:	b8 01 00 00 00       	mov    $0x1,%eax
    cb61:	f3 c3                	repz retq 
    cb63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cb68:	48 8b 05 31 35 20 00 	mov    0x203531(%rip),%rax        # 2100a0 <mod_stats_global+0x20>
    cb6f:	49 89 00             	mov    %rax,(%r8)
    cb72:	b8 01 00 00 00       	mov    $0x1,%eax
    cb77:	c3                   	retq   
    cb78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    cb7f:	00 
    cb80:	48 8b 05 f9 34 20 00 	mov    0x2034f9(%rip),%rax        # 210080 <mod_stats_global>
    cb87:	49 89 00             	mov    %rax,(%r8)
    cb8a:	b8 01 00 00 00       	mov    $0x1,%eax
    cb8f:	c3                   	retq   
    cb90:	48 83 ec 08          	sub    $0x8,%rsp
    cb94:	48 8b 0d 45 35 20 00 	mov    0x203545(%rip),%rcx        # 2100e0 <stderr@@GLIBC_2.2.5>
    cb9b:	48 8d 3d 76 0c 00 00 	lea    0xc76(%rip),%rdi        # d818 <__PRETTY_FUNCTION__.3065+0x400>
    cba2:	ba 21 00 00 00       	mov    $0x21,%edx
    cba7:	be 01 00 00 00       	mov    $0x1,%esi
    cbac:	e8 8f 48 ff ff       	callq  1440 <fwrite@plt>
    cbb1:	bf 01 00 00 00       	mov    $0x1,%edi
    cbb6:	e8 75 48 ff ff       	callq  1430 <exit@plt>
    cbbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000cbc0 <stm_get_local_stats>:
    cbc0:	55                   	push   %rbp
    cbc1:	53                   	push   %rbx
    cbc2:	48 83 ec 08          	sub    $0x8,%rsp
    cbc6:	8b 05 74 3b a0 00    	mov    0xa03b74(%rip),%eax        # a10740 <mod_stats_initialized>
    cbcc:	85 c0                	test   %eax,%eax
    cbce:	0f 84 77 01 00 00    	je     cd4b <stm_get_local_stats+0x18b>
    cbd4:	48 89 fb             	mov    %rdi,%rbx
    cbd7:	8b 3d 67 3b a0 00    	mov    0xa03b67(%rip),%edi        # a10744 <mod_stats_key>
    cbdd:	48 89 f5             	mov    %rsi,%rbp
    cbe0:	e8 5b 7b ff ff       	callq  4740 <stm_get_specific>
    cbe5:	48 8d 35 97 05 00 00 	lea    0x597(%rip),%rsi        # d183 <__PRETTY_FUNCTION__.5405+0x273>
    cbec:	b9 0b 00 00 00       	mov    $0xb,%ecx
    cbf1:	48 89 df             	mov    %rbx,%rdi
    cbf4:	49 89 c0             	mov    %rax,%r8
    cbf7:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    cbf9:	0f 97 c2             	seta   %dl
    cbfc:	80 da 00             	sbb    $0x0,%dl
    cbff:	84 d2                	test   %dl,%dl
    cc01:	0f 84 a1 00 00 00    	je     cca8 <stm_get_local_stats+0xe8>
    cc07:	48 8d 35 9a 05 00 00 	lea    0x59a(%rip),%rsi        # d1a8 <__PRETTY_FUNCTION__.5405+0x298>
    cc0e:	b9 0a 00 00 00       	mov    $0xa,%ecx
    cc13:	48 89 df             	mov    %rbx,%rdi
    cc16:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    cc18:	0f 97 c2             	seta   %dl
    cc1b:	80 da 00             	sbb    $0x0,%dl
    cc1e:	84 d2                	test   %dl,%dl
    cc20:	74 6e                	je     cc90 <stm_get_local_stats+0xd0>
    cc22:	48 8d 35 bd 0b 00 00 	lea    0xbbd(%rip),%rsi        # d7e6 <__PRETTY_FUNCTION__.3065+0x3ce>
    cc29:	b9 0f 00 00 00       	mov    $0xf,%ecx
    cc2e:	48 89 df             	mov    %rbx,%rdi
    cc31:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    cc33:	0f 97 c0             	seta   %al
    cc36:	1c 00                	sbb    $0x0,%al
    cc38:	84 c0                	test   %al,%al
    cc3a:	0f 84 80 00 00 00    	je     ccc0 <stm_get_local_stats+0x100>
    cc40:	48 8d 35 ae 0b 00 00 	lea    0xbae(%rip),%rsi        # d7f5 <__PRETTY_FUNCTION__.3065+0x3dd>
    cc47:	b9 0f 00 00 00       	mov    $0xf,%ecx
    cc4c:	48 89 df             	mov    %rbx,%rdi
    cc4f:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    cc51:	0f 97 c0             	seta   %al
    cc54:	1c 00                	sbb    $0x0,%al
    cc56:	84 c0                	test   %al,%al
    cc58:	0f 84 a2 00 00 00    	je     cd00 <stm_get_local_stats+0x140>
    cc5e:	48 8d 35 9f 0b 00 00 	lea    0xb9f(%rip),%rsi        # d804 <__PRETTY_FUNCTION__.3065+0x3ec>
    cc65:	b9 0f 00 00 00       	mov    $0xf,%ecx
    cc6a:	48 89 df             	mov    %rbx,%rdi
    cc6d:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    cc6f:	0f 97 c2             	seta   %dl
    cc72:	80 da 00             	sbb    $0x0,%dl
    cc75:	31 c0                	xor    %eax,%eax
    cc77:	84 d2                	test   %dl,%dl
    cc79:	75 22                	jne    cc9d <stm_get_local_stats+0xdd>
    cc7b:	49 8b 40 18          	mov    0x18(%r8),%rax
    cc7f:	48 89 45 00          	mov    %rax,0x0(%rbp)
    cc83:	b8 01 00 00 00       	mov    $0x1,%eax
    cc88:	eb 13                	jmp    cc9d <stm_get_local_stats+0xdd>
    cc8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cc90:	48 8b 40 20          	mov    0x20(%rax),%rax
    cc94:	48 89 45 00          	mov    %rax,0x0(%rbp)
    cc98:	b8 01 00 00 00       	mov    $0x1,%eax
    cc9d:	48 83 c4 08          	add    $0x8,%rsp
    cca1:	5b                   	pop    %rbx
    cca2:	5d                   	pop    %rbp
    cca3:	c3                   	retq   
    cca4:	0f 1f 40 00          	nopl   0x0(%rax)
    cca8:	48 8b 00             	mov    (%rax),%rax
    ccab:	48 89 45 00          	mov    %rax,0x0(%rbp)
    ccaf:	48 83 c4 08          	add    $0x8,%rsp
    ccb3:	b8 01 00 00 00       	mov    $0x1,%eax
    ccb8:	5b                   	pop    %rbx
    ccb9:	5d                   	pop    %rbp
    ccba:	c3                   	retq   
    ccbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ccc0:	49 8b 40 20          	mov    0x20(%r8),%rax
    ccc4:	48 85 c0             	test   %rax,%rax
    ccc7:	78 67                	js     cd30 <stm_get_local_stats+0x170>
    ccc9:	c5 f9 57 c0          	vxorpd %xmm0,%xmm0,%xmm0
    cccd:	c4 e1 fb 2a c0       	vcvtsi2sd %rax,%xmm0,%xmm0
    ccd2:	49 8b 40 28          	mov    0x28(%r8),%rax
    ccd6:	48 85 c0             	test   %rax,%rax
    ccd9:	78 35                	js     cd10 <stm_get_local_stats+0x150>
    ccdb:	c5 f1 57 c9          	vxorpd %xmm1,%xmm1,%xmm1
    ccdf:	c4 e1 f3 2a c8       	vcvtsi2sd %rax,%xmm1,%xmm1
    cce4:	c5 fb 5e c1          	vdivsd %xmm1,%xmm0,%xmm0
    cce8:	b8 01 00 00 00       	mov    $0x1,%eax
    cced:	c5 fb 11 45 00       	vmovsd %xmm0,0x0(%rbp)
    ccf2:	48 83 c4 08          	add    $0x8,%rsp
    ccf6:	5b                   	pop    %rbx
    ccf7:	5d                   	pop    %rbp
    ccf8:	c3                   	retq   
    ccf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cd00:	49 8b 40 10          	mov    0x10(%r8),%rax
    cd04:	48 89 45 00          	mov    %rax,0x0(%rbp)
    cd08:	b8 01 00 00 00       	mov    $0x1,%eax
    cd0d:	eb 8e                	jmp    cc9d <stm_get_local_stats+0xdd>
    cd0f:	90                   	nop
    cd10:	48 89 c2             	mov    %rax,%rdx
    cd13:	c5 f1 57 c9          	vxorpd %xmm1,%xmm1,%xmm1
    cd17:	48 d1 ea             	shr    %rdx
    cd1a:	83 e0 01             	and    $0x1,%eax
    cd1d:	48 09 c2             	or     %rax,%rdx
    cd20:	c4 e1 f3 2a ca       	vcvtsi2sd %rdx,%xmm1,%xmm1
    cd25:	c5 f3 58 c9          	vaddsd %xmm1,%xmm1,%xmm1
    cd29:	eb b9                	jmp    cce4 <stm_get_local_stats+0x124>
    cd2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cd30:	48 89 c2             	mov    %rax,%rdx
    cd33:	c5 f9 57 c0          	vxorpd %xmm0,%xmm0,%xmm0
    cd37:	48 d1 ea             	shr    %rdx
    cd3a:	83 e0 01             	and    $0x1,%eax
    cd3d:	48 09 c2             	or     %rax,%rdx
    cd40:	c4 e1 fb 2a c2       	vcvtsi2sd %rdx,%xmm0,%xmm0
    cd45:	c5 fb 58 c0          	vaddsd %xmm0,%xmm0,%xmm0
    cd49:	eb 87                	jmp    ccd2 <stm_get_local_stats+0x112>
    cd4b:	48 8b 0d 8e 33 20 00 	mov    0x20338e(%rip),%rcx        # 2100e0 <stderr@@GLIBC_2.2.5>
    cd52:	48 8d 3d bf 0a 00 00 	lea    0xabf(%rip),%rdi        # d818 <__PRETTY_FUNCTION__.3065+0x400>
    cd59:	ba 21 00 00 00       	mov    $0x21,%edx
    cd5e:	be 01 00 00 00       	mov    $0x1,%esi
    cd63:	e8 d8 46 ff ff       	callq  1440 <fwrite@plt>
    cd68:	bf 01 00 00 00       	mov    $0x1,%edi
    cd6d:	e8 be 46 ff ff       	callq  1430 <exit@plt>
    cd72:	0f 1f 40 00          	nopl   0x0(%rax)
    cd76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    cd7d:	00 00 00 

000000000000cd80 <mod_stats_init>:
    cd80:	8b 35 ba 39 a0 00    	mov    0xa039ba(%rip),%esi        # a10740 <mod_stats_initialized>
    cd86:	85 f6                	test   %esi,%esi
    cd88:	74 06                	je     cd90 <mod_stats_init+0x10>
    cd8a:	f3 c3                	repz retq 
    cd8c:	0f 1f 40 00          	nopl   0x0(%rax)
    cd90:	48 83 ec 10          	sub    $0x10,%rsp
    cd94:	4c 8d 0d f5 fb ff ff 	lea    -0x40b(%rip),%r9        # c990 <mod_stats_on_abort>
    cd9b:	4c 8d 05 0e fc ff ff 	lea    -0x3f2(%rip),%r8        # c9b0 <mod_stats_on_commit>
    cda2:	6a 00                	pushq  $0x0
    cda4:	48 8d 35 55 fc ff ff 	lea    -0x3ab(%rip),%rsi        # ca00 <mod_stats_on_thread_exit>
    cdab:	48 8d 3d ce fc ff ff 	lea    -0x332(%rip),%rdi        # ca80 <mod_stats_on_thread_init>
    cdb2:	31 c9                	xor    %ecx,%ecx
    cdb4:	31 d2                	xor    %edx,%edx
    cdb6:	e8 b5 79 ff ff       	callq  4770 <stm_register>
    cdbb:	85 c0                	test   %eax,%eax
    cdbd:	5a                   	pop    %rdx
    cdbe:	59                   	pop    %rcx
    cdbf:	74 1e                	je     cddf <mod_stats_init+0x5f>
    cdc1:	e8 0a 79 ff ff       	callq  46d0 <stm_create_specific>
    cdc6:	85 c0                	test   %eax,%eax
    cdc8:	89 05 76 39 a0 00    	mov    %eax,0xa03976(%rip)        # a10744 <mod_stats_key>
    cdce:	78 36                	js     ce06 <mod_stats_init+0x86>
    cdd0:	c7 05 66 39 a0 00 01 	movl   $0x1,0xa03966(%rip)        # a10740 <mod_stats_initialized>
    cdd7:	00 00 00 
    cdda:	48 83 c4 08          	add    $0x8,%rsp
    cdde:	c3                   	retq   
    cddf:	48 8b 0d fa 32 20 00 	mov    0x2032fa(%rip),%rcx        # 2100e0 <stderr@@GLIBC_2.2.5>
    cde6:	48 8d 3d c2 09 00 00 	lea    0x9c2(%rip),%rdi        # d7af <__PRETTY_FUNCTION__.3065+0x397>
    cded:	ba 1a 00 00 00       	mov    $0x1a,%edx
    cdf2:	be 01 00 00 00       	mov    $0x1,%esi
    cdf7:	e8 44 46 ff ff       	callq  1440 <fwrite@plt>
    cdfc:	bf 01 00 00 00       	mov    $0x1,%edi
    ce01:	e8 2a 46 ff ff       	callq  1430 <exit@plt>
    ce06:	48 8b 0d d3 32 20 00 	mov    0x2032d3(%rip),%rcx        # 2100e0 <stderr@@GLIBC_2.2.5>
    ce0d:	48 8d 3d b6 09 00 00 	lea    0x9b6(%rip),%rdi        # d7ca <__PRETTY_FUNCTION__.3065+0x3b2>
    ce14:	ba 1b 00 00 00       	mov    $0x1b,%edx
    ce19:	be 01 00 00 00       	mov    $0x1,%esi
    ce1e:	e8 1d 46 ff ff       	callq  1440 <fwrite@plt>
    ce23:	bf 01 00 00 00       	mov    $0x1,%edi
    ce28:	e8 03 46 ff ff       	callq  1430 <exit@plt>
    ce2d:	0f 1f 00             	nopl   (%rax)

000000000000ce30 <__libc_csu_init>:
    ce30:	41 57                	push   %r15
    ce32:	41 56                	push   %r14
    ce34:	49 89 d7             	mov    %rdx,%r15
    ce37:	41 55                	push   %r13
    ce39:	41 54                	push   %r12
    ce3b:	4c 8d 25 e6 2d 20 00 	lea    0x202de6(%rip),%r12        # 20fc28 <__frame_dummy_init_array_entry>
    ce42:	55                   	push   %rbp
    ce43:	48 8d 2d e6 2d 20 00 	lea    0x202de6(%rip),%rbp        # 20fc30 <__init_array_end>
    ce4a:	53                   	push   %rbx
    ce4b:	41 89 fd             	mov    %edi,%r13d
    ce4e:	49 89 f6             	mov    %rsi,%r14
    ce51:	4c 29 e5             	sub    %r12,%rbp
    ce54:	48 83 ec 08          	sub    $0x8,%rsp
    ce58:	48 c1 fd 03          	sar    $0x3,%rbp
    ce5c:	e8 47 43 ff ff       	callq  11a8 <_init>
    ce61:	48 85 ed             	test   %rbp,%rbp
    ce64:	74 20                	je     ce86 <__libc_csu_init+0x56>
    ce66:	31 db                	xor    %ebx,%ebx
    ce68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ce6f:	00 
    ce70:	4c 89 fa             	mov    %r15,%rdx
    ce73:	4c 89 f6             	mov    %r14,%rsi
    ce76:	44 89 ef             	mov    %r13d,%edi
    ce79:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
    ce7d:	48 83 c3 01          	add    $0x1,%rbx
    ce81:	48 39 dd             	cmp    %rbx,%rbp
    ce84:	75 ea                	jne    ce70 <__libc_csu_init+0x40>
    ce86:	48 83 c4 08          	add    $0x8,%rsp
    ce8a:	5b                   	pop    %rbx
    ce8b:	5d                   	pop    %rbp
    ce8c:	41 5c                	pop    %r12
    ce8e:	41 5d                	pop    %r13
    ce90:	41 5e                	pop    %r14
    ce92:	41 5f                	pop    %r15
    ce94:	c3                   	retq   
    ce95:	90                   	nop
    ce96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ce9d:	00 00 00 

000000000000cea0 <__libc_csu_fini>:
    cea0:	f3 c3                	repz retq 

Disassembly of section .fini:

000000000000cea4 <_fini>:
    cea4:	48 83 ec 08          	sub    $0x8,%rsp
    cea8:	48 83 c4 08          	add    $0x8,%rsp
    ceac:	c3                   	retq   
